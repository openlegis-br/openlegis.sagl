<dtml-var header_html>

<style>
/* Estilos aprimorados */
.proposicao-container {
    margin: 0 auto;
    padding: 0 15px;
}

.card-proposicao {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    margin-bottom: 25px;
    border: 1px solid #e0e0e0;
}

.card-header {
    background-color: #f8f9fa;
    border-bottom: 1px solid #e0e0e0;
    padding: 1rem 1.5rem;
    border-radius: 10px 10px 0 0 !important;
}

.card-header h5 {
    font-weight: 600;
    color: #2c3e50;
    margin: 0;
}

.section-title {
    font-size: 1.1rem;
    color: #495057;
    font-weight: 500;
    margin-bottom: 1rem;
    border-bottom: 1px solid #eee;
    padding-bottom: 0.5rem;
}

.required-field::after {
    content: " *";
    color: #dc3545;
}

.form-label {
    font-weight: 500;
    color: #495057;
    margin-bottom: 0.5rem;
}

.btn-action {
    border-radius: 6px;
    padding: 0.5rem 1.25rem;
    font-weight: 500;
    transition: all 0.2s;
}

.btn-action-sm {
    padding: 0.35rem 0.75rem;
    font-size: 0.875rem;
}

.drop-area {
    border: 2px dashed #dee2e6;
    border-radius: 8px;
    background-color: #f8f9fa;
    padding: 2rem;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s;
}

.drop-area:hover {
    border-color: #adb5bd;
    background-color: #f1f3f5;
}

.drop-area.highlight {
    border-color: #0d6efd;
    background-color: #e7f1ff;
}

.file-preview {
    display: flex;
    align-items: center;
    padding: 0.75rem 1rem;
    background-color: #f8f9fa;
    border-radius: 6px;
    margin-bottom: 0.75rem;
}

.file-preview-icon {
    font-size: 1.5rem;
    margin-right: 1rem;
    color: #6c757d;
}

.file-preview-info {
    flex-grow: 1;
}

.file-preview-actions {
    margin-left: 1rem;
}

.image-preview-container {
    position: relative;
    margin-bottom: 1rem;
}

.image-preview {
    max-width: 100%;
    border-radius: 6px;
    border: 1px solid #dee2e6;
}

.image-actions {
    bottom: 10px;
    right: 10px;
}

.badge-draft {
    background-color: #6c757d;
    color: white;
}

.badge-submitted {
    background-color: #0d6efd;
    color: white;
}

.badge-received {
    background-color: #198754;
    color: white;
}

.badge-returned {
    background-color: #dc3545;
    color: white;
}

.progress-steps {
    display: flex;
    justify-content: space-between;
    margin-bottom: 2rem;
    position: relative;
}

.progress-steps::before {
    content: "";
    position: absolute;
    top: 15px;
    left: 0;
    right: 0;
    height: 2px;
    background-color: #e9ecef;
    z-index: 1;
}

.step {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    z-index: 2;
}

.step-icon {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: #e9ecef;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 0.5rem;
    color: #6c757d;
    font-size: 1rem;
}

.step.active .step-icon {
    background-color: #0d6efd;
    color: white;
}

.step.completed .step-icon {
    background-color: #198754;
    color: white;
}

.step-label {
    font-size: 0.85rem;
    color: #6c757d;
    text-align: center;
}

.step.active .step-label {
    color: #0d6efd;
    font-weight: 500;
}

.step.completed .step-label {
    color: #198754;
}

.help-text {
    font-size: 0.85rem;
    color: #6c757d;
    margin-top: 0.25rem;
}

/* Melhorias para mobile */
@media (max-width: 768px) {
    .btn-group {
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    .btn-group .btn {
        flex: 1 0 auto;
    }
    
    .progress-steps {
        flex-wrap: wrap;
        gap: 1rem;
    }
    
    .step {
        flex: 1 0 60px;
    }
}

/* Animações */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

.animate-fade-in {
    animation: fadeIn 0.3s ease-out forwards;
}

/* Tooltips personalizados */
.tooltip-inner {
    max-width: 300px;
    padding: 0.5rem 1rem;
    background-color: #495057;
    font-size: 0.85rem;
}

/* Select2 customizado */
.select2-container--default .select2-selection--single {
    height: 38px;
    border: 1px solid #ced4da;
    border-radius: 6px;
}

.select2-container--default .select2-selection--single .select2-selection__rendered {
    line-height: 36px;
    padding-left: 12px;
}

.select2-container--default .select2-selection--single .select2-selection__arrow {
    height: 36px;
}

select.readonly,
.select2-selection.readonly {
    background-color: #e9ecef !important;
    color: #6c757d !important;
    pointer-events: none !important;
    opacity: 1 !important;
    cursor: not-allowed !important;
}

/* Textarea auto-resize */
.auto-resize {
    min-height: 100px;
    resize: none;
    transition: height 0.2s;
}

/* Cards de ação */
.action-card {
    border-left: 4px solid #0d6efd;
    transition: all 0.2s;
}

.action-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
}
/* Estilo para a lista de arquivos */
.list-group {
    max-height: 300px;
    overflow-y: auto;
}

.list-group-item {
    transition: all 0.3s ease;
}

.remove-file {
    opacity: 0.7;
    transition: all 0.2s ease;
}

.remove-file:hover {
    opacity: 1;
    transform: scale(1.1);
}

/* Melhoria na área de drop */
.highlight {
    border-color: #0d6efd !important;
    background-color: #e7f1ff !important;
}

.required-field::after, .form-label.required::after {
    content: ' *';
    color: #dc3545;
    font-weight: bold;
    margin-left: 2px;
}

.sticky-footer-actions {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1060; /* acima dos cards e overlays */
    background: #fff;
    border-top: 1px solid #dee2e6;
    box-shadow: 0 -2px 10px rgba(0,0,0,0.07);
    padding: 0.75rem 1.5rem;
    display: flex;
    justify-content: flex-end; /* ou space-between */
    align-items: center;
    min-height: 64px;
    gap: 1rem;
    transition: box-shadow 0.2s;
}
@media (max-width: 768px) {
    .sticky-footer-actions {
        flex-direction: column;
        align-items: stretch;
        padding: 1rem 0.5rem;
        min-height: 70px;
        gap: 0.5rem;
    }
}
body {
    padding-bottom: 80px !important; /* espaço para não ocultar campos no final */
}

</style>

<dtml-unless dat_envio>
    <dtml-call expr="REQUEST.set('dat_envio',None)">
</dtml-unless>

<dtml-unless dat_recebimento>
    <dtml-call expr="REQUEST.set('dat_recebimento',None)">
</dtml-unless>

<dtml-unless dat_devolucao>
    <dtml-call expr="REQUEST.set('dat_devolucao',None)">
</dtml-unless>

<dtml-call expr="REQUEST.set('prop_enviada',(dat_envio!=None))">

<dtml-call expr="REQUEST.set('prop_recebida',(dat_recebimento!=None))">

<dtml-call expr="REQUEST.set('prop_devolvida',(dat_devolucao!=None))">

<dtml-if expr="_.has_key('cod_proposicao') and AUTHENTICATED_USER.has_role(['Autor'])">
    <dtml-call expr="REQUEST.set('usr_eh_autor',(col_username==AUTHENTICATED_USER.getUserName()))">
    <dtml-call expr="REQUEST.set('estah_alterando','1')">

<dtml-elif expr="_.has_key('cod_proposicao') and AUTHENTICATED_USER.has_role(['Assessor Parlamentar'])">
    <dtml-in expr="zsql.assessor_parlamentar_obter_zsql(col_username=AUTHENTICATED_USER.getUserName())">
      <dtml-in expr="zsql.autor_obter_zsql(cod_parlamentar=cod_parlamentar)">
            <dtml-call expr="REQUEST.set('usr_eh_autor', (col_username==col_username_sel))">
      </dtml-in>
    </dtml-in>
    <dtml-call expr="REQUEST.set('estah_alterando','1')">

<dtml-else>
    <dtml-call expr="REQUEST.set('usr_eh_autor',(1==1))">
    <dtml-call expr="REQUEST.set('estah_alterando','0')">
</dtml-if>

<dtml-if usr_eh_autor>
  <dtml-if expr="AUTHENTICATED_USER.has_role(['Assessor Parlamentar'])">
    <dtml-in expr="zsql.assessor_parlamentar_obter_zsql(col_username=AUTHENTICATED_USER.getUserName())">
      <dtml-in expr="zsql.autor_obter_zsql(cod_parlamentar=cod_parlamentar)">
            <dtml-call expr="REQUEST.set('tip_proposicao_perm',tip_proposicao_sel)">
            <dtml-call expr="REQUEST.set('des_tipo_autor',des_tipo_autor)">
      </dtml-in>
    </dtml-in>

  <dtml-elif expr="AUTHENTICATED_USER.has_role(['Autor'])">
    <dtml-in expr="zsql.autor_obter_zsql(col_username=AUTHENTICATED_USER.getUserName())">
      <dtml-in expr="zsql.tipo_autor_obter_zsql(tip_autor=tip_autor)">
        <dtml-call expr="REQUEST.set('tip_proposicao_perm',tip_proposicao_sel)">
        <dtml-call expr="REQUEST.set('des_tipo_autor',des_tipo_autor)">
      </dtml-in>
    </dtml-in>

  <dtml-else>
    <dtml-in expr="zsql.autor_obter_zsql(col_username=col_username_sel)">
      <dtml-in expr="zsql.tipo_autor_obter_zsql(tip_autor=tip_autor)">
        <dtml-call expr="REQUEST.set('tip_proposicao_perm',tip_proposicao_sel)">
        <dtml-call expr="REQUEST.set('des_tipo_autor',des_tipo_autor)">
      </dtml-in>
    </dtml-in>
  </dtml-if>
<dtml-else>
  <dtml-call expr="REQUEST.set('tip_proposicao_perm', '')">
  <dtml-call expr="REQUEST.set('des_tipo_autor', '')">
</dtml-if>

<div class="proposicao-container">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4 gap-3">
        <div>
            <h1 class="firstHeading font-size-18 h3 mb-2">Proposição Digital</h1>
            <div class="d-flex align-items-center gap-2">
                <dtml-if cod_proposicao>
                    <span class="text-muted small">
                        <i class="far fa-calendar-alt me-1"></i> Criada em <dtml-var dat_criacao missing>
                    </span>
                </dtml-if>
            </div>
        </div>
        
        <div class="d-flex flex-wrap gap-2">
            <dtml-if cod_proposicao>
                <dtml-if expr="(prop_enviada and not prop_devolvida)">
                <dtml-let cod_doc="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">
                    <a class="btn btn-outline-secondary" target="_blank" href="proposicao_recibo_imprimir?cod_documento=<dtml-var cod_doc>" data-bs-toggle="tooltip" title="Imprimir recibo">
                        <i class="fas fa-print me-1"></i> Recibo
                    </a>
                </dtml-let>
                </dtml-if>
                
                <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and not prop_recebida and not prop_devolvida">
                    <div class="modal fade" id="devolucaoModal" tabindex="-1" aria-labelledby="devolucaoModalLabel" aria-hidden="true">
                      <div class="modal-dialog">
                        <div class="modal-content text-start">
                          <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Devolução de Proposição</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                          </div>
                          <div class="modal-body">
                           <form id="myform" class="needs-validation" method="post" action="proposicao_salvar_devolucao_proc" novalidate>
                               <div class="row">
                                   <div class="col-12 mb-3">
                                   <label class="form-label required" for="txt_justif_devolucao">Motivo da Devolução</label>
                                   <textarea class="form-control" name="txt_justif_devolucao" rows="2" required></textarea>
                                   <div class="invalid-feedback">
                                     O motivo da devolução é obrigatório.
                                   </div>
                                   <input type="hidden" name="cod_proposicao" value="<dtml-var cod_proposicao missing>" />
                                   </div>
                               </div>
                               <div class="row">
                                   <div class="col-12 mb-2">
                                   <button class="btn btn-danger" type="submit">Devolver ao Autor</button>
                                   </div>
                               </div>
                               <div class="row">
                                   <div class="col-md-12">
                                       <p class="text-muted small font-size-12"><i class="fas fa-asterisk text-danger"></i> Campo obrigatório</p>
                                   </div>
                               </div>
                           </form>
                          </div>
                        </div>
                      </div>
                    </div>
                </dtml-if>
                
		<dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia'])">
		   <a class="btn btn-outline-primary" href="<dtml-var portal_url>/cadastros/recebimento_proposicao/#protocolo"><i class="fas fa-undo"></i> Voltar</a> 
		<dtml-elif expr="AUTHENTICATED_USER.has_role(['Revisor Proposicao', 'Chefia Revisão'])">
		   <a class="btn btn-outline-primary" href="<dtml-var portal_url>/cadastros/recebimento_proposicao/#pendente"><i class="fas fa-undo"></i> Voltar</a>                        
		</dtml-if>
		<dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])">
		   <a class="btn btn-outline-primary" href="<dtml-var portal_url>/cadastros/proposicao/?ind_enviado=0"><i class="fas fa-undo"></i> Voltar</a>                            
		</dtml-if>
		<dtml-else>
		   <a class="btn btn-outline-primary" href="<dtml-var portal_url>/cadastros/proposicao/?ind_enviado=0"><i class="fas fa-undo"></i> Voltar</a>  
            </dtml-if>
        </div>
    </div>

  <dtml-if cod_proposicao>
    <div class="progress-steps mb-4">
        <div class="step step-draft">
            <div class="step-icon">
                <i class="fas fa-edit"></i>
            </div>
            <span class="step-label">Em elaboração</span>
        </div>
        
        <div class="step step-submitted">
            <div class="step-icon">
                <i class="fas fa-paper-plane"></i>
            </div>
            <span class="step-label">Enviada</span>
        </div>
        
        <div class="step step-received">
            <div class="step-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <span class="step-label">Incorporada</span>
        </div>
        
        <div class="step step-returned">
            <div class="step-icon">
                <i class="fas fa-times-circle"></i>
            </div>
            <span class="step-label">Devolvida</span>
        </div>
    </div>
  </dtml-if>

    <dtml-if dat_solicitacao_devolucao>
        <div class="alert alert-dismissible alert-danger animate-fade-in">
            <div class="d-flex align-items-center">
                <i class="fas fa-exclamation-circle me-2"></i>
                <div class="flex-grow-1">
                    <strong>Devolução solicitada pelo autor em <dtml-var dat_solicitacao_devolucao missing null></strong>
                    <div class="small">Aguarde a análise do setor responsável.</div>
                </div>
                <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão'])">
                    <a class="btn btn-sm btn-outline-secondary ms-2" href="<dtml-var portal_url>/cadastros/proposicao/proposicao_cancelar_devolucao_proc?cod_proposicao=<dtml-var cod_proposicao missing>">
                        Cancelar solicitação
                    </a>
                </dtml-if>
            </div>
        </div>
    </dtml-if>

    <dtml-if cod_proposicao>
        <dtml-call expr="REQUEST.set('id_odt', str(cod_proposicao)+'.odt')">
        <dtml-if expr="hasattr(sapl_documentos.proposicao, id_odt)">
            <dtml-call expr="REQUEST.set('tem_odt', '1')">
        </dtml-if>
        <dtml-call expr="REQUEST.set('id_pdf_normal', str(cod_proposicao)+'.pdf')">
        <dtml-call expr="REQUEST.set('id_pdf_assinado', str(cod_proposicao)+'_signed.pdf')">
        <dtml-if expr="hasattr(sapl_documentos.proposicao, id_pdf_normal) or hasattr(sapl_documentos.proposicao, id_pdf_assinado)">
            <dtml-call expr="REQUEST.set('tem_pdf', '1')">
        </dtml-if>
        <dtml-if expr="hasattr(sapl_documentos.proposicao, id_pdf_assinado)">
            <dtml-call expr="REQUEST.set('tem_pdf_assinado', '1')">
        </dtml-if>
        <dtml-if expr="_.has_key('tem_pdf') and not prop_recebida">
            <div class="alert alert-dismissible alert-info animate-fade-in">
                <div class="d-flex align-items-center">
                    <i class="fas fa-lock me-2"></i>
                    <div>
                        <strong>Edição bloqueada</strong>
                        <div class="small">O texto final já foi gerado.</div>
                    </div>
                </div>
            </div>
        </dtml-if>
    </dtml-if>

<dtml-if expr="usr_eh_autor or AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and prop_enviada">
      <form name="proposicao_form" id="proposicao_form" method="post" action="proposicao_salvar_proc" enctype="multipart/form-data">
        <input type="hidden" name="hdn_alterou" value="0" />
        <input type="hidden" name="hdn_tip_proposicao" value="" />
        <input type="hidden" name="hdn_url" value="proposicao_mostrar_proc?cod_proposicao=<dtml-var cod_proposicao missing>" />
        <input type="hidden" name="hdn_cod_proposicao" value="<dtml-var cod_proposicao missing>" />
        <input type="hidden" name="cod_proposicao" value="<dtml-var cod_proposicao missing>" />

        <div class="card card-proposicao mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-info-circle me-2"></i> Informações da Proposição
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-12 <dtml-if expr="_.has_key('cod_proposicao')">col-md-6</dtml-if>">
                        <div class="form-group">
                            <label class="form-label required-field" for="lst_tip_proposicao">Tipo de Proposição</label>
                            <select class="select2 form-select" id="lst_tip_proposicao" name="lst_tip_proposicao" data-minimum-results-for-search="Infinity" onChange="javascript:tipo_proposicao_mudou()"
                                <dtml-if expr="_.has_key('tem_pdf') or _.has_key('tem_odt')">
                                    disabled
                                <dtml-elif expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and prop_enviada">
                                    disabled
                                <dtml-elif expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and prop_recebida">
                                    disabled
                                <dtml-elif expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and prop_devolvida">
                                    disabled
                                </dtml-if>>
                                <option value="">Selecione</option>
                                <dtml-in expr="zsql.tipo_proposicao_obter_zsql()">
                                    <dtml-if expr="usr_eh_autor">
                                        <dtml-if expr="str(tip_proposicao) in str(tip_proposicao_perm).split(',')">
                                            <option
                                                <dtml-if tip_proposicao_sel>
                                                    <dtml-if expr="_.int(tip_proposicao) == _.int(tip_proposicao_sel)">
                                                        selected
                                                    </dtml-if>
                                                </dtml-if>
                                                value="<dtml-var tip_proposicao>&<dtml-var ind_mat_ou_doc>&<dtml-var nom_modelo url_quote>"><dtml-var des_tipo_proposicao></option>
                                        </dtml-if>
                                    <dtml-else>
                                        <option
                                            <dtml-if tip_proposicao_sel>
                                                <dtml-if expr="_.int(tip_proposicao) == _.int(tip_proposicao_sel)">
                                                    selected
                                                </dtml-if>
                                            </dtml-if>
                                            value="<dtml-var tip_proposicao>&<dtml-var ind_mat_ou_doc>&<dtml-var nom_modelo url_quote>"><dtml-var des_tipo_proposicao></option>
                                    </dtml-if>
                                </dtml-in>
                            </select>
                        </div>
                    </div>
                    
                    <dtml-if cod_proposicao>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="txt_codigo">Código de Autenticidade</label>
                                <div class="input-group">
                                    <input class="form-control" type="text" id="txt_codigo" value="<dtml-var expr="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">" readonly>
                                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="tooltip" title="Copiar código" onclick="navigator.clipboard.writeText('<dtml-var expr="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">')">
                                        <i class="far fa-copy"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-12 col-md-4">
                            <div class="form-group">
                                <label class="form-label">Data de Envio</label>
                                <input class="form-control" type="text" value="<dtml-var dat_envio missing null>" readonly>
                            </div>
                        </div>
                        
                        <div class="col-12 col-md-4">
                            <dtml-if dat_devolucao>
                               <div class="form-group">
                                   <label class="form-label">Data de Devolução</label>
                                   <input class="form-control" type="text" value="<dtml-var dat_devolucao missing null>" readonly>
                               </div>
                            <dtml-else>
                               <div class="form-group">
                                   <label class="form-label">Data de Incorporação</label>
                                   <input class="form-control" type="text" value="<dtml-var dat_recebimento missing null>" readonly>
                               </div>
                            </dtml-if>
                        </div>
                        
                        <div class="col-12 col-md-4">
                            <div class="form-group">
                                <label class="form-label">Situação</label>
                                <dtml-if dat_recebimento>
                                    <dtml-if cod_mat_ou_doc>
                                        <dtml-if expr="ind_mat_ou_doc=='D'">
                                            <dtml-call expr="REQUEST.set('cod_mat', cod_materia)">
                                        <dtml-elif expr="ind_mat_ou_doc=='M'">
                                            <dtml-call expr="REQUEST.set('cod_mat', cod_mat_ou_doc)">
                                        </dtml-if>
                                        <dtml-in expr="zsql.materia_obter_zsql(cod_materia=cod_mat)">
                                            <a class="btn btn-outline-primary w-100 text-start" href="<dtml-var portal_url>/consultas/materia/materia_mostrar_proc?cod_materia=<dtml-var cod_mat>" target="_blank">
                                                <i class="fas fa-link me-1"></i> <dtml-var des_tipo_materia> nº <dtml-var num_ident_basica>/<dtml-var ano_ident_basica>
                                            </a>
                                        </dtml-in>
                                    <dtml-elif dat_devolucao>
                                        <input class="form-control bg-danger bg-opacity-10" type="text" value="Devolvida" readonly>
                                    <dtml-else>
                                        <input class="form-control" type="text" value="Aguardando análise" readonly>
                                    </dtml-if>
                                 <dtml-elif expr="dat_envio and not _.has_key('tem_pdf')">
                                     <input class="form-control" type="text" value="Em Revisão" readonly>
                                <dtml-elif dat_devolucao>
                                     <input class="form-control" type="text" value="Devolvida" readonly>
                                <dtml-elif expr="(dat_envio and not dat_recebimento) and _.has_key('tem_pdf_assinado')">
                                     <input class="form-control" type="text" value="Em análise" readonly>
                                <dtml-else>
                                    <input class="form-control" type="text" value="Em elaboração" readonly>
                                </dtml-if>
                            </div>
                        </div>
                    </dtml-if>
                </div>
            </div>
        </div>

        <dtml-if prop_devolvida>
            <div class="card card-proposicao mb-4 border-danger">
                <div class="card-header bg-danger bg-opacity-10">
                    <h5 class="card-title mb-0 text-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i> Motivo de Devolução
                    </h5>
                </div>
                <div class="card-body">
                    <div class="alert alert-light">
                        <dtml-var txt_justif_devolucao missing>
                    </div>
                </div>
            </div>
        </dtml-if>

        <dtml-if expr="_.has_key('cod_proposicao') and AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão'])">
            <div class="card card-proposicao mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-user-tag me-2"></i> Autoria
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label class="form-label">Nome do Autor</label>
                                <input class="form-control" type="text" value="<dtml-var nom_autor missing>" readonly>
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label class="form-label">Tipo de Autor</label>
                                <input class="form-control" type="text" value="<dtml-var des_tipo_autor missing>" readonly>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </dtml-if>

        <div class="card card-proposicao mb-4" id="cardAssunto" <dtml-if expr="(not _.has_key('cod_proposicao') or ind_mat_ou_doc=='D') or (_.has_key('cod_proposicao') and (des_tipo_proposicao!='Requerimento' and des_tipo_proposicao!='Indicação' and des_tipo_proposicao!='Moção'))">style="display:none;"</dtml-if>>
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-tag me-2"></i> Assunto
                </h5>
            </div>
            <div class="card-body">
              <div class="row">
               <div class="col-12">
                <div class="form-group w-100">
                    <label class="form-label required-field" for="lst_assunto">Assunto da Proposição</label>
			<select class="select2 form-select" id="lst_assunto" name="lst_assunto">
			    <option value="">Selecione</option>
			    <dtml-unless tip_proposicao_sel>
			       <dtml-call expr="REQUEST.set('tip_proposicao_sel', '')">
			    </dtml-unless>
			    <dtml-in expr="zsql.assunto_proposicao_obter_zsql(tip_proposicao=tip_proposicao_sel)" mapping>
				<option
				    <dtml-if cod_assunto_sel>
					<dtml-if expr="_.int(cod_assunto_sel) == _.int(cod_assunto)">
					    selected
					</dtml-if>
				    </dtml-if>
				    value="<dtml-var cod_assunto>">
				    <dtml-var des_assunto> (<dtml-var nom_orgao>)
				</option>
			    </dtml-in>
			</select>
                    <div class="help-text">Selecione o assunto mais adequado para classificar sua proposição</div>
                </div>
               </div>
              </div>
            </div>
        </div>

<div class="card card-proposicao mb-4" id="divIndicaEndereco" <dtml-if "not _.has_key('cod_proposicao') or (_.has_key('des_tipo_proposicao') and des_tipo_proposicao!='Indicação')">style="display:none;"</dtml-if>>
	    <div class="card-header">
		<h5 class="card-title mb-0">
		    <i class="fas fa-map-marker-alt me-2"></i> Endereço da Indicação
		</h5>
	    </div>
	    <div class="card-body">
		<div class="row g-3">
		
		    <!-- Campo CEP -->
		    <div class="col-12 col-md-3">
		        <div class="form-group">
		            <label class="form-label required-field" for="txt_num_cep">CEP</label>
		            <input class="form-control cep" type="text" id="txt_num_cep" name="txt_num_cep" 
		                   placeholder="00000-000" value="<dtml-var num_cep missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		            <div class="help-text">Informe o CEP para localização</div>
		        </div>
		    </div>
		    
		    <!-- Campo Logradouro -->
		    <div class="col-12 col-md-5">
		        <div class="form-group">
		            <label class="form-label" for="txt_nom_logradouro">Logradouro</label>
		            <input class="form-control" type="text" id="txt_nom_logradouro" name="txt_nom_logradouro" 
		                   value="<dtml-var nom_logradouro missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		        </div>
		    </div>
		    
		    <!-- Campo Número/Complemento -->
		    <div class="col-12 col-md-4">
		        <div class="form-group">
		            <label class="form-label" for="txt_complemento_endereco">Complemento</label>
		            <input class="form-control" type="text" id="txt_complemento_endereco" name="txt_complemento_endereco" 
		                   placeholder="Número, ponto de referência, etc." value="<dtml-var complemento_endereco missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		        </div>
		    </div>
		    
		    <!-- Campo Bairro -->
		    <div class="col-12 col-md-4">
		        <div class="form-group">
		            <label class="form-label" for="txt_nom_bairro">Bairro</label>
		            <input class="form-control" type="text" id="txt_nom_bairro" name="txt_nom_bairro" 
		                   value="<dtml-var nom_bairro missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		        </div>
		    </div>
		    
		    <!-- Campo Cidade -->
		    <div class="col-12 col-md-4">
		        <div class="form-group">
		            <label class="form-label" for="txt_nom_cidade">Cidade</label>
		            <input class="form-control" type="text" id="txt_nom_cidade" name="txt_nom_cidade" 
		                   value="<dtml-var nom_cidade missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		        </div>
		    </div>
		    
		    <!-- Campo UF -->
		    <div class="col-12 col-md-4">
		    <div class="form-group">
			<label class="form-label" for="txt_sgl_uf">UF</label>
			<input 
			  type="text" 
			  class="form-control" 
			  id="txt_sgl_uf" 
			  name="txt_sgl_uf" 
			  maxlength="2" 
			  pattern="[A-Z]{2}" 
			  placeholder="UF" 
			  value="<dtml-var sgl_uf missing null>"
			  style="text-transform:uppercase;"
			  oninput="this.value = this.value.toUpperCase();"
			  <dtml-if "_.has_key('tem_pdf') or _.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>
			>
		    </div>
		    </div>
				<div id="avisoEmentaManual" class="alert alert-warning mb-2 py-2 small"
				    <dtml-if "_.has_key('txt_num_cep') and txt_num_cep == '00000-000'"></dtml-if>
				    <dtml-unless "_.has_key('txt_num_cep') and txt_num_cep == '00000-000'">style="display:none;"</dtml-unless>
				>
				    <i class="fas fa-unlock me-1"></i>
				    Os campos de <b>endereço</b> foram liberados para edição manual porque o CEP informado é <b>00000-000</b> (CEP zerado).
				    <br>Preencha os campos de logradouro e bairro conforme a necessidade da indicação.
				</div>
                        <div id="loadingCEP"></div>
		</div>
	    </div>
	</div>

        <div class="card card-proposicao mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-align-left me-2"></i> Conteúdo da Proposição
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-12">
			<div class="form-group position-relative">
			    <dtml-if expr="_.has_key('des_tipo_proposicao') and des_tipo_proposicao == 'Indicação'">
				<label class="form-label required-field" for="txt_descricao">
				    Ementa
				    <span id="badgeEmentaAuto"
					  class="badge bg-secondary ms-1"
					  <dtml-if "_.has_key('txt_num_cep') and txt_num_cep == '00000-000'">style="display:none;"</dtml-if>
				    >Automática</span>
				</label>
				<textarea class="form-control auto-resize" id="txt_descricao" name="txt_descricao" rows="3"
                                  <dtml-if "des_tipo_proposicao == 'Indicação' and _.has_key('txt_num_cep') and txt_num_cep == '00000-000'"></dtml-if>
                                  <dtml-if expr="_.has_key('tem_pdf') or _.has_key('tem_odt')">readonly</dtml-if>
                                  <dtml-unless "des_tipo_proposicao == 'Indicação' and _.has_key('txt_num_cep') and txt_num_cep == '00000-000'">readonly</dtml-unless>
                                ><dtml-var txt_descricao missing></textarea>
				<div id="helpEmentaAuto" class="help-text small text-muted"
				     <dtml-if "_.has_key('txt_num_cep') and txt_num_cep == '00000-000'">style="display:none;"</dtml-if>
				>
				    A ementa é gerada automaticamente com base no assunto e endereço informados.
				</div>
			    <dtml-else>
				<label class="form-label required-field" for="txt_descricao">Ementa</label>
				<textarea class="form-control auto-resize" id="txt_descricao" name="txt_descricao" rows="3"><dtml-var txt_descricao missing></textarea>
				<div class="help-text">Preencha a ementa de acordo com o tipo de proposição</div>
			    </dtml-if>
			</div>
                    </div>
                </div>

                <div id="divJustificativa" <dtml-if expr="_.has_key('des_tipo_proposicao') and des_tipo_proposicao != 'Indicação'">style="display:none;"</dtml-if>>
                    <div class="row g-3 mt-3">
                        <div class="col-12">
                            <div class="form-group">
                                <label class="form-label required-field" for="txa_txt_justificativa">Justificativa</label>
                                <textarea class="form-control auto-resize" id="txa_txt_justificativa" name="txa_txt_justificativa" rows="3" <dtml-if expr="_.has_key('tem_pdf') or _.has_key('tem_odt')">readonly</dtml-if>><dtml-var txt_justificativa missing null></textarea>
                                <div class="help-text">Apresente os motivos e argumentos que fundamentam esta indicação</div>
                            </div>
                        </div>
                    </div>
                </div>
                
            </div>
        </div>

        <div class="card card-proposicao mb-4" id="divMat" <dtml-if expr="not _.has_key('cod_proposicao') or ind_mat_ou_doc=='M'">style="display:none;"</dtml-if>>
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-link me-2"></i> Matéria Vinculada
                </h5>
            </div>
            <div class="card-body" id="divMatBody">
                <div class="row g-3">
                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label class="form-label required-field" for="lst_tip_id_basica">Tipo de Matéria</label>
                            <select class="select2 form-select" id="lst_tip_id_basica" name="lst_tip_id_basica" <dtml-if "not _.has_key('tip_id_basica_sel') or prop_recebida or prop_devolvida">disabled</dtml-if>>
                                <option value="">Selecione</option>
                                <dtml-in expr="zsql.tipo_materia_legislativa_obter_zsql(tip_natureza='P')">
                                    <option
                                        <dtml-if tip_id_basica_sel>
                                            <dtml-if expr="_.int(tip_materia) == _.int(tip_id_basica_sel)">
                                                selected
                                            </dtml-if>
                                        </dtml-if>
                                        value="<dtml-var tip_materia>">
                                        <dtml-var des_tipo_materia>
                                    </option>
                                </dtml-in>
                            </select>
                        </div>
                    </div>
                    
                    <div class="col-12 col-md-2">
                        <div class="form-group">
                            <label class="form-label required-field" for="txt_num_ident_basica">Número</label>
                            <input class="form-control" type="number" id="txt_num_ident_basica" name="txt_num_ident_basica" value="<dtml-var num_ident_basica_sel missing null="1">"
                                <dtml-if "not _.has_key('num_ident_basica_sel') or prop_recebida">
                                    disabled
                                </dtml-if> />
                        </div>
                    </div>
                    
                    <div class="col-12 col-md-2">
                        <div class="form-group">
                            <label class="form-label required-field" for="txt_ano_ident_basica">Ano</label>
                            <input class="form-control year" type="number" id="txt_ano_ident_basica" name="txt_ano_ident_basica" value="<dtml-var ano_ident_basica_sel missing>"
                                <dtml-if "not _.has_key('ano_ident_basica_sel') or prop_recebida">
                                    disabled
                                </dtml-if> />
                        </div>
                    </div>
                    
                    <div class="col-12 col-md-2 d-flex align-items-end">
                        <dtml-if expr="not _.has_key('tem_pdf') or not _.has_key('tem_odt')">
                            <button id="postjq" type="button" class="btn btn-outline-primary w-100">Obter Ementa</button>
                        </dtml-if>
                    </div>
                </div>
            </div>
        </div>

		<dtml-if expr="_.has_key('des_tipo_proposicao') and (des_tipo_proposicao in ['Indicação', 'Requerimento'])">
		  <div class="accordion accordion-flush accordion-plus-icon mb-4" id="accordionMaps">
		    <div class="card card-proposicao mb-0 shadow-sm">
		      <div class="card-header accordion-header d-flex align-items-center px-0 py-1" id="headingMaps"
			   style="background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; border-radius: 10px 10px 0 0;">
			<button class="accordion-button collapsed bg-transparent shadow-none d-flex align-items-center w-100"
				type="button"
				data-bs-toggle="collapse"
				data-bs-target="#collapseMaps"
				aria-expanded="false"
				aria-controls="collapseMaps"
				style="font-size: 15px; font-weight: 600; color: #2c3e50; min-height: 0; box-shadow: none; line-height:1.1;">
			  <i class="fas fa-camera me-2"></i>
			  Fotografias
			</button>
		      </div>
 
                <div id="collapseMaps" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionMaps">
                    <div class="card-body">
                        <div class="row g-3" id="form-container">
                            <dtml-in expr="_.range(1, 5)" prefix="i">
                                <dtml-call expr="REQUEST.set('idx', i_index + 1)">
                                <dtml-if cod_proposicao>
                                   <dtml-call expr="REQUEST.set('id_foto', str(cod_proposicao)+'_image_'+_.str(idx)+'.jpg')">
                                </dtml-if>
                                <div class="col-12 col-md-6" id="foto-container-<dtml-var idx>">
                                    <div class="form-group">
                                        <label class="form-label">Fotografia <dtml-var idx></label>
                                        <div id="foto<dtml-var idx>-preview" class="mt-2 image-preview-container">
                                            <dtml-if "hasattr(sapl_documentos.proposicao, id_foto)">
                                                <div class="text-center">
                                                    <img class="img-fluid image-preview animate-fade-in mb-2"
                                                        src="<dtml-var portal_url>/sapl_documentos/proposicao/<dtml-var id_foto>?<dtml-var expr='DateTime().timeTime()'>"
                                                        alt="Fotografia <dtml-var idx>">
                                                    <dtml-if expr="not _.has_key('tem_pdf') and not _.has_key('tem_odt')">
                                                    <div class="image-actions">
                                                        <button type="button"
                                                                class="btn btn-danger btn-sm text-white"
                                                                onclick="excluirImagem(<dtml-var idx>, '<dtml-var cod_proposicao missing>')">
                                                                <i class="far fa-trash-alt me-1"></i> Excluir
                                                        </button>
                                                    </div>
                                                    </dtml-if>
                                                </div>
                                            <dtml-else>
                                                <dtml-if expr="not _.has_key('tem_pdf') and not _.has_key('tem_odt')">
                                                    <div id="uploadForm<dtml-var idx>" enctype="multipart/form-data">
                                                        <input type="hidden" name="indice" value="<dtml-var idx>">
                                                        <input type="file" name="file_nom_image<dtml-var idx>" class="form-control"
                                                                accept="image/*" onchange="enviarImagem(this.form, <dtml-var idx>)">
                                                        <div class="help-text mt-2">Formatos suportados: JPG, PNG, GIF. Tamanho máximo: 5MB.</div>
                                                    </div>
                                                <dtml-else>
                                                    <div class="alert alert-light mb-2">Não enviada</div>
                                                </dtml-if>
                                            </dtml-if>
                                        </div>
                                    </div>
                                </div>
                            </dtml-in>
                        </div>
                    </div>
                </div>
            </div>
        </div>
       </dtml-if>

    <dtml-if cod_proposicao>
	<div class="accordion accordion-flush accordion-plus-icon mb-4" id="accordionAnexos">
	       <div class="card card-proposicao mb-0 shadow-sm">
		  <div class="card-header accordion-header d-flex align-items-center px-0 py-1" id="headingAnexos"
		     style="background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; border-radius: 10px 10px 0 0;">
			    <button class="accordion-button collapsed bg-transparent shadow-none d-flex align-items-center w-100"
				    type="button"
				    data-bs-toggle="collapse"
				    data-bs-target="#collapseAnexos"
				    role="button"
				    aria-expanded="false"
				    aria-controls="collapseAnexos"
				    style="font-size: 15px; font-weight: 600; color: #2c3e50; min-height: 0; box-shadow: none; line-height:1.1;">
				<i class="fas fa-file-alt me-2"></i>
				Anexos PDF
			    </button>
		  </div>

		    <div id="collapseAnexos" class="accordion-collapse collapse" aria-labelledby="headingAnexos" data-bs-parent="#accordionAnexos">
		      <div class="card-body">
			<div id="current_pdf_attachments" class="mb-3">
			  <dtml-in expr="pysc.anexo_proposicao_pysc(cod_proposicao, listar=True)" prefix="file">
			    <dtml-if expr="hasattr(sapl_documentos.proposicao, file_item)">
			      <dtml-let documento="getattr(sapl_documentos.proposicao,file_item).absolute_url">
				<div class="file-preview animate-fade-in" id="preview-<dtml-var file_item>">
				  <i class="file-preview-icon fas fa-file-pdf text-danger"></i>
				  <div class="file-preview-info">
				    <a target="_blank" href="<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" class="text-decoration-none text-dark">
				      Anexo <dtml-var expr="file_item.split('anexo_')[1]">
				    </a>
				  </div>
				  <dtml-if expr="not _.has_key('tem_pdf') and not prop_recebida">
				    <div class="file-preview-actions">
				      <button type="button" class="btn btn-sm btn-outline-danger"
				        onclick="showConfirmModal('Excluir Anexo', 'Deseja realmente excluir este anexo?', function() { excluirAnexoAjax('<dtml-var file_item>', '<dtml-var cod_proposicao missing>'); });">
				        <i class="far fa-trash-alt"></i> Excluir
				      </button>
				    </div>
				  </dtml-if>
				</div>
			      </dtml-let>
			    </dtml-if>
			  <dtml-else>
			    <p class="text-muted small">Nenhum documento anexado.</p>
			  </dtml-in>
			</div>

		        <dtml-if expr="not _.has_key('tem_pdf') and not prop_recebida">
		            <div class="drop-area mb-3" id="pdf-drop-area">
		                <p class="mb-0 text-muted">Arraste e solte arquivos PDF aqui ou <a href="#" id="pdf-browse-link">clique para selecionar</a>.</p>
		                <input type="file" name="file_nom_anexo:list" accept="application/pdf" multiple style="display: none;" id="file_nom_anexo_input">
		            </div>
		            <div id="pdf-upload-preview" class="mb-3"></div>
		        </dtml-if>
		    </div>
		</div>
	    </div>
	</div>
       
        <div class="card card-proposicao mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-file-word me-2"></i> Documentos e Edição
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
			<div id="divEdicaoOdt" class="col-12 col-lg-6">
			    <div class="form-group">
				<label class="form-label d-block">Texto Editável (ODT)</label>
				<div class="d-flex flex-wrap gap-2">
				    <dtml-let id_documento="str(cod_proposicao)+'.odt'">
					<dtml-if "hasattr(sapl_documentos.proposicao,id_documento)">
					    <dtml-let documento="getattr(sapl_documentos.proposicao,id_documento).absolute_url">
						<dtml-call expr="REQUEST.set('nome_arquivo',str(cod_proposicao)+'.odt')">
						<!-- === EM REVISÃO: Só Visualizar para Autor, Editar para Revisores === -->
					    <dtml-let id_original="str(cod_proposicao)+'_original.odt'">
						<dtml-if "hasattr(sapl_documentos.proposicao,id_original) and prop_enviada">
						    <dtml-let documento="getattr(sapl_documentos.proposicao,id_original).absolute_url">
							<a class="btn btn-outline-secondary" href="<dtml-var portal_url>/generico/viewerJS/#<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Visualizar o texto original">
							    <i class="fa fa-fw fa-file-alt me-1"></i>Texto Original
							</a>
						    </dtml-let>
						</dtml-if>
					    </dtml-let>
						<dtml-if expr="dat_envio and _.has_key('tem_odt') and not _.has_key('tem_pdf') and not dat_recebimento">
						    <dtml-if expr="('Revisor Proposicao' in AUTHENTICATED_USER.getRoles()) or ('Operador' in AUTHENTICATED_USER.getRoles()) or ('Operador Materia' in AUTHENTICATED_USER.getRoles()) or ('Chefia Revisão' in AUTHENTICATED_USER.getRoles())">
						        <a class="btn btn-outline-primary" href="<dtml-var portal_url>/webeditor/editorProposicao?<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Editar diretamente no navegador">
						            <i class="fa fa-fw fa-edit me-1"></i>Editar Online
						        </a>
						        <button type="button" class="btn btn-outline-info" onclick="javascript:location.href='<dtml-var portal_url>/sapl_documentos/proposicao/externalEdit_/<dtml-var nome_arquivo>.zem'" data-bs-toggle="tooltip" title="Editar usando LibreOffice (requer instalação)">
						            <i class="fas fa-fw fa-external-link-alt me-1"></i>LibreOffice
						        </button>
						        <button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('odt')">
						            <i class="far fa-trash-alt me-1"></i> Excluir ODT
						        </button>
						    <dtml-else>
						        <!-- Somente visualizar para o autor ou quem não é revisor -->
						        <a class="btn btn-outline-primary" href="<dtml-var portal_url>/generico/viewerJS/#<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Visualizar ODT">
						            <i class="fa fa-fw fa-file-alt me-1"></i>Visualizar ODT
						        </a>
						    </dtml-if>
						<!-- === RASCUNHO: Editar liberado para todos exceto quando PDF gerado ou prop_enviada === -->
						<dtml-elif expr="not _.has_key('tem_pdf') and (not prop_enviada)">
						    <dtml-if expr="des_tipo_proposicao=='Indicação'">
						        <a class="btn btn-outline-primary" href="<dtml-var portal_url>/generico/viewerJS/#<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Visualizar ODT">
						            <i class="fa fa-fw fa-file-alt me-1"></i>Visualizar ODT
						        </a>
						    </dtml-if>
						    <a class="btn btn-outline-primary" href="<dtml-var portal_url>/webeditor/editorProposicao?<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Editar diretamente no navegador">
						        <i class="fa fa-fw fa-edit me-1"></i>Editar Online
						    </a>
						    <button type="button" class="btn btn-outline-info" onclick="javascript:location.href='<dtml-var portal_url>/sapl_documentos/proposicao/externalEdit_/<dtml-var nome_arquivo>.zem'" data-bs-toggle="tooltip" title="Editar usando LibreOffice (requer instalação)">
						        <i class="fas fa-fw fa-external-link-alt me-1"></i>LibreOffice
						    </button>
						    <button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('odt')">
						        <i class="far fa-trash-alt me-1"></i> Excluir ODT
						    </button>
						<!-- === Apenas Visualizar nos demais casos === -->
						<dtml-else>
						    <a class="btn btn-outline-primary" href="<dtml-var portal_url>/generico/viewerJS/#<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Visualizar ODT">
						        <i class="fa fa-fw fa-file-alt me-1"></i>Visualizar ODT
						    </a>
						</dtml-if>
					    </dtml-let>
					<dtml-else>
					    <div class="input-group">
						<dtml-if expr="(not prop_devolvida and not prop_recebida)">
						    <select class="form-select" id="lst_modelo" name="lst_modelo">
						    </select>
						    <button type="button" class="btn btn-outline-success" onclick="javascript:texto_odt_gerar();">
						        <i class="fas fa-magic me-1"></i> Gerar do Modelo
						    </button>
						</dtml-if>
					    </div>
					</dtml-if>
				    </dtml-let>
				</div>
                        </div>
                    </div>
			<div class="col-12 col-lg-6">
			    <div class="form-group">
				<label class="form-label d-block">Texto Final (PDF)</label>
				<div class="d-flex flex-wrap gap-2">
				    <dtml-call expr="REQUEST.set('id_documento', str(cod_proposicao)+'.pdf')">
				    <dtml-call expr="REQUEST.set('id_documento_assinado', str(cod_proposicao)+'_signed.pdf')">
				    <dtml-if "hasattr(sapl_documentos.proposicao,id_documento_assinado)">
					<dtml-let documento_assinado="getattr(sapl_documentos.proposicao,id_documento_assinado).absolute_url">
					    <a class="btn btn-outline-primary" target="_blank" href="<dtml-var documento_assinado>?<dtml-var expr="ZopeTime().timeTime()">" data-bs-toggle="tooltip" title="Visualizar o PDF com assinaturas digitais">
						<i class="fas fa-certificate me-1"></i> Arquivo Assinado
					    </a>
					</dtml-let>
					<dtml-if expr="not prop_recebida and not prop_devolvida">
					    <dtml-if expr="sapl_documentos.props_sagl.restpki_access_token!=''">
						<button type="button" class="btn btn-outline-info"
						        data-bs-toggle="modal"
						        data-bs-target="#iFrameModal"
						        data-title="Assinaturas Digitais"
						        data-src="<dtml-var portal_url>/cadastros/assinatura/assinatura_solicitar_form?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						        data-bs-toggle="tooltip"
						        title="Verificar e gerenciar assinaturas digitais">
						    <i class="fas fa-file-signature me-1"></i> Assinaturas
						</button>
					    </dtml-if>
					</dtml-if>
					<dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])  and not prop_enviada and not prop_devolvida">
					    <button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('assinado')"
						    data-bs-toggle="tooltip" title="Remover o PDF assinado digitalmente">
						<i class="far fa-trash-alt me-1"></i> Excluir PDF
					    </button>
					<dtml-elif expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and not prop_recebida and not prop_devolvida">
					    <button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('assinado')"
						    data-bs-toggle="tooltip" title="Remover o PDF assinado digitalmente">
						<i class="far fa-trash-alt me-1"></i> Excluir PDF
					    </button>
					</dtml-if>
				    <dtml-elif "hasattr(sapl_documentos.proposicao,id_documento)">
					<dtml-let documento="getattr(sapl_documentos.proposicao,id_documento).absolute_url">
					    <a class="btn btn-outline-primary" target="_blank" href="<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" data-bs-toggle="tooltip" title="Visualizar o PDF gerado">
						<i class="fa fa-fw fa-file-pdf me-1"></i>Visualizar PDF
					    </a>

					    <!-- Botão Solicitar Assinatura para perfis permitidos -->
					    <dtml-if expr="('Operador' in AUTHENTICATED_USER.getRoles()) or
						           ('Operador Materia' in AUTHENTICATED_USER.getRoles()) or
						           ('Revisor Proposicao' in AUTHENTICATED_USER.getRoles()) or
						           ('Chefia Revisão' in AUTHENTICATED_USER.getRoles())">
						<dtml-if expr="sapl_documentos.props_sagl.restpki_access_token!=''">
						    <button type="button" class="btn btn-outline-info"
						            data-bs-toggle="modal"
						            data-bs-target="#iFrameModal"
						            data-title="Assinaturas Digitais"
						            data-src="<dtml-var portal_url>/cadastros/assinatura/assinatura_solicitar_form?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						            data-bs-toggle="tooltip"
						            title="Verificar e gerenciar assinaturas digitais">
						        <i class="fas fa-file-signature me-1"></i> Assinaturas
						    </button>
						</dtml-if>
					    </dtml-if>

					    <dtml-if expr="not prop_recebida and not prop_devolvida">
						<dtml-if expr="sapl_documentos.props_sagl.restpki_access_token!=''">
						    <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor']) and des_tipo_autor != 'Mesa Diretora' and des_tipo_autor != 'Comissao' and des_tipo_autor != 'Externo' and des_tipo_autor != 'Poder Executivo'">
						        <dtml-if expr="(des_tipo_proposicao=='Requerimento' or des_tipo_proposicao=='Indicação' or des_tipo_proposicao=='Moção' or des_tipo_proposicao=='Pedido de Informação')">
						            <dtml-if expr="int(sapl_documentos.props_sagl.assinatura_simples)==1">
						                <button type="button" class="btn btn-outline-secondary"
						                        onclick="showConfirmModal('Assinatura Simples', 'Confirma a assinatura simples da proposição?', function() { location.href='<dtml-var portal_url>/cadastros/proposicao/assinar_pdf?cod_proposicao=<dtml-var cod_proposicao missing>'; });"
						                        data-bs-toggle="tooltip" title="Adicionar uma assinatura simples">
						                    <i class="fas fa-file-signature me-1"></i> Assinatura Simples
						                </button>
						            </dtml-if>
						        </dtml-if>
						        <button type="button" class="btn btn-outline-info"
						                data-bs-toggle="modal"
						                data-bs-target="#iFrameModal"
						                data-title="Assinar Digitalmente com ICP-Brasil"
						                data-src="<dtml-var portal_url>/generico/assinador/pades-signature_html?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						                data-bs-toggle="tooltip" title="Assinar digitalmente com certificado ICP-Brasil">
						            <i class="fas fa-file-signature me-1"></i> Assinar ICP-Brasil
						        </button>
						    </dtml-if>
						    <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor']) and (des_tipo_autor == 'Externo' or des_tipo_autor == 'Poder Executivo')">
						        <dtml-if expr="int(sapl_documentos.props_sagl.assinatura_simples)==1">
						            <button type="button" class="btn btn-outline-secondary"
						                    onclick="showConfirmModal('Assinatura Simples', 'Confirma a assinatura simples da proposição?', function() { location.href='<dtml-var portal_url>/cadastros/proposicao/assinar_pdf?cod_proposicao=<dtml-var cod_proposicao missing>'; });"
						                    data-bs-toggle="tooltip" title="Adicionar uma assinatura simples">
						                <i class="fas fa-file-signature me-1"></i> Assinatura Simples
						            </button>
						        </dtml-if>
						        <button type="button" class="btn btn-outline-info"
						                data-bs-toggle="modal"
						                data-bs-target="#iFrameModal"
						                data-title="Assinar Digitalmente com ICP-Brasil"
						                data-src="<dtml-var portal_url>/generico/assinador/pades-signature_html?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						                title="Assinar digitalmente com certificado ICP-Brasil">
						            <i class="fas fa-file-signature me-1"></i> Assinar ICP-Brasil
						        </button>
						    </dtml-if>
						    <dtml-if expr="AUTHENTICATED_USER.has_role(['Assessor Parlamentar']) or (des_tipo_autor == 'Mesa Diretora' or des_tipo_autor == 'Comissao')">
						        <button type="button" class="btn btn-outline-info"
						                data-bs-toggle="modal"
						                data-bs-target="#iFrameModal"
						                data-title="Assinaturas Digitais"
						                data-src="<dtml-var portal_url>/cadastros/assinatura/assinatura_solicitar_form?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						                title="Verificar e gerenciar assinaturas digitais">
						            <i class="fas fa-file-signature me-1"></i> Assinaturas
						        </button>
						    </dtml-if>
						</dtml-if>
					    </dtml-if>
					      <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and not prop_enviada and not prop_devolvida">
						<button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('pdf')" data-bs-toggle="tooltip" title="Remover o arquivo PDF">
						    <i class="far fa-trash-alt me-1"></i> Excluir PDF
						</button>
					      <dtml-elif expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and not prop_recebida and not prop_devolvida">
					        <button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('pdf')"
						    data-bs-toggle="tooltip" title="Remover o PDF assinado digitalmente">
						<i class="far fa-trash-alt me-1"></i> Excluir PDF
					        </button>
					    </dtml-if>
					</dtml-let>
				    <dtml-else>
					<div class="input-group">
					    <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and (des_tipo_autor == 'Parlamentar')">
					    <dtml-else>
						<input type="file" class="form-control" id="file_nom_arquivo" name="file_nom_arquivo" accept="application/pdf">
					    </dtml-if>
					    <dtml-let id_documento_odt="str(cod_proposicao)+'.odt'">
						<dtml-if "hasattr(sapl_documentos.proposicao,id_documento_odt)">
						    <dtml-call expr="REQUEST.set('temODT', 1)">
						</dtml-if>
					    </dtml-let>
					    <dtml-if expr="_.has_key('temODT')">
						<button type="button" id="btn-gerar-pdf" class="btn btn-outline-success" onclick="javascript:texto_pdf_gerar();" data-bs-toggle="tooltip" title="Converter ODT para PDF">
						    <i class="fas fa-file-pdf me-1"></i> Converter ODT
						</button>
					    <dtml-else>
						<button type="button" id="btn-gerar-pdf" class="btn btn-outline-secondary" disabled data-bs-toggle="tooltip" title="Não há ODT para converter">
						    <i class="fas fa-file-pdf me-1"></i> Converter ODT
						</button>
					    </dtml-if>
					</div>
				    </dtml-if>
				</div>
			    </div>
			  </div>
			</div>
            </div>
        </div>
       </dtml-if>

	<dtml-if cod_proposicao>
	  <div class="accordion accordion-flush accordion-plus-icon mb-4" id="accordionEquipe">
	    <div class="card card-proposicao mb-0 shadow-sm">
	      <div class="card-header accordion-header d-flex align-items-center px-0 py-1" id="headingEquipe"
		   style="background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; border-radius: 10px 10px 0 0;">
		<button class="accordion-button collapsed bg-transparent shadow-none d-flex align-items-center w-100"
		        type="button"
		        data-bs-toggle="collapse"
		        data-bs-target="#collapseEquipe"
		        aria-expanded="false"
		        aria-controls="collapseEquipe"
		        style="font-size: 15px; font-weight: 600; color: #2c3e50; min-height: 0; box-shadow: none; line-height:1.1;">
		  <i class="fas fa-users-cog me-2"></i>
		  Equipe de Apoio
		</button>
	      </div>

	      <div id="collapseEquipe" class="accordion-collapse collapse" aria-labelledby="headingEquipe" data-bs-parent="#accordionEquipe">
		<div class="card-body">
		  <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and (des_tipo_autor == 'Parlamentar')">
		    <div class="row g-3">
		      <div class="col-12 col-md-6">
		        <div class="form-group">
		          <label class="form-label" for="lst_assessor">Assessor Responsável</label>
		          <select class="form-select" id="lst_assessor" name="lst_assessor" 
		                  <dtml-if expr="prop_enviada">disabled</dtml-if>>
		            <option value=""></option>
		            <dtml-in expr="zsql.assessor_parlamentar_obter_zsql(cod_parlamentar=cod_parlamentar_sel)">
		              <dtml-if expr="not dat_exoneracao or dat_exoneracao == ''">
		                <option value="<dtml-var cod_assessor>" 
		                        <dtml-if "cod_assessor_sel and _.int(cod_assessor) == _.int(cod_assessor_sel)">
		                          selected
		                        </dtml-if>>
		                  <dtml-var nom_assessor>
		                </option>
		              </dtml-if>
		            </dtml-in>
		          </select>
		        </div>
		      </div>
		      <div class="col-12 col-md-6">
		        <div class="form-group">
		          <label class="form-label" for="nom_revisor">Revisor Designado</label>
		          <dtml-if expr="prop_enviada and cod_revisor">
		            <dtml-in expr="zsql.usuario_obter_zsql(cod_usuario=cod_revisor)">
		              <input class="form-control" type="text" 
		                     name="nom_revisor" value="<dtml-var nom_completo>" disabled>
		            </dtml-in>
		          <dtml-else>
		            <input class="form-control" type="text" 
		                   name="nom_revisor" value="" disabled>
		          </dtml-if>
		        </div>
		      </div>
		    </div>
		  
		  <dtml-elif expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão'])">
		    <div class="row g-3">
		      <div class="col-12 col-md-6">
		        <div class="form-group">
		          <label class="form-label" for="nom_assessor">Assessor Responsável</label>
		          <dtml-if expr="prop_enviada and cod_assessor_sel">
		            <dtml-in expr="zsql.assessor_parlamentar_obter_zsql(cod_assessor=cod_assessor_sel)">
		              <input class="form-control" type="text" 
		                     name="nom_assessor" value="<dtml-var nom_assessor>" disabled>
		            </dtml-in>
		          <dtml-else>
		            <input class="form-control" type="text" 
		                   name="nom_assessor" value="" disabled>
		          </dtml-if>
		        </div>
		      </div>
		      <div class="col-12 col-md-6">
		        <div class="form-group">
		          <label class="form-label" for="nom_revisor">Revisor Designado</label>
		          <dtml-if expr="prop_enviada and cod_revisor">
		            <dtml-in expr="zsql.usuario_obter_zsql(cod_usuario=cod_revisor)">
		              <input class="form-control" type="text" 
		                     name="nom_revisor" value="<dtml-var nom_completo>" disabled>
		            </dtml-in>
		          <dtml-else>
		            <input class="form-control" type="text" 
		                   name="nom_revisor" value="" disabled>
		          </dtml-if>
		        </div>
		      </div>
		    </div>
		  </dtml-if>
		</div>
	      </div>
	    </div>
	  </div>
	<dtml-else>
	  <input type="hidden" name="lst_assessor" value="<dtml-var cod_assessor missing>">
	</dtml-if>
      </form>

    <div class="sticky-footer-actions bg-light p-3 border-top">
      <div class="container-fluid d-flex justify-content-end gap-2">
        <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and not prop_enviada and not prop_devolvida and not _.has_key('tem_pdf_assinado')">
            <button class="btn btn-primary btn-action" type="button" onClick="campos_criticar(document.proposicao_form)">
                <i class="fas fa-save me-1"></i> Salvar Proposição
            </button>
        <dtml-elif expr="(AUTHENTICATED_USER.has_role(['Operador','Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and not prop_recebida and not prop_devolvida) and not _.has_key('tem_pdf_assinado')">
            <button class="btn btn-primary btn-action" type="button" onClick="campos_criticar(document.proposicao_form)">
                <i class="fas fa-save me-1"></i> Salvar Proposição
            </button>
        </dtml-if>
       <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and not prop_recebida and not prop_devolvida">
           <button type="button" class="btn btn-danger btn-action" data-bs-toggle="modal" data-bs-target="#devolucaoModal">
               <i class="fas fa-angle-double-left me-1"></i> Devolver ao Autor
           </button>
       </dtml-if>

        <dtml-if expr="usr_eh_autor and AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])">
            <dtml-if expr="_.has_key('cod_proposicao')">
                <dtml-if prop_enviada>
                    <dtml-unless dat_recebimento>
                        <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])">
                            <dtml-if prop_devolvida>
                                <button class="btn btn-success btn-action" type="button" onClick="proposicao_retomar()">
                                    <i class="fas fa-redo me-1"></i> Reaproveitar Proposição
                                </button>
                               <button type="button" class="btn btn-danger btn-action" onClick="proposicao_excluir()">
                                  <i class="far fa-trash-alt me-1"></i> Excluir Proposição
                               </button>
                            <dtml-else>
                                <dtml-unless dat_solicitacao_devolucao>
                                    <button class="btn btn-danger btn-action" type="button" onClick="proposicao_solicitar_devolucao()">
                                        <i class="fas fa-paper-plane me-1"></i> Solicitar Devolução
                                    </button>
                                </dtml-unless>
                            </dtml-if>
                        </dtml-if>
                    </dtml-unless>
                <dtml-else>
                    <dtml-call expr="REQUEST.set('id_documento', str(cod_proposicao)+'.odt')">
                    <dtml-call expr="REQUEST.set('id_pdf', str(cod_proposicao)+'.pdf')">
                    <dtml-call expr="REQUEST.set('id_documento_assinado', str(cod_proposicao)+'_signed.pdf')">
                    <dtml-if expr="hasattr(sapl_documentos.proposicao,id_documento_assinado) and AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])">
                        <button class="btn btn-success btn-action" type="button" onClick="proposicao_enviar()">
                            <i class="fas fa-share-square me-1"></i> Enviar para Protocolo
                        </button>
                    <dtml-elif expr="des_tipo_proposicao!='Indicação' and hasattr(sapl_documentos.proposicao,id_documento) and not hasattr(sapl_documentos.proposicao,id_pdf) and AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and (des_tipo_autor == 'Parlamentar' or des_tipo_autor == 'Mesa Diretora' or des_tipo_autor == 'Comissao')">
                        <button type="button" class="btn btn-success btn-action" data-bs-toggle="modal" data-bs-target="#revisaoModal">
                            <i class="fas fa-share-square me-1"></i> Enviar para Revisão
                        </button>
                        <div class="modal fade" id="revisaoModal" tabindex="-1" aria-labelledby="revisaoModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Envio de Proposição para Revisão</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                       <form id="revisaoform" role="form" method="post" action="proposicao_enviar_proc">
                                           <input type="hidden" name="hdn_cod_proposicao" value="<dtml-var cod_proposicao missing>" />
                                           <div class="row">
                                               <div class="col-12 mb-3">
                                               <label class="form-label" for="lst_revisor">Nome do Revisor</label>
                                               <select class="form-select" id="lst_revisor" name="lst_revisor">
                                                    <option value></option>
                                                    <dtml-in "acl_users.getUsers()">
                                                         <dtml-let user_roles="_.getitem('sequence-item').getRoles()">
                                                             <dtml-if expr="('Revisor Proposicao' in user_roles) or ('Chefia Revisão' in user_roles)">
                                                                 <dtml-in expr="zsql.usuario_obter_zsql(col_username=_['sequence-item'])">
                                                                     <option value="<dtml-var cod_usuario>"><dtml-var nom_completo></option>
                                                                 </dtml-in>
                                                             </dtml-if>
                                                         </dtml-let>
                                                    </dtml-in>
                                               </select>
                                               </div>
                                           </div>
                                           <div class="row">
                                               <div class="col-12 mb-2">
                                               <button class="btn btn-success" type="submit">Enviar para Revisão</button>
                                               </div>
                                           </div>
                                       </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </dtml-if>
                            <dtml-unless prop_enviada>
                               <button type="button" class="btn btn-danger btn-action" onClick="proposicao_excluir()">
                                  <i class="far fa-trash-alt me-1"></i> Excluir Proposição
                               </button>
                            </dtml-unless>
                </dtml-if>
            </dtml-if>
        <dtml-else>
            <dtml-unless cod_mat_ou_doc>
                <dtml-unless prop_devolvida>
                    <dtml-call expr="REQUEST.set('id_documento_assinado', str(cod_proposicao)+'_signed.pdf')">
                    <dtml-if expr="hasattr(sapl_documentos.proposicao,id_documento_assinado)">
                        <dtml-if expr="ind_mat_ou_doc=='D' and (des_tipo_proposicao=='Parecer' or des_tipo_proposicao=='Parecer de Comissão')">
                            <dtml-let cod_doc="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">
                            <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia'])">
                                <button type="button" class="btn btn-success btn-action" data-bs-toggle="modal" data-bs-target="#iFrameModal" data-title="Parecer de Comissão" data-src="<dtml-var portal_url>/cadastros/recebimento_proposicao/proposicao_buscar_proc?txtCodDoc=<dtml-var cod_doc missing>&modal=1">
                                    <i class="fas fa-exchange-alt me-1"></i> Incorporar Parecer
                                </button>
                            </dtml-if>
                            </dtml-let>
                        <dtml-else>
                            <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia'])">
                            <dtml-unless dat_solicitacao_devolucao>
                                <button class="btn btn-success btn-action" type="button" onClick="proposicao_incorporar()">
                                    <i class="fas fa-check-circle me-1"></i> Incorporar
                                </button>
                            </dtml-unless>
                            </dtml-if>
                        </dtml-if>
                    </dtml-if>
                </dtml-unless>
            </dtml-unless>
        </dtml-if>
      </div>
    </div>

	<dtml-if expr="_.has_key('cod_proposicao') and (AUTHENTICATED_USER.has_role(['Autor','Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) or True)">
	  <div class="accordion accordion-flush accordion-plus-icon mb-4" id="accordionObs">
	    <div class="card card-proposicao mb-0 shadow-sm">
	      <div class="card-header accordion-header d-flex align-items-center px-0 py-1" id="headingObs"
		   style="background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; border-radius: 10px 10px 0 0;">
		<button class="accordion-button collapsed bg-transparent shadow-none d-flex align-items-center w-100"
		        type="button"
		        data-bs-toggle="collapse"
		        data-bs-target="#collapseObs"
		        aria-expanded="false"
		        aria-controls="collapseObs"
		        style="font-size: 15px; font-weight: 600; color: #2c3e50; min-height: 0; box-shadow: none; line-height:1.1;">
		  <i class="fas fa-comment-dots me-2"></i>
		  Observações
		</button>
	      </div>

	      <div id="collapseObs" class="accordion-collapse collapse" aria-labelledby="headingObs" data-bs-parent="#accordionObs">
		<div class="card-body">
		  <form name="observacao_form" method="post" action="proposicao_salvar_observacao_proc">
		    <input type="hidden" name="hdn_cod_proposicao" value="<dtml-var cod_proposicao missing="">" />
		    
		    <div class="form-group mb-3">
		      <dtml-if cod_mat_ou_doc>
		        <p class="form-control-plaintext mb-0">
		          <dtml-if txt_observacao>
		            <dtml-var txt_observacao>
		          <dtml-else>
		            Nenhuma observação.
		          </dtml-if>
		        </p>
		      <dtml-else>
		        <textarea class="form-control auto-resize" name="txa_txt_observacao" id="txa_txt_observacao" rows="3" 
		                  <dtml-if expr="prop_devolvida">readonly</dtml-if>>
		          <dtml-if txt_observacao>
		            <dtml-var txt_observacao>
		          </dtml-if>
		        </textarea>
		      </dtml-if>
		    </div>

		    <dtml-if expr="not cod_mat_ou_doc and not prop_devolvida">
		      <button class="btn btn-outline-primary btn-action-sm" type="button" onclick="observacao_salvar(document.observacao_form)">
		        <i class="fas fa-save me-1"></i> Gravar Observações
		      </button>
		    </dtml-if>
		  </form>
		</div>
	      </div>
	    </div>
	  </div>
	</dtml-if>

    <dtml-if expr="_.has_key('cod_proposicao') and dbcon_logs">
        <div class="row">
            <div class="col-12 text-end mt-3">
                <i class="fa fa-clock small me-1"></i>
                <a href="#" class="text-muted small" data-bs-toggle="modal" data-bs-target="#iFrameModal" data-title="Histórico da Proposição" data-src="<dtml-var portal_url>/historico?cod_registro=<dtml-var cod_proposicao missing>&modulo=proposicao&modal=1">
                    Histórico
                </a>
            </div>
        </div>
    </dtml-if>

<dtml-else>
    <dtml-let mensagem="'Você não tem permissão para ver esta proposição!'">
        <dtml-var mensagem_emitir>
    </dtml-let>
</dtml-if>

</div>

<dtml-var js_slot>

<script>
// Inicialização do TinyMCE para o campo de observação
tinymce.init({
    selector: '#txa_txt_observacao',
    language: 'pt_BR',
    browser_spellcheck: true,
    contextmenu: false,
    height: 250,
    paste_as_text: true,
    plugins: [
        'advlist autolink link image lists charmap print preview hr anchor pagebreak',
        'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking',
        'table emoticons template paste help'
    ],
    toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | ' +
        ' link image | print preview media fullpage | ',
    menubar: 'edit view insert format tools help',
    content_style: 'body {font-size:14px }'
});

// --------- VARIÁVEIS DE CONTROLE DE PERFIL E ESTADO ---------
var emRevisao = <dtml-if expr="(('Operador' in AUTHENTICATED_USER.getRoles()) or ('Operador Materia' in AUTHENTICATED_USER.getRoles()) or ('Revisor Proposicao' in AUTHENTICATED_USER.getRoles()) or ('Chefia Revisão' in AUTHENTICATED_USER.getRoles())) and dat_envio and _.has_key('tem_odt') and not _.has_key('tem_pdf') and not dat_recebimento">true<dtml-else>false</dtml-if>;
var tem_pdf = <dtml-if expr="_.has_key('tem_pdf')">true<dtml-else>false</dtml-if>;
var ehAutor = <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor'])">true<dtml-else>false</dtml-if>;
var campoAssuntoBloqueado = <dtml-if expr="_.has_key('tem_pdf') or _.has_key('tem_odt') or prop_recebida or prop_devolvida">true<dtml-else>false</dtml-if>;

// ------------ CONTROLE DO BOTÃO GERAR PDF ---------------
function controlarBotaoGerarPdf() {
    if (emRevisao && ehAutor) {
        $('#btn-gerar-pdf').prop('disabled', true)
            .addClass('disabled')
            .attr('title', 'A conversão para PDF é permitida apenas pela revisão ou operador.');
    } else {
        $('#btn-gerar-pdf').prop('disabled', false)
            .removeClass('disabled')
            .attr('title', 'Converter ODT em PDF');
    }
}

// --------- CONTROLE DE CAMPOS EMENTA, ASSUNTO, ENDEREÇO ---------
function tipo_proposicao_mudou() {
    const form = document.proposicao_form;
    if (!form || !form.lst_tip_proposicao) return;
    form.hdn_alterou.value = 1;
    const tipoProposicaoValue = form.lst_tip_proposicao.value;
    const desTipoProposicao = form.lst_tip_proposicao.options[form.lst_tip_proposicao.selectedIndex].text;
    const indMatOuDoc = tipoProposicaoValue.split("&");
    controlarBotaoGerarPdf();

    // Oculta todos os campos variáveis antes de decidir mostrar
    $("#divIndicaEndereco, #divJustificativa, #cardAssunto, #accordionMaps").slideUp(300);
    $('a[href*="/webeditor/editorProposicao"], button[onclick*="externalEdit_"]').show();
    $("#btn-gerar-pdf").val("Converter ODT").prop('onclick', null).off('click').on('click', texto_pdf_gerar);

    // Sempre desbloqueia os campos por padrão (serão re-bloqueados depois se necessário)
    $("#txt_descricao").prop('readonly', false).removeClass('bg-light');
    $("#txa_txt_justificativa").prop('readonly', true).addClass('bg-light');
    $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf, #txt_complemento_endereco, #txt_num_cep")
        .prop('readonly', false)
        .removeClass('bg-light')
        .removeClass('border-warning');

    // Matéria vinculada
    if (indMatOuDoc[1] === 'D') {
        $("#divMat").slideDown(300);
        form.lst_tip_id_basica.disabled = false;
        form.txt_num_ident_basica.disabled = false;
        form.txt_ano_ident_basica.disabled = false;
    } else {
        $("#divMat").slideUp(300);
        form.lst_tip_id_basica.disabled = true;
        form.txt_num_ident_basica.disabled = true;
        form.txt_ano_ident_basica.disabled = true;
    }

    // ---- BLOQUEIO DE EMENTA/ASSUNTO ----
    if (desTipoProposicao === 'Indicação') {
        $("#divIndicaEndereco, #divJustificativa, #cardAssunto, #accordionMaps").slideDown(300);
        $('a[href*="/webeditor/editorProposicao"], button[onclick*="externalEdit_"]').hide();
        $("#btn-gerar-pdf").val("Gerar PDF Final").prop('onclick', null).off('click').on('click', texto_pdf_gerar);

        // Ementa sempre readonly
        $("#txt_descricao").prop('readonly', true).addClass('bg-light');
        if (campoAssuntoBloqueado) {
            $("#txa_txt_justificativa").prop('readonly', true).addClass('bg-light');
        } else {
            $("#txa_txt_justificativa").prop('readonly', false).removeClass('bg-light');
        }
        // Endereço: se bloqueado, trava todos
        if (campoAssuntoBloqueado) {
            $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf, #txt_complemento_endereco, #txt_num_cep")
                .prop('readonly', true)
                .addClass('bg-light')
                .removeClass('border-warning');
        }
    } else {
        // Outros tipos
        if (emRevisao && !tem_pdf) {
            $("#txt_descricao").prop('readonly', false).removeClass('bg-light');
            aplicarReadonlySelect2('#lst_assunto', false);
        } else {
            if (tem_pdf || campoAssuntoBloqueado) {
                $("#txt_descricao").prop('readonly', true).addClass('bg-light');
                aplicarReadonlySelect2('#lst_assunto', true);
            } else {
                $("#txt_descricao").prop('readonly', false).removeClass('bg-light');
                aplicarReadonlySelect2('#lst_assunto', false);
            }
        }
        $("#txa_txt_justificativa").prop('readonly', true).addClass('bg-light');
        if (campoAssuntoBloqueado) {
            $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf, #txt_complemento_endereco, #txt_num_cep")
                .prop('readonly', true)
                .addClass('bg-light')
                .removeClass('border-warning');
        }
    }

    // BLOQUEIO select de assunto (readonly visual)
    if (['Indicação', 'Requerimento', 'Moção'].includes(desTipoProposicao)) {
        $("#cardAssunto").slideDown(300);
    } else {
        aplicarReadonlySelect2('#lst_assunto', true);
        $("#lst_assunto").val('').trigger('change');
    }

    // Ajuste do botão
    controlarBotaoGerarPdf();

    // Inicializa e carrega assuntos
    $('#lst_assunto').select2({minimumResultsForSearch: Infinity});
    $("#lst_assunto").html('<option value="">Carregando...</option>');
    carregarAssuntos(indMatOuDoc[0]);
}

// Aplica/Remove visual de readonly ao select2
function aplicarReadonlySelect2(selector, enableReadonly) {
    const $select = $(selector);
    if (enableReadonly) {
        $select.addClass('readonly');
        setTimeout(function() {
            $select.next('.select2-container').find('.select2-selection').addClass('readonly');
        }, 10);
    } else {
        $select.removeClass('readonly');
        setTimeout(function() {
            $select.next('.select2-container').find('.select2-selection').removeClass('readonly');
        }, 10);
    }
}
$(document).on('mousedown mousewheel focus', '#lst_assunto', function(e) {
    if ($(this).hasClass('readonly')) {
        e.preventDefault(); this.blur(); return false;
    }
});
$(document).on('select2:opening select2:selecting', '#lst_assunto', function(e) {
    if ($(this).hasClass('readonly')) {
        e.preventDefault(); return false;
    }
});

// AJAX de assuntos (readonly ao finalizar)
function carregarAssuntos(tipoProposicaoId) {
    $.ajax({
        url: 'assuntos_carregar_pysc',
        type: 'post',
        data: { svalue: tipoProposicaoId },
        dataType: 'json',
        beforeSend: function() {
            $("#lst_assunto").addClass('readonly').html('<option value="">Carregando...</option>');
        },
        success: function(response) {
            let options = '<option value="">Selecione</option>';
            response.forEach(function(item) {
                options += `<option value="${item.cod_assunto}">${item.des_assunto} (${item.nom_orgao})</option>`;
            });
            $("#lst_assunto").html(options);

            // Controle de readonly visual após carregar
            if (emRevisao && !tem_pdf) {
                aplicarReadonlySelect2('#lst_assunto', false);
            } else if (tem_pdf || campoAssuntoBloqueado) {
                aplicarReadonlySelect2('#lst_assunto', true);
            } else {
                aplicarReadonlySelect2('#lst_assunto', false);
            }

            <dtml-if "_.has_key('cod_assunto_sel')">
            if ($("#lst_assunto option[value='<dtml-var cod_assunto_sel>']").length) {
                $("#lst_assunto").val('<dtml-var cod_assunto_sel>').trigger('change');
            }
            </dtml-if>
            $('#lst_assunto').select2({minimumResultsForSearch: Infinity});
        },
        error: function() {
            $("#lst_assunto").html('<option value="">Erro ao carregar assuntos</option>');
        }
    });
}

// Função padrão para confirmação modal (reutilizável)
// Função reutilizável para modal de confirmação Bootstrap 5
function showConfirmModal(title, body, confirmAction, cancelAction, confirmBtnClass = 'btn-primary', confirmText = 'Confirmar') {
    const modalId = 'confirmationModal-' + Math.random().toString(36).substring(2, 9);
    const modalHtml = `
        <div class="modal fade" id="${modalId}" tabindex="-1" aria-labelledby="${modalId}Label" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="${modalId}Label">${title}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                    </div>
                    <div class="modal-body">
                        ${body}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn ${confirmBtnClass}" id="${modalId}-confirm-btn" autofocus>${confirmText}</button>
                    </div>
                </div>
            </div>
        </div>
    `;
    $(`#${modalId}`).remove(); // Evita duplicidade
    $('body').append(modalHtml);
    const $modal = $(`#${modalId}`);
    const modal = new bootstrap.Modal($modal[0]);
    modal.show();

    // Foco automático no botão confirmar (acessibilidade)
    $modal.on('shown.bs.modal', function() {
        $(`#${modalId}-confirm-btn`).trigger('focus');
    });

    // Clique em Confirmar
    $(`#${modalId}-confirm-btn`).one('click', function() {
        if (typeof confirmAction === 'function') confirmAction();
        modal.hide();
    });

    // Ao fechar, executa o cancelAction e remove do DOM
    $modal.on('hidden.bs.modal', function() {
        if (typeof cancelAction === 'function') cancelAction();
        $modal.remove();
    });
}

// Toast amigável
function mostrarToast(tipo, mensagem) {
    let bg = 'bg-info';  // Cor padrão (informação)
    if (tipo === 'sucesso') bg = 'bg-success';  // Verde para sucesso
    else if (tipo === 'erro') bg = 'bg-danger'; // Vermelho para erro

    const toastHtml = `
       <div class="container-fluid">
        <div class="toast show align-items-center text-white ${bg} border-0" 
             role="alert" aria-live="assertive" aria-atomic="true" 
             style="position: fixed; bottom: 80px; right: 20px; z-index: 1100;">
            <div class="d-flex">
                <div class="toast-body">
                    ${mensagem}
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" 
                        data-bs-dismiss="toast" aria-label="Fechar"></button>
            </div>
        </div>
      </div>
    `;
    $('.toast').remove();
    $('body').append(toastHtml);
    setTimeout(() => $('.toast').fadeOut(500, function() { $(this).remove(); }), 3500);
}

// Validação dos campos obrigatórios do formulário
function campos_criticar(form) {
    if ($(form).data('submitting')) return false;
    $(form).data('submitting', true);
    $(form).find('.is-invalid').removeClass('is-invalid');
    $(form).find('.invalid-feedback').remove();
    $(form).find('button[type=submit], .btn-action').prop('disabled', true);

    let isValid = true;
    let firstInvalidField = null;

    const tipoProposicaoSelect = form.lst_tip_proposicao;
    if (tipoProposicaoSelect.selectedIndex === -1 || tipoProposicaoSelect.value === "") {
        $(tipoProposicaoSelect).addClass('is-invalid');
        $(tipoProposicaoSelect).closest('.form-group').append('<div class="invalid-feedback">Selecione um tipo de proposição</div>');
        if (!firstInvalidField) firstInvalidField = tipoProposicaoSelect;
        isValid = false;
    }
    const tipoProposicaoValue = tipoProposicaoSelect[tipoProposicaoSelect.selectedIndex].value;
    const desTipoProposicao = tipoProposicaoSelect.options[tipoProposicaoSelect.selectedIndex].text;

    if ((desTipoProposicao === 'Requerimento') || (desTipoProposicao === 'Indicação') || (desTipoProposicao === 'Moção')) {
        if (form.lst_assunto.selectedIndex === -1 || form.lst_assunto.value === '') {
            $(form.lst_assunto).addClass('is-invalid');
            $(form.lst_assunto).closest('.form-group').append('<div class="invalid-feedback">O assunto é obrigatório para este tipo de proposição</div>');
            if (!firstInvalidField) firstInvalidField = form.lst_assunto;
            isValid = false;
        }
    }
    if (desTipoProposicao === 'Indicação') {
        if (form.txt_num_cep.value === "") {
            $(form.txt_num_cep).addClass('is-invalid');
            $(form.txt_num_cep).closest('.form-group').append('<div class="invalid-feedback">O CEP é obrigatório para indicações</div>');
            if (!firstInvalidField) firstInvalidField = form.txt_num_cep;
            isValid = false;
        }
        const justificativa = form.txa_txt_justificativa.value;
        if (justificativa === "" || justificativa.trim() === "<p></p>") {
            $(form.txa_txt_justificativa).addClass('is-invalid');
            $(form.txa_txt_justificativa).closest('.form-group').append('<div class="invalid-feedback">A justificativa da indicação deve ser preenchida</div>');
            if (!firstInvalidField) firstInvalidField = form.txa_txt_justificativa;
            isValid = false;
        }
    } else {
        const ementa = form.txt_descricao.value;
        if (ementa === "" || ementa.trim() === "<p></p>") {
            $(form.txt_descricao).addClass('is-invalid');
            $(form.txt_descricao).closest('.form-group').append('<div class="invalid-feedback">A ementa da proposição deve ser preenchida</div>');
            if (!firstInvalidField) firstInvalidField = form.txt_descricao;
            isValid = false;
        }
        const indMatOuDoc = tipoProposicaoValue.split("&");
        if (indMatOuDoc[1] === 'D') {
            if (form.lst_tip_id_basica.selectedIndex === -1 || form.lst_tip_id_basica.value === "" ||
                form.txt_num_ident_basica.value === "" || form.txt_ano_ident_basica.value === "") {
                $(form.lst_tip_id_basica).addClass('is-invalid');
                $(form.txt_num_ident_basica).addClass('is-invalid');
                $(form.txt_ano_ident_basica).addClass('is-invalid');
                $('#divMatBody').append('<div class="invalid-feedback d-block">Informe tipo, número e ano da matéria vinculada</div>');
                if (!firstInvalidField) firstInvalidField = form.lst_tip_id_basica;
                isValid = false;
            }
        }
    }

    if (!isValid) {
        $(form).find('button[type=submit], .btn-action').prop('disabled', false);
        $(form).data('submitting', false);
        if (firstInvalidField) {
            const offset = getTotalTopOffset();
            $('html, body').animate({ scrollTop: $(firstInvalidField).offset().top - offset - 10 }, 500);
            $(firstInvalidField).focus().addClass('animate-fade-in');
            setTimeout(() => { $(firstInvalidField).removeClass('animate-fade-in'); }, 1000);
        }
        mostrarToast && mostrarToast('erro', 'Corrija os campos destacados em vermelho.');
        return false;
    }

    form.hdn_tip_proposicao.value = tipoProposicaoValue.split("&")[0];
    $(form).find('button[type=submit], .btn-action').prop('disabled', true);
    form.submit();
}

function getTotalTopOffset() {
    let total = 0;
    const header = document.getElementById('page-topbar');
    if (header) {
        const style = window.getComputedStyle(header);
        if (['fixed', 'sticky'].includes(style.position)) {
            total += header.offsetHeight;
        }
    }
    const topnav = document.querySelector('.topnav');
    if (topnav) {
        const style = window.getComputedStyle(topnav);
        if (['fixed', 'sticky'].includes(style.position)) {
            total += topnav.offsetHeight;
        }
    }
    return total;
}

// Geração e manipulação dos arquivos ODT e PDF
async function texto_odt_gerar() {
    const lstModelo = document.getElementById("lst_modelo");
    if (!lstModelo || lstModelo.selectedIndex === 0) {
        showConfirmModal(
            "Modelo não selecionado",
            "Para gerar o documento é necessário selecionar um modelo.",
            null,
            null
        );
        return false;
    }
    const value = lstModelo.value;
    const selected = lstModelo.options[lstModelo.selectedIndex];
    const path = selected.getAttribute('data-path');
    const portalUrl = '<dtml-var portal_url>';
    const codProposicao = '<dtml-var cod_proposicao missing>';

    showConfirmModal(
        "Confirmação",
        "Confirma a geração do arquivo ODT? Esta ação substituirá qualquer documento existente.",
        async function() {
            mostrarToast('info', `<span class="spinner-border spinner-border-sm me-2"></span>Gerando arquivo ODT...`);
            try {
                const response = await fetch(`${portalUrl}/modelo_proposicao/proposicao?cod_proposicao=${codProposicao}&modelo_proposicao=${value}&modelo_path=${path}`, {
                    method: 'POST',
                    headers: { 'Accept': 'application/json' }
                });
                const data = await response.json();
                $('.toast').remove();
                if (data.success) {
                    mostrarToast('sucesso', `<i class="fas fa-check-circle me-2"></i> ${data.message}`);
                    setTimeout(() => location.reload(), 2000);
                } else {
                    mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> ${data.message}`);
                }
            } catch (err) {
                $('.toast').remove();
                mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> Erro ao gerar ODT: ${err.message}`);
            }
        }
    );
}

async function texto_pdf_gerar() {
    const portalUrl = '<dtml-var portal_url>';
    const codProposicao = '<dtml-var cod_proposicao missing>';
    showConfirmModal(
        "Confirmação",
        "Confirma a geração do arquivo PDF? Esta ação substituirá qualquer PDF existente.",
        async function() {
            mostrarToast('info', `<span class="spinner-border spinner-border-sm me-2"></span>Gerando arquivo PDF...`);
            try {
                const response = await fetch(`${portalUrl}/modelo_proposicao/proposicao_gerar_pdf?cod_proposicao=${codProposicao}`, {
                    method: 'POST',
                    headers: { 'Accept': 'application/json' }
                });
                const data = await response.json();
                $('.toast').remove();
                if (data.success) {
                    mostrarToast('sucesso', `<i class="fas fa-check-circle me-2"></i> ${data.message}`);
                    setTimeout(() => location.reload(), 2000);
                } else {
                    mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> ${data.message}`);
                }
            } catch (err) {
                $('.toast').remove();
                mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> Erro ao gerar PDF: ${err.message}`);
            }
        }
    );
}

function excluir_arquivo(tipo) {
    const portalUrl = '<dtml-var portal_url>';
    const codProposicao = '<dtml-var cod_proposicao missing>';
    let url = '';
    let msg = '';
    if (tipo === 'odt') {
        url = `${portalUrl}/cadastros/proposicao/texto_proposicao_excluir_proc?cod_proposicao=${codProposicao}`;
        msg = "Deseja realmente excluir o arquivo ODT da Proposição?";
    }
    if (tipo === 'pdf') {
        url = `${portalUrl}/cadastros/proposicao/texto_pdf_excluir_proc?cod_proposicao=${codProposicao}`;
        msg = "Deseja realmente excluir o texto PDF da proposição?";
    }
    if (tipo === 'assinado') {
        url = `${portalUrl}/cadastros/proposicao/texto_pdf_assinado_excluir_proc?cod_proposicao=${codProposicao}`;
        msg = "Deseja realmente excluir o texto PDF assinado da proposição?";
    }
    showConfirmModal('Excluir Arquivo', msg, function() {
        mostrarToast('info', `<span class="spinner-border spinner-border-sm me-2"></span>Excluindo arquivo...`);
        fetch(url, { method: 'POST' })
            .then(resp => resp.json())
            .then(data => {
                $('.toast').remove();
                if (data.success) {
                    mostrarToast('sucesso', `<i class="fas fa-check-circle me-2"></i> ${data.message}`);
                    setTimeout(() => location.reload(), 2000);
                } else {
                    mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> ${data.message}`);
                }
            })
            .catch(err => {
                $('.toast').remove();
                mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> Erro ao excluir arquivo: ${err.message}`);
            });
    });
}

function excluirAnexoAjax(anexo, cod_proposicao) {
  fetch(
    `anexo_excluir?anexo=${encodeURIComponent(anexo)}&cod_proposicao=${encodeURIComponent(cod_proposicao)}`,
    { method: 'POST' }
  )
    .then(r => r.json())
    .then(data => {
      if (data.success) {
        mostrarToast('success', data.message || 'Anexo excluído com sucesso!');
        // Remove do DOM
        var el = document.getElementById('preview-' + anexo);
        if (el) el.remove();
      } else {
        mostrarToast('danger', data.message || 'Erro ao excluir anexo.');
      }
    })
    .catch(() => {
      mostrarToast('danger', 'Erro de comunicação com o servidor.');
    });
}

function proposicao_excluir() {
    const codProposicao = '<dtml-var cod_proposicao missing>';
    if (!codProposicao || codProposicao === "missing") {
        showConfirmModal(
            "Erro",
            "Não foi possível identificar a proposição para exclusão.",
            null,
            null
        );
        return;
    }
    showConfirmModal(
        "Excluir Proposição",
        "Deseja realmente excluir esta proposição? Esta ação não poderá ser desfeita.",
        function() {
            location.href = `proposicao_excluir_proc?cod_proposicao=${codProposicao}`;
        },
        null,
        'btn-danger',
        'Sim, excluir'
    );
}

function proposicao_enviar() {
    const codProposicao = '<dtml-var cod_proposicao missing>';
    if (!codProposicao || codProposicao === "missing") {
        showConfirmModal(
            "Erro",
            "Não foi possível identificar a proposição para envio.",
            null,
            null
        );
        return;
    }
    showConfirmModal(
        "Confirmação de Envio",
        "Ao enviar esta proposição, ela será encaminhada para análise e não poderá ser editada. Confirma o envio?",
        function() {
            location.href = `proposicao_enviar_proc?hdn_cod_proposicao=${codProposicao}`;
        },
        null,
        'btn-success',
        'Sim, enviar'
    );
}

function proposicao_solicitar_devolucao() {
    const codProposicao = '<dtml-var cod_proposicao missing>';
    if (!codProposicao || codProposicao === "missing") {
        showConfirmModal(
            "Erro",
            "Não foi possível identificar a proposição para solicitar devolução.",
            null,
            null
        );
        return;
    }
    showConfirmModal(
        "Solicitar Devolução",
        "Deseja solicitar a devolução desta proposição para edição? Esta solicitação precisará ser aprovada.",
        function() {
            location.href = `proposicao_solicitar_devolucao_proc?cod_proposicao=${codProposicao}`;
        },
        null,
        'btn-danger',
        'Solicitar Devolução'
    );
}

function proposicao_retomar() {
    const codProposicao = '<dtml-var cod_proposicao missing>';
    if (!codProposicao || codProposicao === "missing") {
        showConfirmModal(
            "Erro",
            "Não foi possível identificar a proposição para reaproveitamento.",
            null,
            null
        );
        return;
    }
    showConfirmModal(
        "Reaproveitar Proposição",
        "Deseja reaproveitar esta proposição devolvida? Todas as informações serão mantidas.",
        function() {
            location.href = `proposicao_retomar_proc?cod_proposicao=${codProposicao}`;
        },
        null,
        'btn-success',
        'Reaproveitar Proposição'
    );
}

// Incorporar (caso cod_proposicao)
<dtml-if cod_proposicao>
  <dtml-let cod_doc="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">
    function proposicao_incorporar() {
        const portalUrl = '<dtml-var portal_url>';
        const codDoc = '<dtml-var cod_doc missing>';
        if (!codDoc || codDoc === "missing") {
            showConfirmModal(
                "Erro",
                "Não foi possível identificar a proposição para incorporação.",
                null,
                null
            );
            return;
        }
        showConfirmModal(
            "Incorporar Proposição",
            "Confirma a incorporação desta proposição ao sistema? Esta ação não poderá ser desfeita.",
            function() {
                location.href = `${portalUrl}/cadastros/recebimento_proposicao/proposicao_buscar_proc?txtCodDoc=${codDoc}`;
            }
        );
    }
  </dtml-let>
</dtml-if>

// Troca de tipo de proposição e assuntos relacionados
var emRevisao = <dtml-if expr="('Operador' in AUTHENTICATED_USER.getRoles()) or ('Operador Materia' in AUTHENTICATED_USER.getRoles()) or ('Revisor Proposicao' in AUTHENTICATED_USER.getRoles()) or ('Chefia Revisão' in AUTHENTICATED_USER.getRoles()) and dat_envio and _.has_key('tem_odt') and not _.has_key('tem_pdf') and not dat_recebimento">true<dtml-else>false</dtml-if>;
var tem_pdf = <dtml-if expr="_.has_key('tem_pdf')">true<dtml-else>false</dtml-if>;
var ehAutor = <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor'])">true<dtml-else>false</dtml-if>;
var campoAssuntoBloqueado = <dtml-if expr="_.has_key('tem_pdf') or _.has_key('tem_odt') or prop_recebida or prop_devolvida">true<dtml-else>false</dtml-if>;

// Função que sempre ajusta o estado do botão "Converter ODT"
function controlarBotaoGerarPdf() {
    if (typeof emRevisao !== 'undefined' && emRevisao && typeof ehAutor !== 'undefined' && ehAutor) {
        $('#btn-gerar-pdf').prop('disabled', true)
            .addClass('disabled')
            .attr('title', 'A conversão para PDF é permitida apenas por revisão ou operador.');
    } else {
        $('#btn-gerar-pdf').prop('disabled', false)
            .removeClass('disabled')
            .attr('title', 'Converter ODT em PDF');
    }
}

function tipo_proposicao_mudou() {
    const form = document.proposicao_form;
    if (!form || !form.lst_tip_proposicao) return;
    form.hdn_alterou.value = 1;
    const tipoProposicaoValue = form.lst_tip_proposicao.value;
    const desTipoProposicao = form.lst_tip_proposicao.options[form.lst_tip_proposicao.selectedIndex].text;
    const indMatOuDoc = tipoProposicaoValue.split("&");

    // Oculta todos os campos variáveis antes de decidir mostrar
    $("#divIndicaEndereco, #divJustificativa, #cardAssunto, #accordionMaps").slideUp(300);
    $('a[href*="/webeditor/editorProposicao"], button[onclick*="externalEdit_"]').show();
    $("#btn-gerar-pdf").val("Converter ODT").prop('onclick', null).off('click').on('click', texto_pdf_gerar);

    // Sempre desbloqueia os campos por padrão (serão re-bloqueados depois se necessário)
    $("#txt_descricao").prop('readonly', false).removeClass('bg-light');
    $("#txa_txt_justificativa").prop('readonly', true).addClass('bg-light');
    $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf, #txt_complemento_endereco, #txt_num_cep")
        .prop('readonly', false)
        .removeClass('bg-light')
        .removeClass('border-warning');

    // Matéria vinculada
    if (indMatOuDoc[1] === 'D') {
        $("#divMat").slideDown(300);
        form.lst_tip_id_basica.disabled = false;
        form.txt_num_ident_basica.disabled = false;
        form.txt_ano_ident_basica.disabled = false;
    } else {
        $("#divMat").slideUp(300);
        form.lst_tip_id_basica.disabled = true;
        form.txt_num_ident_basica.disabled = true;
        form.txt_ano_ident_basica.disabled = true;
    }

    // ---- BLOQUEIO DE EMENTA/ASSUNTO ----
    if (desTipoProposicao === 'Indicação') {
        $("#divIndicaEndereco, #divJustificativa, #cardAssunto, #accordionMaps").slideDown(300);
        $('a[href*="/webeditor/editorProposicao"], button[onclick*="externalEdit_"]').hide();
        $("#btn-gerar-pdf").val("Gerar PDF Final").prop('onclick', null).off('click').on('click', texto_pdf_gerar);

        // Indicação: ementa SEMPRE readonly
        $("#txt_descricao").prop('readonly', true).addClass('bg-light');

        // Justificativa: só desbloqueia se não houver bloqueio geral
        if (campoAssuntoBloqueado) {
            $("#txa_txt_justificativa").prop('readonly', true).addClass('bg-light');
        } else {
            $("#txa_txt_justificativa").prop('readonly', false).removeClass('bg-light');
        }
        // Endereço: se bloqueado, trava todos
        if (campoAssuntoBloqueado) {
            $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf, #txt_complemento_endereco, #txt_num_cep")
                .prop('readonly', true)
                .addClass('bg-light')
                .removeClass('border-warning');
        }
    } else {
        // Outros tipos
        if (emRevisao && !tem_pdf) {
            // Se está em revisão e NÃO tem PDF, deixa editar ementa e assunto
            $("#txt_descricao").prop('readonly', false).removeClass('bg-light');
            aplicarReadonlySelect2('#lst_assunto', false);
        } else {
            // Se tem PDF ou está bloqueado, deixa readonly
            if (tem_pdf || campoAssuntoBloqueado) {
                $("#txt_descricao").prop('readonly', true).addClass('bg-light');
                aplicarReadonlySelect2('#lst_assunto', true);
            } else {
                $("#txt_descricao").prop('readonly', false).removeClass('bg-light');
                aplicarReadonlySelect2('#lst_assunto', false);
            }
        }
        // Justificativa sempre oculta/readonly
        $("#txa_txt_justificativa").prop('readonly', true).addClass('bg-light');

        // Bloqueia campos de endereço se bloqueio geral (só precaução)
        if (campoAssuntoBloqueado) {
            $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf, #txt_complemento_endereco, #txt_num_cep")
                .prop('readonly', true)
                .addClass('bg-light')
                .removeClass('border-warning');
        }
    }

    // BLOQUEIO select de assunto (readonly visual)
    if (['Indicação', 'Requerimento', 'Moção'].includes(desTipoProposicao)) {
        $("#cardAssunto").slideDown(300);
        // Assunto: já tratado acima na revisão ou bloqueio!
        //aplicarReadonlySelect2('#lst_assunto', campoAssuntoBloqueado || tem_pdf);
    } else {
        aplicarReadonlySelect2('#lst_assunto', true);
        $("#lst_assunto").val('').trigger('change');
    }

    // Inicializa e carrega assuntos
    $('#lst_assunto').select2({minimumResultsForSearch: Infinity});
    $("#lst_assunto").html('<option value="">Carregando...</option>');
    carregarAssuntos(indMatOuDoc[0]);
}

// Função para aplicar ou remover "readonly visual" ao select2
function aplicarReadonlySelect2(selector, enableReadonly) {
    const $select = $(selector);
    if (enableReadonly) {
        $select.addClass('readonly');
        setTimeout(function() {
            $select.next('.select2-container').find('.select2-selection').addClass('readonly');
        }, 10);
    } else {
        $select.removeClass('readonly');
        setTimeout(function() {
            $select.next('.select2-container').find('.select2-selection').removeClass('readonly');
        }, 10);
    }
}

// Bloqueio real da interação do Select2 e do <select>
$(document).on('mousedown mousewheel focus', '#lst_assunto', function(e) {
    if ($(this).hasClass('readonly')) {
        e.preventDefault(); this.blur(); return false;
    }
});
$(document).on('select2:opening select2:selecting', '#lst_assunto', function(e) {
    if ($(this).hasClass('readonly')) {
        e.preventDefault(); return false;
    }
});

// Função AJAX para carregar assuntos e controlar bloqueio visual após carregamento
function carregarAssuntos(tipoProposicaoId) {
    $.ajax({
        url: 'assuntos_carregar_pysc',
        type: 'post',
        data: { svalue: tipoProposicaoId },
        dataType: 'json',
        beforeSend: function() {
            $("#lst_assunto").addClass('readonly').html('<option value="">Carregando...</option>');
        },
        success: function(response) {
            let options = '<option value="">Selecione</option>';
            response.forEach(function(item) {
                options += `<option value="${item.cod_assunto}">${item.des_assunto} (${item.nom_orgao})</option>`;
            });
            $("#lst_assunto").html(options);

            // --------- BLOQUEIO VISUAL (revisão e PDF) ---------
            // emRevisao e não tem PDF: liberar edição; caso contrário, bloquear
            if ((typeof emRevisao !== 'undefined' && emRevisao) && !(typeof tem_pdf !== 'undefined' && tem_pdf)) {
                aplicarReadonlySelect2('#lst_assunto', false);
            } else if ((typeof tem_pdf !== 'undefined' && tem_pdf) || campoAssuntoBloqueado) {
                aplicarReadonlySelect2('#lst_assunto', true);
            } else {
                aplicarReadonlySelect2('#lst_assunto', false);
            }

            <dtml-if "_.has_key('cod_assunto_sel')">
            if ($("#lst_assunto option[value='<dtml-var cod_assunto_sel>']").length) {
                $("#lst_assunto").val('<dtml-var cod_assunto_sel>').trigger('change');
            }
            </dtml-if>
            $('#lst_assunto').select2({minimumResultsForSearch: Infinity});
        },
        error: function() {
            $("#lst_assunto").html('<option value="">Erro ao carregar assuntos</option>');
        }
    });
}

function liberarEmentaPorCepZerado() {
    $("#txt_nom_logradouro").prop('readonly', false).removeClass('bg-light');
    $("#txt_nom_cidade").prop('readonly', false).removeClass('bg-light');
    $("#txt_sgl_uf").prop('readonly', false).removeClass('bg-light');
    $("#txt_nom_bairro").prop('readonly', false).removeClass('bg-light');
    $("#txt_descricao").prop('readonly', true).addClass('bg-light');
    $("#badgeEmentaAuto").show();
    $("#helpEmentaAuto").show();
    $("#avisoEmentaManual").show();
    $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf").addClass('border-warning');
}

function bloquearEmentaAutomatica() {
    $("#txt_nom_logradouro").prop('readonly', true).addClass('bg-light').removeClass('border-warning');
    $("#txt_nom_cidade").prop('readonly', true).addClass('bg-light').removeClass('border-warning');
    $("#txt_sgl_uf").prop('readonly', true).removeClass('border-warning');
    $("#txt_nom_bairro").prop('readonly', true).addClass('bg-light').removeClass('border-warning');
    $("#txt_descricao").prop('readonly', true).addClass('bg-light');
    $("#badgeEmentaAuto").show();
    $("#helpEmentaAuto").show();
    $("#avisoEmentaManual").hide();
}

// Ementa automática para Indicação
function artigoParaOrgao(nome) {
    if (!nome) return '';
    const minusculo = nome.trim().toLowerCase();
    if (minusculo.startsWith('secretaria')) return 'à ';
    if (minusculo.startsWith('coordenadoria')) return 'à ';
    if (minusculo.startsWith('diretoria')) return 'à ';
    if (minusculo.startsWith('departamento')) return 'ao ';
    if (minusculo.startsWith('setor')) return 'ao ';
    if (minusculo.startsWith('gabinete')) return 'ao ';
    if (minusculo.startsWith('divisão')) return 'à ';
    if (minusculo.startsWith('comissão')) return 'à ';
    return 'ao ';
}

let ementaEditadaAutomaticamente = false;
function gerarEmentaAutomatica(forcar = false) {
    const desTipoProposicao = $("#lst_tip_proposicao option:selected").text();
    if (desTipoProposicao !== 'Indicação') return;
    
    const campo = $("#txt_descricao");
    const ementaExistente = campo.val().trim();
    
    // Não sobrescreve se já houver texto, a menos que force
    if (!forcar && ementaExistente !== "") {
        return;
    }

    const textoAssuntoCompleto = $("#lst_assunto option:selected").text().trim();
    const assuntoTexto = textoAssuntoCompleto.split(' (')[0];
    const orgaoTexto = textoAssuntoCompleto.match(/\(([^)]+)\)/)?.[1] || "";
    const logradouroTexto = $("#txt_nom_logradouro").val();
    const complementoTexto = $("#txt_complemento_endereco").val();
    const bairroTexto = $("#txt_nom_bairro").val();
    const cidadeTexto = $("#txt_nom_cidade").val();
    const estadoTexto = $("#txt_sgl_uf").val();

    let ementaFinal = "Solicitando ";
    if (orgaoTexto) {
        ementaFinal += artigoParaOrgao(orgaoTexto) + orgaoTexto + " ";
    }
    if (assuntoTexto && assuntoTexto !== 'Selecione') {
        ementaFinal += `a realização de ${assuntoTexto.toLowerCase().trim()} `;
    }
    if (logradouroTexto) {
        ementaFinal += `na ${logradouroTexto}`;
        if (complementoTexto) ementaFinal += `, ${complementoTexto}`;
        if (bairroTexto) ementaFinal += `, ${bairroTexto}`;
        if (cidadeTexto && estadoTexto) {
            ementaFinal += `, neste município de ${cidadeTexto}/${estadoTexto}.`;
        } else if (cidadeTexto) {
            ementaFinal += `, neste município de ${cidadeTexto}.`;
        } else {
            ementaFinal += ".";
        }
    } else {
        ementaFinal += ".";
    }
    campo.val(ementaFinal);
}

// CEP via APIs externas (ViaCEP + fallback BrasilAPI)
function bloquearCamposEnderecoReadonly() {
    $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf")
        .prop('readonly', true)
        .addClass('bg-light')
        .removeClass('border-warning');
}

function liberarCamposEnderecoEdicao() {
    $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf")
        .prop('readonly', false)
        .removeClass('bg-light')
        .addClass('border-warning');
}

// Função chamada ao buscar CEP
function buscarCEP() {
    const cepRaw = $("#txt_num_cep").val();
    const cep = cepRaw.replace(/\D/g, '');
    const desTipoProposicao = $("#lst_tip_proposicao option:selected").text();
    const cepInput = $("#txt_num_cep");
    const cepDisplay = $("#loadingCEP");
    const limparCampos = () => {
        $("#txt_nom_logradouro").val('');
        $("#txt_nom_bairro").val('');
        $("#txt_nom_cidade").val('');
        $("#txt_sgl_uf").val('');
    };

    if (desTipoProposicao !== 'Indicação') return;

    if (cep === '00000000') {
        liberarCamposEnderecoEdicao();
        cepDisplay.html('');
        limparCampos();
        return;
    }
    if (cep.length !== 8) {
        bloquearCamposEnderecoReadonly();
        cepDisplay.html('');
        limparCampos();
        return;
    }

    bloquearCamposEnderecoReadonly();
    cepInput.prop('disabled', true);
    cepDisplay.html(`
        <div class="d-flex align-items-center text-muted">
            <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
            Buscando endereço...
        </div>
    `);
    limparCampos();

    // Consulta no ViaCEP
    fetch(`https://viacep.com.br/ws/${cep}/json/`)
        .then(resp => resp.json())
        .then(data => {
            if (!data.erro) {
                $("#txt_nom_logradouro").val(data.logradouro || '');
                $("#txt_nom_bairro").val(data.bairro || '');
                $("#txt_nom_cidade").val(data.localidade || '');
                $("#txt_sgl_uf").val(data.uf || '');
                gerarEmentaAutomatica(true);
                cepDisplay.html('');
            } else {
                // Tenta BrasilAPI
                fetch(`https://brasilapi.com.br/api/cep/v2/${cep}`)
                    .then(resp2 => resp2.json())
                    .then(data2 => {
                        if (!data2.errors && !data2.message) {
                            $("#txt_nom_logradouro").val(data2.street || '');
                            $("#txt_nom_bairro").val(data2.neighborhood || '');
                            $("#txt_nom_cidade").val(data2.city || '');
                            $("#txt_sgl_uf").val(data2.state || '');
                            gerarEmentaAutomatica(true);
                            cepDisplay.html('');
                        } else {
                            throw new Error("CEP não encontrado.");
                        }
                    })
                    .catch(() => {
                        limparCampos();
                        cepDisplay.html(`
                            <div class="text-danger">
                                <i class="fas fa-exclamation-circle me-1"></i>
                                CEP não encontrado
                            </div>
                        `);
                        showConfirmModal(
                            "CEP não encontrado",
                            "Não foi possível encontrar o endereço para o CEP informado. Verifique o número digitado."
                        );
                    });
            }
        })
        .catch(() => {
            limparCampos();
            cepDisplay.html(`
                <div class="text-danger">
                    <i class="fas fa-exclamation-circle me-1"></i>
                    Erro ao consultar CEP
                </div>
            `);
            showConfirmModal(
                "Erro na consulta",
                "Ocorreu um erro ao consultar o CEP. Tente novamente."
            );
        })
        .finally(() => {
            cepInput.prop('disabled', false);
        });
}

function buscarEmentaMateria() {
    const tipoMateria = $("#lst_tip_id_basica").val();
    const numero = $("#txt_num_ident_basica").val();
    const ano = $("#txt_ano_ident_basica").val();
    const $botao = $("#postjq");
    const $descricao = $("#txt_descricao");

    if (!tipoMateria || !numero || !ano) return;

    $.ajax({
        url: 'ementa_buscar_pysc',
        type: 'POST',
        data: {
            lst_tip_proposicao: $("#lst_tip_proposicao option:selected").text(),
            lst_tip_id_basica: tipoMateria,
            txt_num_ident_basica: numero,
            txt_ano_ident_basica: ano
        },
        dataType: 'json',
        beforeSend: function() {
            $botao.prop('disabled', true)
                  .html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Carregando...');
        },
        success: function(response) {
            if (Array.isArray(response) && response.length > 0 && response[0].ementa) {
                $descricao.val(response[0].ementa).trigger('input').focus();
            } else {
                showConfirmModal(
                    "Ementa não encontrada",
                    "Não foi possível localizar a ementa da matéria informada. Verifique os dados e tente novamente."
                );
            }
        },
        error: function() {
            showConfirmModal(
                "Erro na consulta",
                "Ocorreu um erro ao tentar buscar a ementa da matéria. Tente novamente mais tarde."
            );
        },
        complete: function() {
            $botao.prop('disabled', false).html('<i class="fas fa-search"></i> Obter Ementa');
        }
    });
}

function observacao_salvar(formObservacao) {
    const editor = tinymce.get('txa_txt_observacao');
    if (!editor) {
        const textarea = formObservacao.txa_txt_observacao;
        if (textarea.value.trim() === "" || textarea.value.trim() === "<p></p>") {
            $(textarea).addClass('is-invalid');
            $(textarea).closest('.form-group').append('<div class="invalid-feedback">A observação não pode estar vazia</div>');
            return false;
        }
    } else {
        let content = editor.getContent();
        content = content.replace(/<p>&nbsp;<\/p>/g, '');
        content = content.replace(/<p><br><\/p>/g, '');
        content = content.replace(/<p><\/p>/g, '');
        content = content.replace(/<div><br><\/div>/g, '');
        content = content.trim();
        if (content === "") {
            const editorContainer = $(editor.editorContainer);
            editorContainer.addClass('is-invalid');
            editorContainer.closest('.form-group').append('<div class="invalid-feedback">A observação não pode estar vazia</div>');
            editor.focus(); 
            return false;
        }
        editor.save();
    }
    formObservacao.submit();
}

// STATUS visual
function atualizarStatusProposicao(status) {
    const steps = {
        draft: { icon: 'fa-edit', label: 'Em elaboração', class: 'draft' },
        submitted: { icon: 'fa-paper-plane', label: 'Enviada', class: 'submitted' },
        received: { icon: 'fa-check-circle', label: 'Incorporada', class: 'received' },
        returned: { icon: 'fa-times-circle', label: 'Devolvida', class: 'returned' }
    };
    $('.step').removeClass('active completed');
    if (status === 'draft') { $('.step-draft').addClass('active'); }
    else if (status === 'submitted') { $('.step-draft').addClass('completed'); $('.step-submitted').addClass('active'); }
    else if (status === 'received') { $('.step-draft, .step-submitted').addClass('completed'); $('.step-received').addClass('active'); }
    else if (status === 'returned') { $('.step-draft').addClass('completed'); $('.step-submitted').addClass('completed'); $('.step-returned').addClass('active'); }
}

// Drag & Drop e lista de PDFs anexos
$(document).ready(function() {
    var ehAutor = <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor'])">true<dtml-else>false</dtml-if>;

    // Máscara para o campo CEP
    $('#txt_num_cep').inputmask('99999-999');
    // Busca endereço e pode atualizar a ementa (se for Indicação)
    $("#txt_num_cep").on('blur', buscarCEP);

    const cepAtual = $('#txt_num_cep').val() ? $('#txt_num_cep').val().replace(/\D/g, '') : '';
    if (cepAtual && cepAtual.length === 8 && cepAtual !== '00000000') {
        bloquearCamposEnderecoReadonly();
    } else if (cepAtual === '00000000') {
        liberarCamposEnderecoEdicao();
    } else {
        bloquearCamposEnderecoReadonly();
    }

    // Ajuste: se campo txt_descricao veio preenchido do banco, NÃO sobrescreve!
    // Só gera a ementa automática na abertura se o campo estiver vazio
    if ($("#lst_tip_proposicao option:selected").text() === "Indicação") {
        const ementaSalva = $("#txt_descricao").val().trim();
        
        // Só gera automaticamente se não houver texto salvo
        if (!ementaSalva) {
            gerarEmentaAutomatica();
        } else {
            // Mantém o texto do banco e ajusta a interface
            $("#txt_descricao").prop('readonly', true).addClass('bg-light');
            $("#badgeEmentaAuto").hide();
            $("#helpEmentaAuto").hide();
            $("#avisoEmentaManual").hide();
        }
    }

    // Libera edição de endereço se CEP zerado (só exibe interface, não mexe na ementa)
    let cepInicial = $('#txt_num_cep').val() ? $('#txt_num_cep').val().replace(/\D/g, '') : '';
    if (cepInicial === '00000000') {
        liberarEmentaPorCepZerado();
    } else {
        bloquearEmentaAutomatica();
    }

    // Atualiza ementa apenas quando assunto, complemento, logradouro ou bairro mudam (e só para Indicação)
    $("#lst_assunto, #txt_complemento_endereco").on('change', function() {
        if ($("#lst_tip_proposicao option:selected").text() === "Indicação") {
            gerarEmentaAutomatica(true);
        }
    });
   $("#txt_nom_logradouro, #txt_complemento_endereco, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf").on('input change', function() {
       if ($("#lst_tip_proposicao option:selected").text() === "Indicação") {
        gerarEmentaAutomatica(true);
       }
   });

    // Quando CEP perde o foco, pode liberar endereço manual OU atualizar ementa se não for zerado
    $("#txt_num_cep").on('blur', function() {
        let cep = $(this).val().replace(/\D/g, '');
        if (cep === "00000000") {
            liberarEmentaPorCepZerado();
        } else {
            bloquearEmentaAutomatica();
            if ($("#lst_tip_proposicao option:selected").text() === "Indicação") {
                gerarEmentaAutomatica(true);
            }
        }
    });

    // Buscar ementa da matéria vinculada
    $("#postjq").on('click', buscarEmentaMateria);

    // Inicialização do select2 para selects estilizados
    $('.select2').select2({
        width: '100%',
        dropdownParent: $(this).closest('.modal').length ? $(this).closest('.modal') : $('body')
    });

    // Reajusta select2 no resize
    $(window).on('resize', function() {
       $('#lst_assunto').select2('close');
       $('#lst_assunto').select2({ width: '100%' });
    });


    // Tooltips bootstrap
    $('[data-bs-toggle="tooltip"]').tooltip();

    // Ajuste de textareas auto-resize
    $('.auto-resize').each(function() {
        this.style.height = 'auto';
        this.style.height = (this.scrollHeight) + 'px';
    }).on('input', function() {
        this.style.height = 'auto';
        this.style.height = (this.scrollHeight) + 'px';
    });

    // Só chama a função se existir o formulário e o select
    if (document.proposicao_form && document.proposicao_form.lst_tip_proposicao) {
        tipo_proposicao_mudou();
    }

    // Carregar modelos de proposição já existentes, se houver cod_proposicao
    <dtml-if "_.has_key('cod_proposicao')">
        const tipoProposicaoInicial = $("#lst_tip_proposicao").val();
        const tipoPropoIdInicial = tipoProposicaoInicial ? tipoProposicaoInicial.split("&")[0] : '';
        if (tipoPropoIdInicial) {
            $.ajax({
                url: 'modelos_carregar_pysc',
                type: 'post',
                data: { svalue: tipoPropoIdInicial },
                dataType: 'json',
                success: function(response) {
                    response.forEach(function(item) {
                        $("#lst_modelo").append(`<option data-path="${item.path_arquivo}" value="${item.id_arquivo}">${item.titulo_arquivo}</option>`);
                    });
                    <dtml-if "_.has_key('nom_modelo')">
                        $(`#lst_modelo option[data-path*="<dtml-var nom_modelo>"]`).prop('selected', true);
                    </dtml-if>
                }
            });
        }
    </dtml-if>

    // Drag & drop de anexos PDF (mantido conforme original)
    let uploadedFiles = [];
    const dropArea = $('#pdf-drop-area');
    const fileInput = $('#file_nom_anexo_input');
    const browseLink = $('#pdf-browse-link');
    const previewDiv = $('#pdf-upload-preview');
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => { dropArea.on(eventName, preventDefaults); });
    ['dragenter', 'dragover'].forEach(eventName => { dropArea.on(eventName, highlight); });
    ['dragleave', 'drop'].forEach(eventName => { dropArea.on(eventName, unhighlight); });
    dropArea.on('drop', handleDrop);
    browseLink.on('click', (e) => { e.preventDefault(); fileInput.click(); });
    fileInput.on('change', handleFiles);

    function preventDefaults(e) { e.preventDefault(); e.stopPropagation(); }
    function highlight() { dropArea.addClass('highlight'); }
    function unhighlight() { dropArea.removeClass('highlight'); }
    function handleDrop(e) {
        const dt = e.originalEvent.dataTransfer;
        const files = dt.files;
        handleFiles({ target: { files } });
    }
    function handleFiles(event) {
        const files = event.target.files;
        previewDiv.empty();
        if (files.length > 0) {
            uploadedFiles = [...uploadedFiles, ...Array.from(files)];
            renderFileList();
        }
    }
    function renderFileList() {
        previewDiv.empty();
        if (uploadedFiles.length > 0) {
            const fileList = $('<ul class="list-group mb-3"></ul>');
            uploadedFiles.forEach((file, index) => {
                if (file.type !== 'application/pdf') {
                    previewDiv.append(`
                        <div class="alert alert-warning alert-dismissible fade show small mb-2" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            O arquivo "${file.name}" não é um PDF válido e será ignorado.
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    `);
                    return;
                }
                const listItem = $(`
                    <li class="list-group-item d-flex justify-content-between align-items-center" data-index="${index}">
                        <div>
                            <i class="fas fa-file-pdf text-danger me-2"></i>
                            ${file.name} (${(file.size / 1024).toFixed(2)} KB)
                        </div>
                        <button type="button" class="btn btn-sm btn-outline-danger remove-file">
                            <i class="far fa-trash-alt"></i>
                        </button>
                    </li>
                `);
                fileList.append(listItem);
            });
            previewDiv.append(fileList);
            updateFileInput();
            $('.remove-file').on('click', function() {
                const index = $(this).closest('li').data('index');
                removeFile(index);
            });
        }
    }
    function removeFile(index) {
        uploadedFiles.splice(index, 1);
        renderFileList();
    }
    function updateFileInput() {
        const dataTransfer = new DataTransfer();
        uploadedFiles.forEach(file => {
            if (file.type === 'application/pdf') {
                dataTransfer.items.add(file);
            }
        });
        fileInput[0].files = dataTransfer.files;
    }

    // Status da proposição (etapas)
    <dtml-if dat_recebimento>
        atualizarStatusProposicao('received');
    <dtml-elif expr="dat_envio and not dat_devolucao">
        atualizarStatusProposicao('submitted');
    <dtml-elif expr="dat_devolucao">
        atualizarStatusProposicao('returned');
    <dtml-else>
        atualizarStatusProposicao('draft');
    </dtml-if>

    // Atualiza form de acordo com tipo de proposição inicial
    tipo_proposicao_mudou();

    $('#revisaoform').on('submit', function(e) {
        e.preventDefault();
        showConfirmModal(
            "Confirmação de Envio",
            "Confirma o envio da proposição para revisão?",
            () => this.submit(),
            null
        );
    });
	$('#myform').on('submit', function(e) {
	    // Se quiser validar Bootstrap 5 antes:
	    if (!this.checkValidity()) {
		e.preventDefault();
		e.stopPropagation();
		$(this).addClass('was-validated');
		return;
	    }
	    e.preventDefault();
	    showConfirmModal(
		"Confirmação de Devolução",
		"<p>Confirma a devolução da proposição ao Autor?</p>",
		() => this.submit(), // confirma
		null, // cancelar
		'btn-danger', // cor do botão confirmar
		'Sim, devolver' // texto do botão confirmar
	    );
	});
});


// Imagem: upload e exclusão AJAX
// Função para upload AJAX de imagens (proposição)
async function enviarImagem(containerDiv, idx) {
    const fileInput = containerDiv.querySelector(`[name="file_nom_image${idx}"]`);
    const previewDiv = document.getElementById(`foto${idx}-preview`);
    const file = fileInput.files[0];
    if (!file) return;

    // Pré-visualização imediata da imagem
    const reader = new FileReader();
    reader.onload = function(e) {
        previewDiv.innerHTML = `
            <div class="text-center position-relative">
                <img class="img-fluid img-thumbnail mb-2" src="${e.target.result}" style="max-height: 300px;">
                <div class="position-absolute top-0 start-50 translate-middle-x mt-2">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                </div>
            </div>
        `;
    };
    reader.readAsDataURL(file);

    // Sempre pega cod_proposicao do formulário principal!
    const codProposicao = document.querySelector('input[name="cod_proposicao"]').value;
    const indice = containerDiv.querySelector('input[name="indice"]').value;

    const formData = new FormData();
    formData.append('cod_proposicao', codProposicao);
    formData.append('indice', indice);
    formData.append(fileInput.name, file);

    try {
        const response = await fetch('salvar-imagem-proposicao', { method: 'POST', body: formData });
        if (!response.ok) throw new Error('Erro no servidor');
        const html = await response.text();
        previewDiv.innerHTML = html;

        const toastHtml = `
            <div class="toast show align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" style="position: fixed; bottom: 80px; right: 20px; z-index: 1100;">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas fa-check-circle me-2"></i> Fotografia salva com sucesso!
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        `;
        $('body').append(toastHtml);
        setTimeout(() => $('.toast').remove(), 3000);
    } catch (err) {
        previewDiv.innerHTML = `
            <div class="alert alert-danger mb-2">
                <i class="fas fa-exclamation-triangle me-2"></i> Erro ao enviar imagem: ${err.message}
            </div>
            <button class="btn btn-sm btn-secondary" onclick="location.reload()">
                <i class="fas fa-sync-alt me-1"></i> Tentar novamente
            </button>
        `;
    }
}

// Função AJAX para exclusão de imagem (com confirmação)
function excluirImagem(idx) {
    // Busca o cod_proposicao do formulário principal
    const codProposicao = document.querySelector('input[name="cod_proposicao"]').value;
    showConfirmModal(
        "Excluir Imagem",
        "Deseja realmente excluir esta imagem? Esta ação não pode ser desfeita.",
        async function() {
            const previewDiv = document.getElementById(`foto${idx}-preview`);
            previewDiv.innerHTML = `
                <div class="text-center p-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                </div>
            `;
            try {
                const response = await fetch('excluir-imagem-proposicao', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `cod_proposicao=${encodeURIComponent(codProposicao)}&indice=${encodeURIComponent(idx)}`
                });
                if (!response.ok) throw new Error('Erro no servidor');
                // Renderiza novamente o bloco de upload vazio
                previewDiv.innerHTML = `
                    <div id="uploadForm${idx}" enctype="multipart/form-data">
                        <input type="hidden" name="indice" value="${idx}">
                        <input type="file" name="file_nom_image${idx}" class="form-control" accept="image/*" onchange="enviarImagem(this.parentElement, ${idx})">
                        <div class="help-text mt-2">Formatos suportados: JPG, PNG, GIF. Tamanho máximo: 5MB.</div>
                    </div>
                `;
                const toastHtml = `
                    <div class="toast show align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" style="position: fixed; bottom: 80px; right: 20px; z-index: 1100;">
                        <div class="d-flex">
                            <div class="toast-body">
                                <i class="fas fa-check-circle me-2"></i> Fotografia excluída com sucesso!
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;
                $('body').append(toastHtml);
                setTimeout(() => $('.toast').remove(), 3000);
            } catch (err) {
                previewDiv.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i> Erro ao excluir imagem: ${err.message}
                    </div>
                    <button class="btn btn-sm btn-secondary" onclick="location.reload()">
                        <i class="fas fa-sync-alt me-1"></i> Tentar novamente
                    </button>
                `;
            }
        }
    );
}
</script>

<dtml-var footer_html>
