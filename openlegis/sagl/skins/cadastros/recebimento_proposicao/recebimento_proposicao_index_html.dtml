<dtml-var header_html>

<script>
  var USER_ROLES = [
    <dtml-in expr="AUTHENTICATED_USER.getRoles()">
      "<dtml-var sequence-item>"<dtml-unless sequence-end>,</dtml-unless>
    </dtml-in>
  ];
</script>

<style>
:root {
  --loading-spinner-size: 2.5rem;
  --table-min-height: 300px;
  --blur-intensity: 3px;
  --primary-color: #0d6efd;
  --secondary-color: #6c757d;
}
.filter-card {
  border-radius: 0.5rem;
  box-shadow: 0 2px 8px rgba(0,0,0,0.08);
  margin-bottom: 1.5rem;
  border: 1px solid #e9ecef;
}
.filter-card .card-body { padding: 1.25rem; }
.filter-card .form-label {
  font-size: 0.85rem;
  color: #495057;
  margin-bottom: 0.35rem;
  font-weight: 500;
}
.filter-card .form-control,
.filter-card .form-select {
  border-radius: 0.35rem;
  font-size: 0.9rem;
  padding: 0.4rem 0.75rem;
  border: 1px solid #dee2e6;
  transition: border-color 0.15s ease-in-out;
}
.filter-card .form-control:focus,
.filter-card .form-select:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.1);
}
.filter-card .input-group-text {
  font-size: 0.8rem;
  padding: 0 0.5rem;
  background-color: #f8f9fa;
  color: #495057;
}
.filter-card .btn {
  font-size: 0.85rem;
  padding: 0.35rem 0.75rem;
  border-radius: 0.35rem;
}
.filter-card .btn-sm { padding: 0.25rem 0.5rem; font-size: 0.8rem; }
@media (max-width: 991.98px) {
  .filter-card .col-md-3, 
  .filter-card .col-md-6 { margin-bottom: 1rem; }
  .filter-card .d-flex { justify-content: flex-start !important; }
}
@media (max-width: 767.98px) {
  .filter-card .col-6 { width: 100% !important; }
  .filter-card .input-group { width: 100% !important; }
}
.filtro-chip {
  display: inline-flex;
  align-items: center;
  background: #e9ecef;
  border-radius: 2rem;
  padding: 0.25em 0.9em 0.25em 0.8em;
  margin-right: 0.5em;
  margin-bottom: 0.25em;
  font-size: 0.95em;
  color: #495057;
  border: 1px solid #dee2e6;
  gap: 0.4em;
}
.filtro-chip .chip-remove {
  cursor: pointer;
  margin-left: 0.2em;
  color: #6c757d;
  font-size: 1em;
}
.filtro-chip .chip-remove:hover { color: #dc3545; }
.skeleton-loader { min-height: 120px; margin-bottom: 1rem; }
.skeleton-line { background: #e9ecef; height: 18px; margin: 7px 0; border-radius: 2px; }
.skeleton-line.short { width: 40%; }
.skeleton-line.medium { width: 70%; }
.table-blur { filter: blur(var(--blur-intensity)); pointer-events: none; }
#proposicoes-table th[data-column] {
  cursor: pointer; position: relative; user-select: none;
}
#proposicoes-table th[data-column]:hover { background-color: #f8f9fa; }
#proposicoes-table th i {
  opacity: 0.3; transition: opacity 0.2s;
}
#proposicoes-table th:hover i { opacity: 0.8; }
#proposicoes-table th.i.fa-sort-up,
#proposicoes-table th.i.fa-sort-down {
  opacity: 1;
  color: var(--primary-color);
}
.global-search-container { margin-bottom: 1rem; }
.proposicao-card {
  border: 1px solid #e9ecef;
  border-radius: 0.5rem;
  box-shadow: 0 2px 8px rgba(0,0,0,0.05);
  transition: transform 0.2s, box-shadow 0.2s;
  height: 100%;
  display: flex;
  flex-direction: column;
  background: #fff;
}
.proposicao-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}
.proposicao-card.prioritaria { border-left: 4px solid #ffc107; }
.card-header {
  background-color: #f8f9fa;
  border-bottom: 1px solid #e9ecef;
  padding: 0.75rem 1rem;
  border-top-left-radius: 0.5rem !important;
  border-top-right-radius: 0.5rem !important;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.5rem;
  min-height: 44px;
  flex-wrap: wrap;
  word-break: break-word;
}
.card-header .badge {
  max-width: 95%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 0.85rem;
  flex-shrink: 1;
}
.card-header small {
  min-width: 95%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  text-align: left;
  font-size: 0.8rem;
  flex-shrink: 0;
}
@media (max-width: 768px) {
  .card-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.2rem;
    padding: 0.7rem 0.7rem;
    min-height: unset;
  }
  .card-header .badge,
  .card-header small {
    max-width: 100%;
    white-space: normal;
    text-align: left;
  }
}
.card-title {
  font-size: 0.9rem;
  margin-bottom: 0.5rem;
  font-weight: 500;
  word-break: break-word;
}
.card-text {
  font-size: 0.875rem;
  color: #495057;
  margin-bottom: 0.5rem;
  word-break: break-word;
}
.card-meta {
  font-size: 0.75rem;
  color: #6c757d;
  margin-bottom: 0.25rem;
  word-break: break-word;
}
.card-footer.card-actions {
  background: transparent;
  border-top: 0;
  padding-top: 0.5rem;
  text-align: right;
}
.card-body {
  flex: 1 1 auto;
  min-height: 100px;
}
.view-toggle-container { margin-bottom: 1rem; }
</style>

<div class="">
  <div class="row align-items-center mb-3 g-3">
    <div class="col-md-8 col-12">
      <h1 class="firstHeading mb-0 d-flex align-items-center font-size-18 gap-2">
        <i class="fas fa-inbox text-primary fs-4" aria-hidden="true"></i>
        Recebimento de Proposições
      </h1>
      <p class="text-muted small mb-0 mt-1">
        Gerenciamento de proposições digitais recebidas
      </p>
    </div>
    <div class="col-md-4 col-12 text-md-end" role="region" aria-live="polite" aria-atomic="true">
      <div id="alert-area"></div>
    </div>
  </div>
</div>

<ul class="nav nav-tabs proposicao mb-3" id="nav_proposicao" role="tablist">
  <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão'])">
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="tab-revisao" href="#" data-caixa="revisao" role="tab" aria-controls="revisao" aria-selected="true" tabindex="0">
        <i class="fas fa-edit me-1" aria-hidden="true"></i> Revisão 
        <span id="badge-revisao" class="badge bg-primary ms-1" aria-live="polite" aria-atomic="true">0</span>
      </a>
    </li>
    <dtml-if "hasattr(sapl_documentos.props_sagl, 'restpki_access_token') and sapl_documentos.props_sagl.restpki_access_token">
      <li class="nav-item" role="presentation">
        <a class="nav-link" id="tab-assinatura" href="#" data-caixa="assinatura" role="tab" aria-controls="assinatura" aria-selected="false" tabindex="-1">
          <i class="fas fa-signature me-1" aria-hidden="true"></i> Assinatura 
          <span id="badge-assinatura" class="badge bg-secondary ms-1" aria-live="polite" aria-atomic="true">0</span>
        </a>
      </li>
    </dtml-if>
  </dtml-if>
  <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia'])">
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="tab-protocolo" href="#" data-caixa="protocolo" role="tab" aria-controls="protocolo" aria-selected="false" tabindex="-1">
        <i class="fas fa-stamp me-1" aria-hidden="true"></i> Protocolo 
        <span id="badge-protocolo" class="badge bg-secondary ms-1" aria-live="polite" aria-atomic="true">0</span>
      </a>
    </li>
  </dtml-if>
  <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão'])">
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="tab-incorporado" href="#" data-caixa="incorporado" role="tab" aria-controls="incorporado" aria-selected="false" tabindex="-1">
        <i class="fas fa-check-double me-1" aria-hidden="true"></i> Incorporadas 
        <span id="badge-incorporado" class="badge bg-secondary ms-1" aria-live="polite" aria-atomic="true">0</span>
      </a>
    </li>
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="tab-pedido_devolucao" href="#" data-caixa="pedido_devolucao" role="tab" aria-controls="pedido_devolucao" aria-selected="false" tabindex="-1">
        <i class="fas fa-undo me-1" aria-hidden="true"></i> Pedidos de Devolução 
        <span id="badge-pedido_devolucao" class="badge bg-secondary ms-1" aria-live="polite" aria-atomic="true">0</span>
      </a>
    </li>
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="tab-devolvido" href="#" data-caixa="devolvido" role="tab" aria-controls="devolvido" aria-selected="false" tabindex="-1">
        <i class="fas fa-times-circle me-1" aria-hidden="true"></i> Devolvidas 
        <span id="badge-devolvido" class="badge bg-secondary ms-1" aria-live="polite" aria-atomic="true">0</span>
      </a>
    </li>
  </dtml-if>
</ul>

<div class="card filter-card">
  <div class="card-body">
    <div class="row g-3 mb-3 align-items-end">
      <div class="col-md-3 col-6">
        <label for="filter-tipo" class="form-label">Tipo</label>
        <input type="text" id="filter-tipo" name="filter-tipo" class="form-control" placeholder="Veto, Requerimento, etc..." aria-label="Tipo da Proposição" autocomplete="off">
      </div>
      <div class="col-md-3 col-6">
        <label for="filter-autor" class="form-label">Autoria</label>
        <input type="text" id="filter-autor" name="filter-autor" class="form-control" placeholder="Nome do autor" aria-label="Autoria" autocomplete="off">
      </div>
      <div class="col-md-6">
        <label for="filter-assunto" class="form-label">Ementa</label>
        <div class="input-group">
          <input type="text" id="filter-assunto" name="filter-assunto" class="form-control" placeholder="Palavra-chave, expressão ou NPE" aria-label="Conteúdo" autocomplete="off">
          <button class="btn btn-outline-secondary" type="button" id="btn-global-search" title="Buscar">
            <i class="fas fa-search"></i>
          </button>
        </div>
      </div>
    </div>
    <div class="row g-3 align-items-end">
      <div class="col-md-3 col-6">
        <label for="select-por-pagina" class="form-label">Registros por página</label>
        <select id="select-por-pagina" class="form-select">
          <option value="10" selected>10</option>
          <option value="25">25</option>
          <option value="50">50</option>
          <option value="100">100</option>
          <option value="250">250</option>
        </select>
      </div>
      <div class="col-md-6 col-12">
        <label class="form-label">Data de Envio</label>
        <div class="input-group">
          <input type="date" id="filter-dt-inicio" name="filter-dt-inicio" class="form-control" placeholder="De" aria-label="Data inicial">
          <span class="input-group-text">a</span>
          <input type="date" id="filter-dt-fim" name="filter-dt-fim" class="form-control" placeholder="Até" aria-label="Data final">
        </div>
      </div>
      <div class="col-md-3 col-6">
        <div class="d-flex gap-2 justify-content-end">
          <button id="reset-filters" class="btn btn-outline-danger" type="button" title="Limpar todos os filtros">
            <i class="fas fa-eraser me-1"></i> Limpar Filtros
          </button>
          <button id="export-csv" class="btn btn-success" type="button" title="Exportar para CSV">
            <i class="fas fa-file-csv me-1"></i> Exportar
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<div id="filtros-ativos-resumo" class="mb-3" aria-live="polite" aria-atomic="true"></div>

<div class="view-toggle-container">
  <div class="row justify-content-between align-items-center mb-3 g-3">
    <div class="col-md-8 d-flex align-items-center gap-3">
      <h2 class="h5 mb-0">Proposições Digitais</h2>
      <!-- Botões juntos na mesma linha -->
      <div id="marcar-todos-container" class="ms-0" style="display:none;">
        <button id="btn-marcar-todos" type="button" class="btn btn-outline-secondary btn-sm">
          <i class="fas fa-check"></i> Marcar todas
        </button>
      </div>
      <div id="lote-actions-container" class="ms-0" style="display:none;">
        <button id="btn-incorporar-lote" class="btn btn-primary btn-sm" disabled>
          <i class="fas fa-layer-group"></i> Incorporar em lote
        </button>
      </div>
    </div>
    <div class="col-md-4 text-end">
      <div class="btn-group btn-group-sm" role="group" aria-label="Visualização">
        <button type="button" id="btn-view-table" class="btn btn-outline-primary active">
          <i class="fas fa-table"></i> Tabela
        </button>
        <button type="button" id="btn-view-cards" class="btn btn-outline-primary">
          <i class="fas fa-th-large"></i> Cards
        </button>
      </div>
    </div>
  </div>
</div>

<div class="tab-content mt-2">
  <div class="tab-pane active" id="tab-content" role="tabpanel">
    <!-- Grid 5 colunas, margens iguais -->
    <div id="cards-container" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xxl-5 g-3"></div>
    <div class="table-loading" id="table-container" aria-live="polite" aria-busy="false" tabindex="0">
      <div id="skeleton-loader" class="skeleton-loader" aria-hidden="true" style="display:none">
        <div class="skeleton-line"></div>
        <div class="skeleton-line short"></div>
        <div class="skeleton-line medium"></div>
        <div class="skeleton-line"></div>
        <div class="skeleton-line short"></div>
        <div class="skeleton-line medium"></div>
      </div>
      <span id="indicator-overlay" aria-hidden="true" style="display:none">
        <span class="spinner-border spinner-border-sm text-primary" style="width:var(--loading-spinner-size);height:var(--loading-spinner-size);" role="status" aria-hidden="true"></span>
      </span>
      <div class="table-responsive">
        <table id="proposicoes-table" class="table table-striped table-bordered" style="width:100%">
          <thead>
           <tr id="table-header-row">
             <th width="5%" class="col-select" style="display:none;"></th>
             <th width="12%" data-column="envio">Envio</th>
             <th width="15%" data-column="tipo">Tipo</th>
             <th width="35%" data-column="descricao">Ementa</th>
             <th width="15%" data-column="autor">Autoria</th>
             <th class="col-recebimento" width="12%">Incorporação</th>
             <th class="col-vinculo" width="10%">Vínculo</th>
             <th class="col-solicitacao_devolucao" width="12%">Pedido</th>
             <th class="col-devolucao" width="12%">Devolução</th>
             <th width="8%">Ações</th>
           </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>
    </div>
    <div class="row mt-3 align-items-center">
      <div class="col-md-6 col-12 mb-2 mb-md-0">
        <div class="dataTables_info" id="table-info" role="status" aria-live="polite">Mostrando 0 de 0 registros</div>
      </div>
      <div class="col-md-6 col-12">
        <nav aria-label="Navegação de páginas">
          <ul class="pagination justify-content-end flex-wrap mb-0" id="pagination"></ul>
        </nav>
      </div>
    </div>
  </div>
</div>

<dtml-var js_slot>

<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
<script>
const APP_CONFIG = {
  API_URL: '<dtml-var portal_url>/proposicoes-api',
  PORTAL_URL: '<dtml-var portal_url>'
};

window.appState = window.appState || {
  currentCaixa: 'revisao',
  currentPage: 1,
  currentView: 'table',
  sortColumn: 'envio',
  sortDirection: 'desc',
  table: null,
  isLoading: false,
  lastUpdate: null,
  cache: {},
  filtros: {},
  porPagina: 10,
  selecaoLote: new Set()
};

// === ORDENACAO PADRAO POR CAIXA (P/ USAR AO TROCAR DE ABA) ===
const CAIXA_ORDER_DEFAULT = {
  revisao:      { sortColumn: 'envio',    sortDirection: 'asc'  },
  assinatura:   { sortColumn: 'envio',    sortDirection: 'asc'  },
  protocolo:    { sortColumn: 'envio',    sortDirection: 'asc'  },
  incorporado:  { sortColumn: 'recebimento', sortDirection: 'desc' },
  devolvido:    { sortColumn: 'devolucao', sortDirection: 'desc' },
  pedido_devolucao: { sortColumn: 'solicitacao_devolucao', sortDirection: 'asc' }
};
function aplicarOrdenacaoPadraoCaixa(caixa) {
  const def = CAIXA_ORDER_DEFAULT[caixa];
  if (def) {
    window.appState.sortColumn = def.sortColumn;
    window.appState.sortDirection = def.sortDirection;
  } else {
    window.appState.sortColumn = 'envio';
    window.appState.sortDirection = 'desc';
  }
}
// --- SELEÇÃO EM LOTE ---
function isElegivelIncorporacao(row) {
  return (
    row.tip_mat_ou_doc === 'M' &&
    (!row.cod_mat_ou_doc || row.cod_mat_ou_doc === null) &&
    !row.devolucao && !row.solicitacao_devolucao
  );
}
function getAllElegiveisIds() {
  if (window.appState.currentView === 'table' && window.appState.table) {
    return window.appState.table.data().toArray()
      .filter(isElegivelIncorporacao)
      .map(row => String(row.id));
  }
  if (window.appState.currentView === 'cards') {
    let ids = [];
    $('#cards-container .incorporar-checkbox-card').each(function() {
      if (!$(this).prop('disabled')) ids.push($(this).val());
    });
    return ids;
  }
  return [];
}
function allElegiveisMarcadas() {
  const elegiveis = new Set(getAllElegiveisIds());
  return elegiveis.size > 0 && Array.from(elegiveis).every(id => window.appState.selecaoLote.has(id));
}
function updateBtnMarcarTodos() {
  if ($('#btn-marcar-todos').length === 0) return;
  if (allElegiveisMarcadas()) {
    $('#btn-marcar-todos').html('<i class="fas fa-times-circle"></i> Desmarcar todas');
  } else {
    $('#btn-marcar-todos').html('<i class="fas fa-check"></i> Marcar todas');
  }
}
function getSelecionadosParaLote() {
  return Array.from(window.appState.selecaoLote);
}
$(document).on('click', '#btn-marcar-todos', function() {
  const elegiveis = getAllElegiveisIds();
  if (allElegiveisMarcadas()) {
    elegiveis.forEach(id => window.appState.selecaoLote.delete(id));
  } else {
    elegiveis.forEach(id => window.appState.selecaoLote.add(id));
  }
  if (window.appState.currentView === 'table') {
    $('.incorporar-checkbox').each(function() {
      const id = $(this).val();
      $(this).prop('checked', window.appState.selecaoLote.has(id));
    });
  } else {
    $('.incorporar-checkbox-card').each(function() {
      const id = $(this).val();
      $(this).prop('checked', window.appState.selecaoLote.has(id));
    });
  }
  updateBotaoLote();
  updateBtnMarcarTodos();
});
$(document)
  .on('change', '.incorporar-checkbox', function() {
    const id = $(this).val();
    if ($(this).is(':checked')) window.appState.selecaoLote.add(id);
    else window.appState.selecaoLote.delete(id);
    updateBotaoLote();
    updateBtnMarcarTodos();
  })
  .on('change', '.incorporar-checkbox-card', function() {
    const id = $(this).val();
    if ($(this).is(':checked')) window.appState.selecaoLote.add(id);
    else window.appState.selecaoLote.delete(id);
    updateBotaoLote();
    updateBtnMarcarTodos();
  });

function updateBotaoLote() {
  const qtde = window.appState.selecaoLote.size;
  $('#btn-incorporar-lote').prop('disabled', qtde === 0);
  $('#marcar-todos-container').toggle(window.appState.currentCaixa === 'protocolo' && getAllElegiveisIds().length > 0);
  updateBtnMarcarTodos();
}

// --- FILTROS, SORT, LOCALSTORAGE ---
function lerFiltrosForm() {
  return {
    tipo: $('#filter-tipo').val(),
    autor: $('#filter-autor').val(),
    assunto: $('#filter-assunto').val(),
    dt_inicio: $('#filter-dt-inicio').val(),
    dt_fim: $('#filter-dt-fim').val()
  };
}
function renderResumoFiltros() {
  const filtros = lerFiltrosForm();
  const filtroNomes = {
    tipo: 'Tipo',
    autor: 'Autoria',
    assunto: 'Ementa',
    dt_inicio: 'Data Inicial',
    dt_fim: 'Data Final'
  };
  let chips = '';
  let qtdAtivos = 0;
  Object.entries(filtros).forEach(([k, v]) => {
    if (v) {
      qtdAtivos++;
      chips += `<span class="filtro-chip" data-filtro="${k}">
        <strong>${filtroNomes[k] || k}:</strong> ${_.escape(v)}
        <span class="chip-remove" tabindex="0" role="button" title="Remover filtro" aria-label="Remover filtro ${filtroNomes[k] || k}" data-remove-filtro="${k}">&times;</span>
      </span>`;
    }
  });
  const container = $('#filtros-ativos-resumo');
  if (qtdAtivos > 0) {
    container.html(`<div class="mb-1 fw-medium">Filtros ativos: </div>${chips}`);
  } else {
    container.html(`<span class="text-muted">Nenhum filtro aplicado.</span>`);
  }
}
function resetSortIfNoFilters() {
  const filtros = lerFiltrosForm();
  const temFiltro = filtros.tipo || filtros.autor || filtros.assunto ||
                    filtros.dt_inicio || filtros.dt_fim;
  if (!temFiltro) {
    window.appState.sortColumn = 'envio';
    window.appState.sortDirection = 'desc';
  }
}
function saveFiltersToLocalStorage() {
  const filters = {
    ...lerFiltrosForm(),
    caixa: window.appState.currentCaixa,
    sortColumn: window.appState.sortColumn,
    sortDirection: window.appState.sortDirection,
    porPagina: window.appState.porPagina,
    currentView: window.appState.currentView
  };
  localStorage.setItem('proposicoes_filters', JSON.stringify(filters));
}
function loadFiltersFromLocalStorage() {
  const saved = localStorage.getItem('proposicoes_filters');
  if (saved) {
    try {
      const filters = JSON.parse(saved);
      $('#filter-tipo').val(filters.tipo || '');
      $('#filter-autor').val(filters.autor || '');
      $('#filter-assunto').val(filters.assunto || '');
      $('#filter-dt-inicio').val(filters.dt_inicio || '');
      $('#filter-dt-fim').val(filters.dt_fim || '');
      $('#select-por-pagina').val(filters.porPagina || '10');
      if (filters.caixa && $(`[data-caixa="${filters.caixa}"]`).length) {
        window.appState.currentCaixa = filters.caixa;
      }
      if (filters.sortColumn) {
        window.appState.sortColumn = filters.sortColumn;
        window.appState.sortDirection = filters.sortDirection || 'desc';
      }
      if (filters.porPagina) {
        window.appState.porPagina = parseInt(filters.porPagina, 10);
      }
      if (filters.currentView) {
        window.appState.currentView = filters.currentView;
        $(`#btn-view-${filters.currentView}`).addClass('active').siblings().removeClass('active');
      }
    } catch (e) {
      console.error('Erro ao carregar filtros salvos:', e);
    }
  }
}

// --- FEEDBACKS ---
function showLoadingSkeleton(show = true) {
  if (show) {
    $('#skeleton-loader').show();
    $('#proposicoes-table').hide();
    $('#cards-container').hide();
    $('#table-container').attr('aria-busy', 'true');
  } else {
    $('#skeleton-loader').hide();
    updateTable(window.appState.table?.data().toArray() || []);
    $('#table-container').attr('aria-busy', 'false');
  }
}
function showSpinner(show = true) {
  if (show) {
    $('#indicator-overlay').show();
    $('#proposicoes-table').addClass('table-blur');
    $('#cards-container').addClass('table-blur');
  } else {
    $('#indicator-overlay').hide();
    $('#proposicoes-table').removeClass('table-blur');
    $('#cards-container').removeClass('table-blur');
  }
}
function showToast(message, type = 'success') {
  const toastId = 'toast-' + Date.now();
  const icon = type === 'success' ? 'fa-check-circle' : 
               type === 'danger' ? 'fa-exclamation-triangle' : 'fa-info-circle';
  const toastHtml = `
    <div id="${toastId}" class="alert alert-${type} alert-dismissible fade show mb-0" role="alert">
      <div class="d-flex align-items-center">
        <i class="fas ${icon} me-2"></i>
        <div>${message}</div>
      </div>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fechar"></button>
    </div>
  `;
  $('#alert-area').html(toastHtml);
  setTimeout(() => { $(`#${toastId}`).alert('close'); }, 5000);
}

// --- CARREGAMENTO PRINCIPAL AJAX ---
async function loadData(caixa, page = 1, forceRefresh = false) {
  if (window.appState.isLoading) return;
  window.appState.isLoading = true;
  window.appState.currentCaixa = caixa;
  window.appState.currentPage = page;
  try {
    const response = await $.ajax({
      url: APP_CONFIG.API_URL,
      data: Object.assign(
        { 
          caixa, 
          pagina: page, 
          por_pagina: window.appState.porPagina,
          ordenar_por: window.appState.sortColumn,
          ordenar_direcao: window.appState.sortDirection
        },
        window.appState.filtros
      ),
      dataType: 'json'
    });
    if (window.appState.table) {
      window.appState.table.clear();
      if (response.dados && response.dados.length > 0) {
        window.appState.table.rows.add(response.dados).draw();
      }
    }
    updateTable(response.dados || []);
    updatePagination(response.paginacao);
    updateBadge(caixa, response.paginacao.total);
    document.title = `Recebimento de Proposições - ${$(`[data-caixa="${caixa}"]`).text().trim()} | SAGL`;
    window.appState.selecaoLote = new Set();
    updateBotaoLote();
  } catch (error) {
    showToast(
      error.responseJSON?.erro || `Erro ao carregar dados: ${error.status}`,
      'danger'
    );
    updateTable([]);
    updatePagination({ total: 0, pagina: 1, por_pagina: window.appState.porPagina, total_paginas: 1 });
  } finally {
    window.appState.isLoading = false;
    showLoadingSkeleton(false);
    showSpinner(false);
    saveFiltersToLocalStorage();
  }
}

// --- VÍNCULO: EXIBIÇÃO CORRETA DO LINK SIGLA/NUMERO/ANO ---
function formatarVinculoTabela(data) {
  if (data && (data.materia_id || (data.tipo === 'matéria' && data.id))) {
    const mid = data.materia_id || data.id;
    const sigla = data.sigla || '';
    const numero = data.numero || '';
    const ano = data.ano || '';
    const txt = `${sigla} ${numero}/${ano}`.trim();
    return `<a href="${APP_CONFIG.PORTAL_URL}/cadastros/materia/materia_mostrar_proc?cod_materia=${mid}" 
              target="_blank" rel="noopener" title="Abrir matéria ${txt}">
              ${txt}</a>`;
  } else if (data && data.tipo === 'matéria') {
    return `${data.sigla || ''} ${data.numero || ''}/${data.ano || ''}`;
  } else if (data && data.tipo === 'documento') {
    return `Documento ${data.id}`;
  }
  return '<span class="text-muted">Não incorporada</span>';
}

function updateTable(data) {
  if (window.appState.currentView === 'table') {
    $('#cards-container').hide();
    $('#proposicoes-table').show();
    if (window.appState.table) {
      if (data && data.length > 0) {
        toggleHeaderColumns(window.appState.currentCaixa);
      } else {
        const colspan = window.appState.table.columns().visible().reduce((a, b) => a + (b ? 1 : 0), 0);
        $('#proposicoes-table tbody').html(`
          <tr>
            <td colspan="${colspan}" class="empty-table-message text-center" tabindex="0">
              <i class="fas fa-file-alt" aria-hidden="true"></i>
              <div>Nenhuma proposição encontrada</div>
            </td>
          </tr>
        `);
      }
      $('.incorporar-checkbox').each(function() {
        const id = $(this).val();
        $(this).prop('checked', window.appState.selecaoLote.has(id));
      });
    }
  } else {
    $('#proposicoes-table').hide();
    $('#cards-container').show();
    renderCards(data || []);
  }
  updateBotaoLote();
}

function renderCards(data) {
  const $container = $('#cards-container').empty();
  if (data.length === 0) {
    $container.html(`
      <div class="col-12 text-center w-100 py-5">
        <i class="fas fa-file-alt fa-3x mb-3 text-muted"></i>
        <p class="text-muted">Nenhuma proposição encontrada</p>
      </div>
    `);
    return;
  }
  data.forEach(item => {
    let envio = item.envio || '';
    if (/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}/.test(envio)) {
      const dt = new Date(envio);
      const dia = String(dt.getDate()).padStart(2, '0');
      const mes = String(dt.getMonth() + 1).padStart(2, '0');
      const ano = dt.getFullYear();
      const hora = String(dt.getHours()).padStart(2, '0');
      const min = String(dt.getMinutes()).padStart(2, '0');
      const seg = String(dt.getSeconds()).padStart(2, '0');
      envio = `${dia}/${mes}/${ano} ${hora}:${min}:${seg}`;
    }
    const selecionavel = isElegivelIncorporacao(item) && window.appState.currentCaixa === 'protocolo';
    const checked = window.appState.selecaoLote.has(String(item.id)) ? 'checked' : '';
    let vinculoHtml = '';
    if (item.vinculo && (item.vinculo.materia_id || (item.vinculo.tipo === 'matéria' && item.vinculo.id))) {
      const mid = item.vinculo.materia_id || item.vinculo.id;
      const sigla = item.vinculo.sigla || '';
      const numero = item.vinculo.numero || '';
      const ano = item.vinculo.ano || '';
      const txt = `${sigla} ${numero}/${ano}`.trim();
      vinculoHtml = `
        <p class="card-text">
          <strong>Vínculo:</strong>
          <a href="${APP_CONFIG.PORTAL_URL}/cadastros/materia/materia_mostrar_proc?cod_materia=${mid}"
            target="_blank" rel="noopener" class="ms-1">
            ${txt}
          </a>
        </p>
      `;
    } else if (item.vinculo && item.vinculo.tipo === 'documento') {
      vinculoHtml = `
        <p class="card-text">
          <strong>Vínculo:</strong> Documento ${item.vinculo.id}
        </p>
      `;
    }
    const cardHtml = `
      <div class="col d-flex">
        <div class="proposicao-card ${item.prioritaria ? 'prioritaria' : ''} h-100 d-flex flex-column w-100">
          <div class="card-header d-flex align-items-left justify-content-between">
            <span class="badge bg-secondary">${item.tipo || ''}</span>
            ${selecionavel
              ? `<input type="checkbox" class="incorporar-checkbox-card ms-2" value="${item.id}" aria-label="Selecionar proposição para incorporar" ${checked}>`
              : ''
            }
            <small class="text-muted">${envio}</small>
          </div>
          <div class="card-body flex-grow-1">
            <h5 class="card-title">${item.descricao || 'Sem descrição'}</h5>
            <p class="card-text"><strong>Autoria:</strong> ${item.autor || 'Não informado'}</p>
            ${(window.appState.currentCaixa === 'incorporado' && item.recebimento) 
              ? `<p class="card-meta"><strong>Incorporada em:</strong> ${item.recebimento}</p>` 
              : ''}
            ${vinculoHtml}
            ${item.solicitacao_devolucao ? `<p class="card-meta"><strong>Pedido devolução:</strong> ${item.solicitacao_devolucao}</p>` : ''}
            ${item.devolucao ? `<p class="card-meta"><strong>Devolvida em:</strong> ${item.devolucao}</p>` : ''}
          </div>
          <div class="card-footer card-actions bg-transparent border-0 pt-0 mt-auto text-end">
            ${window.appState.currentCaixa === 'protocolo' && item.pdf_assinado_url ? `
              <a href="${item.pdf_assinado_url}" class="btn btn-sm btn-outline-success me-1" title="Baixar PDF assinado" target="_blank" rel="noopener">
                <i class="fas fa-file-pdf"></i> PDF
              </a>
            ` : ''}
            <a href="${APP_CONFIG.PORTAL_URL}/cadastros/proposicao/proposicao_mostrar_proc?cod_proposicao=${item.id}"
              class="btn btn-sm btn-primary btn-card-action" title="Visualizar">
              <i class="fas fa-eye"></i> Detalhes
            </a>
          </div>
        </div>
      </div>
    `;
    $container.append(cardHtml);
  });
  updateBtnMarcarTodos();
}

// --- DATATABLES ---
function initTable() {
  if (window.appState.table && $.fn.DataTable.isDataTable('#proposicoes-table')) {
    window.appState.table.destroy();
  }
  window.appState.table = $('#proposicoes-table').DataTable({
    searching: false, 
    info: false, 
    paging: false, 
    ordering: true,
    columns: [
      { // Coluna seleção (checkbox)
        data: null,
        orderable: false,
        className: 'text-center col-select',
        visible: false,
        render: function(data, type, row) {
          if (isElegivelIncorporacao(row) && window.appState.currentCaixa === 'protocolo')
            return `<input type="checkbox" class="incorporar-checkbox" value="${row.id}" aria-label="Selecionar proposição para incorporar">`;
          return '';
        }
      },
      { data: 'envio', render: d => d || '', className: 'text-center' },
      { data: 'tipo', className: 'text-center' },
      { data: 'descricao', render: (d, t, row) => (d || 'Sem descrição') + ` <span class="text-muted small">[${row.npe||''}]</span>` },
      { data: 'autor', className: 'text-center' },
      { data: 'recebimento', className: 'text-center', render: d => d || '' },
      { data: 'vinculo', className: 'col-vinculo text-center', render: formatarVinculoTabela },
      { data: 'solicitacao_devolucao', className: 'col-solicitacao_devolucao text-center', render: d => d || '' },
      { data: 'devolucao', className: 'col-devolucao text-center', render: d => d || '' },
      {
        data: null,
        orderable: false,
        className: 'text-center',
        render: (data, type, row) => {
          let btns = '';
          // Só mostra se está na caixa protocolo e tem PDF assinado:
          if (window.appState.currentCaixa === 'protocolo' && row.pdf_assinado_url) {
            btns += `<a href="${row.pdf_assinado_url}" class="btn btn-sm btn-outline-success me-1" title="Baixar PDF assinado" target="_blank" rel="noopener">
                      <i class="fas fa-file-pdf"></i>
                    </a>`;
          }
          btns += `<a href="${APP_CONFIG.PORTAL_URL}/cadastros/proposicao/proposicao_mostrar_proc?cod_proposicao=${row.id}"
                      class="btn btn-sm btn-outline-primary btn-acao" title="Visualizar Proposição" aria-label="Visualizar Proposição ${row.id}">
                      <i class="fas fa-eye" aria-hidden="true"></i>
                   </a>`;
          return btns;
        }
      }
    ],
    createdRow: function(row, data) { 
      if (data.prioritaria) $(row).addClass('table-warning'); 
    }
  });
  toggleHeaderColumns(window.appState.currentCaixa);
  initSorting();
  $('.col-select').toggle(window.appState.currentCaixa === 'protocolo');
  window.appState.table.column(0).visible(window.appState.currentCaixa === 'protocolo');
}

  function toggleHeaderColumns(caixa) {
    // Índices das colunas:
    // 0: seleção (checkbox)
    // 1: envio
    // 2: tipo
    // 3: descricao
    // 4: autor
    // 5: recebimento (só incorporado)
    // 6: vinculo
    // 7: solicitacao_devolucao
    // 8: devolucao
    // 9: ações <-- sempre visível!

    const columnsByCaixa = {
      revisao:          [false, true, true, true, true, false, false, false, false, true],
      assinatura:       [false, true, true, true, true, false, false, false, false, true],
      protocolo:        [true,  true, true, true, true, false, false, false, false, true],
      incorporado:      [false, true, true, true, true, true,  true,  false, false, true],
      pedido_devolucao: [false, true, true, true, true, false, false, true,  false, true],
      devolvido:        [false, true, true, true, true, false, false, false, true,  true]
    };
    // fallback padrão caso "caixa" não seja reconhecida:
    const colVisibility = columnsByCaixa[caixa] || [false, true, true, true, true, false, false, false, false, true];

    if (window.appState.table) {
      colVisibility.forEach((visible, idx) => {
        window.appState.table.column(idx).visible(visible);
      });
      setTimeout(() => { 
        if (window.appState.table) {
          window.appState.table.responsive?.recalc?.();
          const $header = $(`#proposicoes-table th[data-column="${window.appState.sortColumn}"]`);
          if ($header.length) {
            const iconClass = window.appState.sortDirection === 'asc' ? 'fa-sort-up' : 'fa-sort-down';
            $header.find('i').removeClass('fa-sort').addClass(iconClass);
          }
        }
      }, 100);
      $('.col-select').toggle(window.appState.currentCaixa === 'protocolo');
      window.appState.table.column(0).visible(window.appState.currentCaixa === 'protocolo');
    }
  }

function initSorting() {
  $('#proposicoes-table th[data-column]').on('click', function() {
    const column = $(this).data('column');
    const $icon = $(this).find('i');
    const isCurrent = window.appState.sortColumn === column;
    $('#proposicoes-table th i').removeClass('fa-sort-up fa-sort-down').addClass('fa-sort');
    let direction = 'asc';
    if (isCurrent) {
      direction = window.appState.sortDirection === 'asc' ? 'desc' : 'asc';
    }
    $icon.removeClass('fa-sort').addClass(direction === 'asc' ? 'fa-sort-up' : 'fa-sort-down');
    window.appState.sortColumn = column;
    window.appState.sortDirection = direction;
    loadData(window.appState.currentCaixa, 1, true);
    loadCounts();
  });
}

// --- PAGINAÇÃO, BADGES, TABS, ETC ---
function updatePagination(pagination) {
  let html = '';
  let total = pagination.total || 0;
  let pagina = pagination.pagina || 1;
  let por_pagina = pagination.por_pagina || window.appState.porPagina;
  let total_paginas = pagination.total_paginas || 1;
  let inicio = total > 0 ? ((pagina - 1) * por_pagina + 1) : 0;
  let fim = Math.min(inicio + por_pagina - 1, total);
  $('#table-info').text(`Mostrando ${inicio} a ${fim} de ${total} registros`);
  if (total_paginas > 1) {
    if (pagina > 1) {
      html += `<li class="page-item"><a class="page-link" href="#" data-pag="1" aria-label="Primeira página">&laquo;</a></li>`;
      html += `<li class="page-item"><a class="page-link" href="#" data-pag="${pagina-1}" aria-label="Página anterior">&lsaquo;</a></li>`;
    } else {
      html += `<li class="page-item disabled"><span class="page-link" aria-hidden="true">&laquo;</span></li>`;
      html += `<li class="page-item disabled"><span class="page-link" aria-hidden="true">&lsaquo;</span></li>`;
    }
    let start = Math.max(1, pagina - 2);
    let end = Math.min(total_paginas, pagina + 2);
    if (start > 1) {
      html += `<li class="page-item"><a class="page-link" href="#" data-pag="1">1</a></li>`;
      if (start > 2) html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
    }
    for (let i = start; i <= end; i++) {
      if (i === pagina) {
        html += `<li class="page-item active"><span class="page-link" aria-current="page">${i}</span></li>`;
      } else {
        html += `<li class="page-item"><a class="page-link" href="#" data-pag="${i}">${i}</a></li>`;
      }
    }
    if (end < total_paginas) {
      if (end < total_paginas - 1) html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
      html += `<li class="page-item"><a class="page-link" href="#" data-pag="${total_paginas}">${total_paginas}</a></li>`;
    }
    if (pagina < total_paginas) {
      html += `<li class="page-item"><a class="page-link" href="#" data-pag="${pagina+1}" aria-label="Próxima página">&rsaquo;</a></li>`;
      html += `<li class="page-item"><a class="page-link" href="#" data-pag="${total_paginas}" aria-label="Última página">&raquo;</a></li>`;
    } else {
      html += `<li class="page-item disabled"><span class="page-link" aria-hidden="true">&rsaquo;</span></li>`;
      html += `<li class="page-item disabled"><span class="page-link" aria-hidden="true">&raquo;</span></li>`;
    }
  }
  $('#pagination').html(html);
}
function updateBadge(caixa, count) {
  const $badge = $(`#badge-${caixa}`);
  $badge.text(count || 0)
    .toggleClass('bg-primary', count > 0)
    .toggleClass('bg-secondary', count === 0);
}
function updateActiveTab(caixa) {
  $('.nav-link').removeClass('active').attr('aria-selected', 'false').attr('tabindex', '-1');
  $(`[data-caixa="${caixa}"]`).addClass('active').attr('aria-selected', 'true').attr('tabindex', '0');
}
function updateLoteActionsVisibility() {
  if (window.appState.currentCaixa === 'protocolo') {
    $('#lote-actions-container').show();
    $('#marcar-todos-container').show();
  } else {
    $('#lote-actions-container').hide();
    $('#marcar-todos-container').hide();
  }
}
function loadCounts() {
  const caixas = ['revisao', 'assinatura', 'protocolo', 'incorporado', 'pedido_devolucao', 'devolvido'];
  const filtros = lerFiltrosForm();
  caixas.forEach(caixa => {
    if ($(`[data-caixa="${caixa}"]`).length) {
      const params = Object.assign(
        {
          caixa: caixa,
          contar: 1
        },
        filtros
      );
      $.get(APP_CONFIG.API_URL, params)
        .done(resp => {
          updateBadge(caixa, resp.paginacao.total);
        })
        .fail(() => {
          updateBadge(caixa, 0);
        });
    }
  });
}

// --- FILTROS E VIEW ---
function initFilters() {
  $('#filter-assunto').on('keydown', function(e) {
    if (e.key === 'Enter') {
      e.preventDefault();
      window.appState.currentPage = 1;
      window.appState.filtros = lerFiltrosForm();
      resetSortIfNoFilters();
      renderResumoFiltros();
      loadData(window.appState.currentCaixa, 1, true);
      loadCounts();
    }
  });
  $('#btn-global-search').on('click', function() {
    window.appState.currentPage = 1;
    window.appState.filtros = lerFiltrosForm();
    resetSortIfNoFilters();
    renderResumoFiltros();
    loadData(window.appState.currentCaixa, 1, true);
    loadCounts();
  });
  $('#filter-tipo, #filter-autor, #filter-assunto, #filter-dt-inicio, #filter-dt-fim').on('input change', _.debounce(function() {
    window.appState.currentPage = 1;
    window.appState.filtros = lerFiltrosForm();
    resetSortIfNoFilters();
    renderResumoFiltros();
    loadData(window.appState.currentCaixa, 1, true);
    loadCounts();
  }, 500));
  $('#reset-filters').on('click', function(e) {
    e.preventDefault();
    $('#filter-tipo').val('');
    $('#filter-autor').val('');
    $('#filter-assunto').val('');
    $('#filter-dt-inicio').val('');
    $('#filter-dt-fim').val('');
    window.appState.currentPage = 1;
    window.appState.filtros = {};
    resetSortIfNoFilters();
    renderResumoFiltros();
    loadData(window.appState.currentCaixa, 1, true);
    loadCounts();
  });
  $('#export-csv').on('click', function(e) {
    e.preventDefault();
    const filtros = lerFiltrosForm();
    const params = Object.assign(
      { 
        caixa: window.appState.currentCaixa,
        por_pagina: window.appState.porPagina,
        ordenar_por: window.appState.sortColumn,
        ordenar_direcao: window.appState.sortDirection
      }, 
      filtros
    );
    const query = $.param(params);
    window.open(`${APP_CONFIG.PORTAL_URL}/proposicoes-csv?${query}`, '_blank');
  });
  $('#select-por-pagina').on('change', function() {
    window.appState.porPagina = parseInt($(this).val(), 10);
    window.appState.currentPage = 1;
    loadData(window.appState.currentCaixa, 1, true);
    loadCounts();
  });
}
function initViewToggle() {
  $('#btn-view-table').on('click', function() {
    if (window.appState.currentView !== 'table') {
      window.appState.currentView = 'table';
      $(this).addClass('active').siblings().removeClass('active');
      updateTable(window.appState.table?.data().toArray() || []);
      saveFiltersToLocalStorage();
      updateLoteActionsVisibility();
    }
  });
  $('#btn-view-cards').on('click', function() {
    if (window.appState.currentView !== 'cards') {
      window.appState.currentView = 'cards';
      $(this).addClass('active').siblings().removeClass('active');
      updateTable(window.appState.table?.data().toArray() || []);
      saveFiltersToLocalStorage();
      updateLoteActionsVisibility();
    }
  });
}
function handleTabChange(e) {
  e.preventDefault();
  const $tab = $(this);
  const caixa = $tab.data('caixa');
  if (window.appState.currentCaixa === caixa) return;
  aplicarOrdenacaoPadraoCaixa(caixa); // <-- Reset ordenação ao trocar de aba
  updateActiveTab(caixa);
  $tab.attr('tabindex', '0').focus();
  window.appState.currentCaixa = caixa;
  window.appState.currentPage = 1;
  showLoadingSkeleton(true);
  showSpinner(true);
  loadData(caixa, 1, true);
  loadCounts();
  updateTable(window.appState.table?.data().toArray() || []);
  updateLoteActionsVisibility();
  showToast(`Aba "${$tab.text().trim()}" carregada.`, 'info');
}

// --- INCORPORAR LOTE ---
$('#btn-incorporar-lote').on('click', async function() {
  const ids = getSelecionadosParaLote();
  if (!ids.length) return;
  $(this).prop('disabled', true);
  showSpinner(true);
  try {
    const resp = await $.ajax({
      method: 'POST',
      url: APP_CONFIG.PORTAL_URL + '/proposicoes-incorporar-lote',
      data: { proposicoes_ids: JSON.stringify(ids) }
    });
    let msg = 'Incorporação em lote solicitada com sucesso!';
    if (resp && resp.resultados && resp.resultados.length > 0) {
      const ok = resp.resultados.filter(r => r.resultado === 'ok').length;
      const erro = resp.resultados.length - ok;
      msg = `✅ ${ok} proposição(ões) incorporada(s)` +
            (erro ? `, ${erro} falhou(aram)` : '') + '.';
    }
    showToast(msg, 'success');
    window.appState.selecaoLote = new Set();
    updateBotaoLote();
    loadData(window.appState.currentCaixa, window.appState.currentPage, true);
    loadCounts();
  } catch (e) {
    showToast('Falha ao incorporar em lote', 'danger');
  } finally {
    showSpinner(false);
    $(this).prop('disabled', false);
  }
});

// --- CHIPS DE FILTROS ATIVOS (REMOVER FILTRO) ---
$(document).on('click keydown', '.chip-remove', function(e) {
  if (e.type === 'click' || e.key === 'Enter' || e.key === ' ') {
    const filtro = $(this).data('remove-filtro');
    if (filtro) {
      $(`#filter-${filtro.replace('_', '-')}`).val('');
      renderResumoFiltros();
      window.appState.filtros = lerFiltrosForm();
      resetSortIfNoFilters();
      loadData(window.appState.currentCaixa, 1, true);
      loadCounts();
    }
  }
});

// --- INICIALIZAÇÃO PRINCIPAL ---
$(document).ready(function() {
  loadFiltersFromLocalStorage();
  renderResumoFiltros();
  window.appState.filtros = lerFiltrosForm();
  resetSortIfNoFilters();
  initTable();
  initFilters();
  initViewToggle();

  // Seleciona aba inicial conforme papel, mas garante ordenação padrão!
  if (USER_ROLES.includes('Operador') || USER_ROLES.includes('Operador Materia')) {
    window.appState.currentCaixa = 'protocolo';
  } else if (USER_ROLES.includes('Revisor Proposicao') || USER_ROLES.includes('Chefia Revisão')) {
    window.appState.currentCaixa = 'revisao';
  } else {
    window.appState.currentCaixa = 'revisao';
  }
  aplicarOrdenacaoPadraoCaixa(window.appState.currentCaixa); // <-- Garante ordem ao iniciar

  updateActiveTab(window.appState.currentCaixa);
  updateLoteActionsVisibility();
  loadData(window.appState.currentCaixa, 1, true);
  loadCounts();
  $(document)
    .on('click', '[data-caixa]', function(e) { handleTabChange.call(this, e); })
    .on('click', '#pagination a.page-link', function(e) {
      e.preventDefault();
      const pag = parseInt($(this).data('pag'));
      if (pag && pag !== window.appState.currentPage) {
        loadData(window.appState.currentCaixa, pag, true);
        loadCounts();
      }
    })
    .on('click', '.btn-quick-review', function() {
      const id = $(this).data('id');
      showToast(`Revisão rápida iniciada para proposição ${id}`, 'info');
    });
  let resizeTimer;
  $(window).on('resize', function() {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(() => {
      if (window.appState.table) {
        window.appState.table.columns.adjust().responsive?.recalc?.();
      }
    }, 250);
  });
});

</script>

<dtml-var footer_html>
