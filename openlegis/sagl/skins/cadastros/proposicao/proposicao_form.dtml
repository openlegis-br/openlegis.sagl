<dtml-var header_html>

<style>
/* Estilos aprimorados */
.proposicao-container {
    margin: 0 auto;
    padding: 0 15px;
}

.card-proposicao {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    margin-bottom: 25px;
}

.card-header {
    background-color: #f8f9fa;
    border-bottom: 1px solid #e0e0e0;
    padding: 1rem 1.5rem;
    border-radius: 10px 10px 0 0 !important;
}

.card-header h5 {
    font-weight: 600;
    color: #2c3e50;
    margin: 0;
}

.section-title {
    font-size: 1.1rem;
    color: #495057;
    font-weight: 500;
    margin-bottom: 1rem;
    border-bottom: 1px solid #eee;
    padding-bottom: 0.5rem;
}

.required-field::after {
    content: " *";
    color: #dc3545;
}

.form-label {
    font-weight: 500;
    color: #495057;
    margin-bottom: 0.5rem;
}

.btn-action {
    border-radius: 6px;
    padding: 0.5rem 1.25rem;
    font-weight: 500;
    transition: all 0.2s;
}

.btn-action-sm {
    padding: 0.35rem 0.75rem;
    font-size: 0.875rem;
}

.drop-area {
    border: 2px dashed #dee2e6;
    border-radius: 8px;
    background-color: #f8f9fa;
    padding: 2rem;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s;
}

.drop-area:hover {
    border-color: #adb5bd;
    background-color: #f1f3f5;
}

.drop-area.highlight {
    border-color: #0d6efd;
    background-color: #e7f1ff;
}

.file-preview {
    display: flex;
    align-items: center;
    padding: 0.75rem 1rem;
    background-color: #f8f9fa;
    border-radius: 6px;
    margin-bottom: 0.75rem;
}

.file-preview-icon {
    font-size: 1.5rem;
    margin-right: 1rem;
    color: #6c757d;
}

.file-preview-info {
    flex-grow: 1;
}

.file-preview-actions {
    margin-left: 1rem;
}

.image-preview-container {
    position: relative;
    margin-bottom: 1rem;
}

.image-preview {
    max-width: 100%;
    border-radius: 6px;
    border: 1px solid #dee2e6;
}

.image-actions {
    bottom: 10px;
    right: 10px;
}

.badge-draft {
    background-color: #6c757d;
    color: white;
}

.badge-submitted {
    background-color: #0d6efd;
    color: white;
}

.badge-received {
    background-color: #198754;
    color: white;
}

.badge-returned {
    background-color: #dc3545;
    color: white;
}

.progress-steps {
    display: flex;
    justify-content: space-between;
    margin-bottom: 2rem;
    position: relative;
}

.progress-steps::before {
    content: "";
    position: absolute;
    top: 15px;
    left: 0;
    right: 0;
    height: 2px;
    background-color: #e9ecef;
    z-index: 1;
}

.step {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    z-index: 2;
}

.step-icon {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: #e9ecef;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 0.5rem;
    color: #6c757d;
    font-size: 1rem;
}

.step.active .step-icon {
    background-color: #0d6efd;
    color: white;
}

.step.completed .step-icon {
    background-color: #198754;
    color: white;
}

.step-label {
    font-size: 0.85rem;
    color: #6c757d;
    text-align: center;
}

.step.active .step-label {
    color: #0d6efd;
    font-weight: 500;
}

.step.completed .step-label {
    color: #198754;
}

.help-text {
    font-size: 0.85rem;
    color: #6c757d;
    margin-top: 0.25rem;
}

/* Melhorias para mobile */
@media (max-width: 768px) {
    .btn-group {
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    .btn-group .btn {
        flex: 1 0 auto;
    }
    
    .progress-steps {
        flex-wrap: wrap;
        gap: 1rem;
    }
    
    .step {
        flex: 1 0 60px;
    }
}

/* Animações */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

.animate-fade-in {
    animation: fadeIn 0.3s ease-out forwards;
}

/* Tooltips personalizados */
.tooltip-inner {
    max-width: 300px;
    padding: 0.5rem 1rem;
    background-color: #495057;
    font-size: 0.85rem;
}

/* Select2 customizado */
.select2-container--default .select2-selection--single {
    height: 38px;
    border: 1px solid #ced4da;
    border-radius: 6px;
}

.select2-container--default .select2-selection--single .select2-selection__rendered {
    line-height: 36px;
    padding-left: 12px;
}

.select2-container--default .select2-selection--single .select2-selection__arrow {
    height: 36px;
}

select.readonly,
.select2-selection.readonly {
    background-color: #e9ecef !important;
    color: #6c757d !important;
    pointer-events: none !important;
    opacity: 1 !important;
    cursor: not-allowed !important;
}

/* Textarea auto-resize */
.auto-resize {
    min-height: 100px;
    resize: none;
    transition: height 0.2s;
}

/* Cards de ação */
.action-card {
    border-left: 4px solid #0d6efd;
    transition: all 0.2s;
}

.action-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
}
/* Estilo para a lista de arquivos */
.list-group {
    max-height: 300px;
    overflow-y: auto;
}

.list-group-item {
    transition: all 0.3s ease;
}

.remove-file {
    opacity: 0.7;
    transition: all 0.2s ease;
}

.remove-file:hover {
    opacity: 1;
    transform: scale(1.1);
}

/* Melhoria na área de drop */
.highlight {
    border-color: #0d6efd !important;
    background-color: #e7f1ff !important;
}

.required-field::after, .form-label.required::after {
    content: ' *';
    color: #dc3545;
    font-weight: bold;
    margin-left: 2px;
}

.sticky-footer-actions {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1060; /* acima dos cards e overlays */
    background: #fff;
    border-top: 1px solid #dee2e6;
    box-shadow: 0 -2px 10px rgba(0,0,0,0.07);
    padding: 0.75rem 1.5rem;
    display: flex;
    justify-content: flex-end; /* ou space-between */
    align-items: center;
    min-height: 64px;
    gap: 1rem;
    transition: box-shadow 0.2s;
}
@media (max-width: 768px) {
    .sticky-footer-actions {
        flex-direction: column;
        align-items: stretch;
        padding: 1rem 0.5rem;
        min-height: 70px;
        gap: 0.5rem;
    }
}
body {
    padding-bottom: 80px !important; /* espaço para não ocultar campos no final */
}

</style>

<dtml-unless dat_envio>
    <dtml-call expr="REQUEST.set('dat_envio',None)">
</dtml-unless>

<dtml-unless dat_recebimento>
    <dtml-call expr="REQUEST.set('dat_recebimento',None)">
</dtml-unless>

<dtml-unless dat_solicitacao_devolucao>
    <dtml-call expr="REQUEST.set('dat_solicitacao_devolucao',None)">
</dtml-unless>

<dtml-unless dat_devolucao>
    <dtml-call expr="REQUEST.set('dat_devolucao',None)">
</dtml-unless>

<dtml-call expr="REQUEST.set('prop_enviada',(dat_envio!=None))">

<dtml-call expr="REQUEST.set('prop_recebida',(dat_recebimento!=None))">

<dtml-call expr="REQUEST.set('prop_solicitada',(dat_solicitacao_devolucao!=None))">

<dtml-call expr="REQUEST.set('prop_devolvida',(dat_devolucao!=None))">

<dtml-if expr="_.has_key('cod_proposicao') and AUTHENTICATED_USER.has_role(['Autor'])">
    <dtml-call expr="REQUEST.set('usr_eh_autor',(col_username==AUTHENTICATED_USER.getUserName()))">
    <dtml-call expr="REQUEST.set('estah_alterando','1')">

<dtml-elif expr="_.has_key('cod_proposicao') and AUTHENTICATED_USER.has_role(['Assessor Parlamentar'])">
    <dtml-in expr="zsql.assessor_parlamentar_obter_zsql(col_username=AUTHENTICATED_USER.getUserName())">
      <dtml-in expr="zsql.autor_obter_zsql(cod_parlamentar=cod_parlamentar)">
            <dtml-call expr="REQUEST.set('usr_eh_autor', (col_username==col_username_sel))">
      </dtml-in>
    </dtml-in>
    <dtml-call expr="REQUEST.set('estah_alterando','1')">

<dtml-else>
    <dtml-call expr="REQUEST.set('usr_eh_autor',(1==1))">
    <dtml-call expr="REQUEST.set('estah_alterando','0')">
</dtml-if>

<dtml-if usr_eh_autor>
  <dtml-if expr="AUTHENTICATED_USER.has_role(['Assessor Parlamentar'])">
    <dtml-in expr="zsql.assessor_parlamentar_obter_zsql(col_username=AUTHENTICATED_USER.getUserName())">
      <dtml-in expr="zsql.autor_obter_zsql(cod_parlamentar=cod_parlamentar)">
         <dtml-in expr="zsql.tipo_autor_obter_zsql(tip_autor=tip_autor)">
            <dtml-call expr="REQUEST.set('tip_proposicao_perm',tip_proposicao_sel)">
            <dtml-call expr="REQUEST.set('des_tipo_autor',des_tipo_autor)">
         </dtml-in>
      </dtml-in>
    </dtml-in>

  <dtml-elif expr="AUTHENTICATED_USER.has_role(['Autor'])">
    <dtml-in expr="zsql.autor_obter_zsql(col_username=AUTHENTICATED_USER.getUserName())">
      <dtml-in expr="zsql.tipo_autor_obter_zsql(tip_autor=tip_autor)">
        <dtml-call expr="REQUEST.set('tip_proposicao_perm',tip_proposicao_sel)">
        <dtml-call expr="REQUEST.set('des_tipo_autor',des_tipo_autor)">
      </dtml-in>
    </dtml-in>

  <dtml-else>
    <dtml-in expr="zsql.autor_obter_zsql(col_username=col_username_sel)">
      <dtml-in expr="zsql.tipo_autor_obter_zsql(tip_autor=tip_autor)">
        <dtml-call expr="REQUEST.set('tip_proposicao_perm',tip_proposicao_sel)">
        <dtml-call expr="REQUEST.set('des_tipo_autor',des_tipo_autor)">
      </dtml-in>
    </dtml-in>
  </dtml-if>
<dtml-else>
  <dtml-call expr="REQUEST.set('tip_proposicao_perm', '')">
  <dtml-call expr="REQUEST.set('des_tipo_autor', '')">
</dtml-if>

<div class="proposicao-container">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4 gap-3">
        <div>
            <h1 class="firstHeading font-size-18 h3 mb-2">Proposição Digital</h1>
            <div class="d-flex align-items-center gap-2">
                <dtml-if cod_proposicao>
                    <span class="text-muted small">
                        <i class="far fa-calendar-alt me-1"></i> Criada em <dtml-var dat_criacao missing>
                    </span>
                </dtml-if>
            </div>
        </div>
        
        <div class="d-flex flex-wrap gap-2">
            <dtml-if cod_proposicao>
                <dtml-if expr="(prop_enviada and not prop_devolvida)">
                <dtml-let cod_doc="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">
                    <a class="btn btn-outline-secondary" target="_blank" href="proposicao_recibo_imprimir?cod_documento=<dtml-var cod_doc>" data-bs-toggle="tooltip" title="Imprimir recibo">
                        <i class="fas fa-print me-1"></i> Recibo
                    </a>
                </dtml-let>
                </dtml-if>
                
                <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and not prop_recebida and not prop_devolvida">
                    <div class="modal fade" id="devolucaoModal" tabindex="-1" aria-labelledby="devolucaoModalLabel" aria-hidden="true">
                      <div class="modal-dialog">
                        <div class="modal-content text-start">
                          <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Devolução de Proposição</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                          </div>
                          <div class="modal-body">
                           <form id="myform" class="needs-validation" method="post" action="proposicao_salvar_devolucao_proc" novalidate>
                               <div class="row">
                                   <div class="col-12 mb-3">
                                   <label class="form-label required" for="txt_justif_devolucao">Motivo da Devolução</label>
                                   <textarea class="form-control" name="txt_justif_devolucao" rows="2" required></textarea>
                                   <div class="invalid-feedback">
                                     O motivo da devolução é obrigatório.
                                   </div>
                                   <input type="hidden" name="cod_proposicao" value="<dtml-var cod_proposicao missing>" />
                                   </div>
                               </div>
                               <div class="row">
                                   <div class="col-12 mb-2">
                                   <button class="btn btn-danger" type="submit">Devolver ao Autor</button>
                                   </div>
                               </div>
                               <div class="row">
                                   <div class="col-md-12">
                                       <p class="text-muted small font-size-12"><i class="fas fa-asterisk text-danger"></i> Campo obrigatório</p>
                                   </div>
                               </div>
                           </form>
                          </div>
                        </div>
                      </div>
                    </div>
                </dtml-if>
                
		<dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia'])">
		   <a class="btn btn-outline-primary" href="<dtml-var portal_url>/cadastros/recebimento_proposicao/#protocolo"><i class="fas fa-undo"></i> Voltar</a> 
		<dtml-elif expr="AUTHENTICATED_USER.has_role(['Revisor Proposicao', 'Chefia Revisão'])">
		   <a class="btn btn-outline-primary" href="<dtml-var portal_url>/cadastros/recebimento_proposicao/#pendente"><i class="fas fa-undo"></i> Voltar</a>                        
		</dtml-if>
		<dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])">
		   <a class="btn btn-outline-primary" href="<dtml-var portal_url>/cadastros/proposicao/?ind_enviado=0"><i class="fas fa-undo"></i> Voltar</a>                            
		</dtml-if>
		<dtml-else>
		   <a class="btn btn-outline-primary" href="<dtml-var portal_url>/cadastros/proposicao/?ind_enviado=0"><i class="fas fa-undo"></i> Voltar</a>  
            </dtml-if>
        </div>
    </div>

  <dtml-if cod_proposicao>
    <div class="progress-steps mb-4">
        <div class="step step-draft">
            <div class="step-icon">
                <i class="fas fa-edit"></i>
            </div>
            <span class="step-label">Em elaboração</span>
        </div>
        
        <div class="step step-submitted">
            <div class="step-icon">
                <i class="fas fa-paper-plane"></i>
            </div>
            <span class="step-label">Enviada</span>
        </div>
        
        <div class="step step-received">
            <div class="step-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <span class="step-label">Incorporada</span>
        </div>
        
        <div class="step step-returned">
            <div class="step-icon">
                <i class="fas fa-times-circle"></i>
            </div>
            <span class="step-label">Devolvida</span>
        </div>
    </div>
  </dtml-if>

    <dtml-if prop_solicitada>
        <div class="alert alert-dismissible alert-danger animate-fade-in">
            <div class="d-flex align-items-center">
                <i class="fas fa-exclamation-circle me-2"></i>
                <div class="flex-grow-1">
                    <strong>Devolução solicitada pelo autor em <dtml-var dat_solicitacao_devolucao missing null></strong>
                    <div class="small">Aguarde a análise do setor responsável.</div>
                </div>
                <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão'])">
                    <a class="btn btn-sm btn-outline-secondary ms-2" href="<dtml-var portal_url>/cadastros/proposicao/proposicao_cancelar_devolucao_proc?cod_proposicao=<dtml-var cod_proposicao missing>">
                        Cancelar solicitação
                    </a>
                </dtml-if>
            </div>
        </div>
    </dtml-if>

    <dtml-if cod_proposicao>
        <dtml-call expr="REQUEST.set('id_odt', str(cod_proposicao)+'.odt')">
        <dtml-if expr="hasattr(sapl_documentos.proposicao, id_odt)">
            <dtml-call expr="REQUEST.set('tem_odt', '1')">
        </dtml-if>
        <dtml-call expr="REQUEST.set('id_pdf_normal', str(cod_proposicao)+'.pdf')">
        <dtml-call expr="REQUEST.set('id_pdf_assinado', str(cod_proposicao)+'_signed.pdf')">
        <dtml-if expr="hasattr(sapl_documentos.proposicao, id_pdf_normal) or hasattr(sapl_documentos.proposicao, id_pdf_assinado)">
            <dtml-call expr="REQUEST.set('tem_pdf', '1')">
        </dtml-if>
        <dtml-if expr="hasattr(sapl_documentos.proposicao, id_pdf_assinado)">
            <dtml-call expr="REQUEST.set('tem_pdf_assinado', '1')">
        </dtml-if>
    </dtml-if>

<dtml-if expr="usr_eh_autor or AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and prop_enviada">
      <form name="proposicao_form" id="proposicao_form" method="post" action="proposicao_salvar_proc" enctype="multipart/form-data">
        <input type="hidden" name="hdn_alterou" value="0" />
        <input type="hidden" name="hdn_tip_proposicao" value="" />
        <input type="hidden" name="hdn_url" value="proposicao_mostrar_proc?cod_proposicao=<dtml-var cod_proposicao missing>" />
        <input type="hidden" name="hdn_cod_proposicao" value="<dtml-var cod_proposicao missing>" />
        <input type="hidden" name="cod_proposicao" value="<dtml-var cod_proposicao missing>" />

        <div class="card card-proposicao mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-info-circle me-2"></i> Informações da Proposição
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-12 <dtml-if expr="_.has_key('cod_proposicao')">col-md-6</dtml-if>">
                        <div class="form-group">
                            <label class="form-label required-field" for="lst_tip_proposicao">Tipo de Proposição</label>
                            <select class="select2 form-select" id="lst_tip_proposicao" name="lst_tip_proposicao" data-minimum-results-for-search="Infinity" onChange="javascript:tipo_proposicao_mudou()"
                                <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and (_.has_key('tem_odt') or _.has_key('tem_pdf'))">
                                   disabled
                                <dtml-elif expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and prop_enviada">
                                    disabled
                                <dtml-elif expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and (prop_recebida or prop_devolvida)">
                                    disabled
                                <dtml-elif prop_solicitada>
                                    disabled
                                </dtml-if>>
                                <option value="">Selecione</option>
                                <dtml-in expr="zsql.tipo_proposicao_obter_zsql()">
                                    <dtml-if expr="usr_eh_autor">
                                        <dtml-if expr="str(tip_proposicao) in str(tip_proposicao_perm).split(',')">
                                            <option
                                                <dtml-if tip_proposicao_sel>
                                                    <dtml-if expr="_.int(tip_proposicao) == _.int(tip_proposicao_sel)">
                                                        selected
                                                    </dtml-if>
                                                </dtml-if>
                                                value="<dtml-var tip_proposicao>&<dtml-var ind_mat_ou_doc>&<dtml-var nom_modelo url_quote>"><dtml-var des_tipo_proposicao></option>
                                        </dtml-if>
                                    <dtml-else>
                                        <option
                                            <dtml-if tip_proposicao_sel>
                                                <dtml-if expr="_.int(tip_proposicao) == _.int(tip_proposicao_sel)">
                                                    selected
                                                </dtml-if>
                                            </dtml-if>
                                            value="<dtml-var tip_proposicao>&<dtml-var ind_mat_ou_doc>&<dtml-var nom_modelo url_quote>"><dtml-var des_tipo_proposicao></option>
                                    </dtml-if>
                                </dtml-in>
                            </select>
                        </div>
                    </div>
                    
                    <dtml-if cod_proposicao>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="txt_codigo">Código de Autenticidade</label>
                                <div class="input-group">
                                    <input class="form-control" type="text" id="txt_codigo" value="<dtml-var expr="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">" readonly>
                                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="tooltip" title="Copiar código" onclick="navigator.clipboard.writeText('<dtml-var expr="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">')">
                                        <i class="far fa-copy"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-12 col-md-4">
                            <div class="form-group">
                                <label class="form-label">Data de Envio</label>
                                <input class="form-control" type="text" value="<dtml-var dat_envio missing null>" readonly>
                            </div>
                        </div>
                        
                        <div class="col-12 col-md-4">
                            <dtml-if dat_devolucao>
                               <div class="form-group">
                                   <label class="form-label">Data de Devolução</label>
                                   <input class="form-control" type="text" value="<dtml-var dat_devolucao missing null>" readonly>
                               </div>
                            <dtml-else>
                               <div class="form-group">
                                   <label class="form-label">Data de Incorporação</label>
                                   <input class="form-control" type="text" value="<dtml-var dat_recebimento missing null>" readonly>
                               </div>
                            </dtml-if>
                        </div>
                        
                        <div class="col-12 col-md-4">
                            <div class="form-group">
                                <label class="form-label">Situação</label>
                                <dtml-if dat_recebimento>
                                    <dtml-if cod_mat_ou_doc>
                                        <dtml-if expr="ind_mat_ou_doc=='D'">
                                            <dtml-call expr="REQUEST.set('cod_mat', cod_materia)">
                                        <dtml-elif expr="ind_mat_ou_doc=='M'">
                                            <dtml-call expr="REQUEST.set('cod_mat', cod_mat_ou_doc)">
                                        </dtml-if>
                                        <dtml-in expr="zsql.materia_obter_zsql(cod_materia=cod_mat)">
                                           <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia'])">
                                            <a class="btn btn-outline-primary w-100 text-start" href="<dtml-var portal_url>/cadastros/materia/materia_mostrar_proc?cod_materia=<dtml-var cod_mat>" target="_blank">
                                                <i class="fas fa-link me-1"></i> <dtml-var des_tipo_materia> nº <dtml-var num_ident_basica>/<dtml-var ano_ident_basica>
                                            </a>
                                           <dtml-else>
                                            <a class="btn btn-outline-primary w-100 text-start" href="<dtml-var portal_url>/consultas/materia/materia_mostrar_proc?cod_materia=<dtml-var cod_mat>" target="_blank">
                                                <i class="fas fa-link me-1"></i> <dtml-var des_tipo_materia> nº <dtml-var num_ident_basica>/<dtml-var ano_ident_basica>
                                            </a>
                                           </dtml-if>
                                        </dtml-in>
                                    <dtml-elif dat_devolucao>
                                        <input class="form-control bg-danger bg-opacity-10" type="text" value="Devolvida" readonly>
                                    <dtml-else>
                                        <input class="form-control" type="text" value="Aguardando análise" readonly>
                                    </dtml-if>
                                 <dtml-elif expr="dat_envio and not _.has_key('tem_pdf')">
                                     <input class="form-control" type="text" value="Em Revisão" readonly>
                                <dtml-elif dat_devolucao>
                                     <input class="form-control" type="text" value="Devolvida" readonly>
                                <dtml-elif expr="(dat_envio and not dat_recebimento) and _.has_key('tem_pdf_assinado')">
                                     <input class="form-control" type="text" value="Em análise" readonly>
                                <dtml-else>
                                    <input class="form-control" type="text" value="Em elaboração" readonly>
                                </dtml-if>
                            </div>
                        </div>
                    </dtml-if>
                </div>
            </div>
        </div>

        <dtml-if prop_devolvida>
            <div class="card card-proposicao mb-4 border-danger">
                <div class="card-header bg-danger bg-opacity-10">
                    <h5 class="card-title mb-0 text-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i> Motivo de Devolução
                    </h5>
                </div>
                <div class="card-body">
                    <div class="alert alert-light">
                        <dtml-var txt_justif_devolucao missing>
                    </div>
                </div>
            </div>
        </dtml-if>

        <dtml-if expr="_.has_key('cod_proposicao') and AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão'])">
            <div class="card card-proposicao mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-user-tag me-2"></i> Autoria
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label class="form-label">Nome do Autor</label>
                                <input class="form-control" type="text" value="<dtml-var nom_autor missing>" readonly>
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label class="form-label">Tipo de Autor</label>
                                <input class="form-control" type="text" value="<dtml-var des_tipo_autor missing>" readonly>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </dtml-if>

        <div class="card card-proposicao mb-4" id="cardAssunto" <dtml-if expr="(not _.has_key('cod_proposicao') or ind_mat_ou_doc=='D') or (_.has_key('cod_proposicao') and (des_tipo_proposicao!='Requerimento' and des_tipo_proposicao!='Indicação' and des_tipo_proposicao!='Moção'))">style="display:none;"</dtml-if>>
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-tag me-2"></i> Assunto
                </h5>
            </div>
            <div class="card-body">
              <div class="row">
               <div class="col-12">
                <div class="form-group w-100">
                    <label class="form-label required-field" for="lst_assunto">Assunto da Proposição</label>
			<select class="select2 form-select" id="lst_assunto" name="lst_assunto">
			    <option value="">Selecione</option>
			    <dtml-unless tip_proposicao_sel>
			       <dtml-call expr="REQUEST.set('tip_proposicao_sel', '')">
			    </dtml-unless>
			    <dtml-in expr="zsql.assunto_proposicao_obter_zsql(tip_proposicao=tip_proposicao_sel)" mapping>
				<option
				    <dtml-if cod_assunto_sel>
					<dtml-if expr="_.int(cod_assunto_sel) == _.int(cod_assunto)">
					    selected
					</dtml-if>
				    </dtml-if>
				    value="<dtml-var cod_assunto>">
				    <dtml-var des_assunto> (<dtml-var nom_orgao>)
				</option>
			    </dtml-in>
			</select>
                    <div class="help-text">Selecione o assunto mais adequado para classificar sua proposição</div>
                </div>
               </div>
              </div>
            </div>
        </div>

<div class="card card-proposicao mb-4" id="divIndicaEndereco" <dtml-if "not _.has_key('cod_proposicao') or (_.has_key('des_tipo_proposicao') and des_tipo_proposicao!='Indicação')">style="display:none;"</dtml-if>>
	    <div class="card-header">
		<h5 class="card-title mb-0">
		    <i class="fas fa-map-marker-alt me-2"></i> Endereço da Indicação
		</h5>
	    </div>
	    <div class="card-body">
		<div class="row g-3">
		
		    <!-- Campo CEP -->
		    <div class="col-12 col-md-3">
		        <div class="form-group">
		            <label class="form-label required-field" for="txt_num_cep">CEP</label>
		            <input class="form-control cep" type="text" id="txt_num_cep" name="txt_num_cep" 
		                   placeholder="00000-000" value="<dtml-var num_cep missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		            <div class="help-text">Informe o CEP para localização</div>
		        </div>
		    </div>
		    
		    <!-- Campo Logradouro -->
		    <div class="col-12 col-md-5">
		        <div class="form-group">
		            <label class="form-label" for="txt_nom_logradouro">Logradouro</label>
		            <input class="form-control" type="text" id="txt_nom_logradouro" name="txt_nom_logradouro" 
		                   value="<dtml-var nom_logradouro missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		        </div>
		    </div>
		    
		    <!-- Campo Número/Complemento -->
		    <div class="col-12 col-md-4">
		        <div class="form-group">
		            <label class="form-label" for="txt_complemento_endereco">Complemento</label>
		            <input class="form-control" type="text" id="txt_complemento_endereco" name="txt_complemento_endereco" 
		                   placeholder="Número, ponto de referência, etc." value="<dtml-var complemento_endereco missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		        </div>
		    </div>
		    
		    <!-- Campo Bairro -->
		    <div class="col-12 col-md-4">
		        <div class="form-group">
		            <label class="form-label" for="txt_nom_bairro">Bairro</label>
		            <input class="form-control" type="text" id="txt_nom_bairro" name="txt_nom_bairro" 
		                   value="<dtml-var nom_bairro missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		        </div>
		    </div>
		    
		    <!-- Campo Cidade -->
		    <div class="col-12 col-md-4">
		        <div class="form-group">
		            <label class="form-label" for="txt_nom_cidade">Cidade</label>
		            <input class="form-control" type="text" id="txt_nom_cidade" name="txt_nom_cidade" 
		                   value="<dtml-var nom_cidade missing null>" 
		                   <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>>
		        </div>
		    </div>
		    
		    <!-- Campo UF -->
		    <div class="col-12 col-md-4">
		    <div class="form-group">
			<label class="form-label" for="txt_sgl_uf">UF</label>
			<input 
			  type="text" 
			  class="form-control" 
			  id="txt_sgl_uf" 
			  name="txt_sgl_uf" 
			  maxlength="2" 
			  pattern="[A-Z]{2}" 
			  placeholder="UF" 
			  value="<dtml-var sgl_uf missing null>"
			  style="text-transform:uppercase;"
			  oninput="this.value = this.value.toUpperCase();"
			  <dtml-if "_.has_key('tem_odt') or prop_recebida or prop_devolvida">readonly</dtml-if>
			>
		    </div>
		    </div>
				<div id="avisoEmentaManual" class="alert alert-warning mb-2 py-2 small"
				    <dtml-if "_.has_key('txt_num_cep') and txt_num_cep == '00000-000'"></dtml-if>
				    <dtml-unless "_.has_key('txt_num_cep') and txt_num_cep == '00000-000'">style="display:none;"</dtml-unless>
				>
				    <i class="fas fa-unlock me-1"></i>
				    Os campos de <b>endereço</b> foram liberados para edição manual porque o CEP informado é <b>00000-000</b> (CEP zerado).
				    <br>Preencha os campos de logradouro e bairro conforme a necessidade da indicação.
				</div>
                        <div id="loadingCEP"></div>
		</div>
	    </div>
	</div>

        <div class="card card-proposicao mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-align-left me-2"></i> Conteúdo da Proposição
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-12">
			<div class="form-group position-relative">
			    <dtml-if expr="_.has_key('des_tipo_proposicao') and des_tipo_proposicao == 'Indicação'">
				<label class="form-label required-field" for="txt_descricao">
				    Ementa
				    <span id="badgeEmentaAuto"
					  class="badge bg-secondary ms-1"
					  <dtml-if "_.has_key('txt_num_cep') and txt_num_cep == '00000-000'">style="display:none;"</dtml-if>
				    >Automática</span>
				</label>
				<textarea class="form-control auto-resize" id="txt_descricao" name="txt_descricao" rows="3"

                                  <dtml-unless "des_tipo_proposicao == 'Indicação' and _.has_key('txt_num_cep') and txt_num_cep == '00000-000'">readonly</dtml-unless>
                                  <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and prop_enviada">
                                     readonly
                                  <dtml-elif expr="prop_recebida or prop_devolvida">
                                     readonly
                                  </dtml-if>
                                ><dtml-var txt_descricao missing></textarea>
				<div id="helpEmentaAuto" class="help-text small text-muted"
				     <dtml-if "_.has_key('txt_num_cep') and txt_num_cep == '00000-000'">style="display:none;"</dtml-if>
				>
				    A ementa é gerada automaticamente com base no assunto e endereço informados.
				</div>
			    <dtml-else>
				<label class="form-label required-field" for="txt_descricao">Ementa</label>
				<textarea class="form-control auto-resize" id="txt_descricao" name="txt_descricao" rows="3"
                                  <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and (_.has_key('tem_odt') or _.has_key('tem_pdf'))">
                                     readonly
                                  <dtml-elif expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and prop_enviada">
                                     readonly
                                  <dtml-elif expr="prop_recebida or prop_devolvida or prop_solicitada">
                                     readonly
                                  </dtml-if>
				><dtml-var txt_descricao missing></textarea>
				<div class="help-text">Preencha a ementa de acordo com o tipo de proposição</div>
			    </dtml-if>
			</div>
                    </div>
                </div>

                <div id="divJustificativa" <dtml-if expr="_.has_key('des_tipo_proposicao') and des_tipo_proposicao != 'Indicação'">style="display:none;"</dtml-if>>
                    <div class="row g-3 mt-3">
                        <div class="col-12">
                            <div class="form-group">
                                <label class="form-label required-field" for="txa_txt_justificativa">Justificativa</label>
                                <textarea class="form-control auto-resize" id="txa_txt_justificativa" name="txa_txt_justificativa" rows="3" <dtml-if expr="_.has_key('tem_pdf') or _.has_key('tem_odt')">readonly</dtml-if>><dtml-var txt_justificativa missing null></textarea>
                                <div class="help-text">Apresente os motivos e argumentos que fundamentam esta indicação</div>
                            </div>
                        </div>
                    </div>
                </div>
                
            </div>
        </div>

        <div class="card card-proposicao mb-4" id="divMat" <dtml-if expr="not _.has_key('cod_proposicao') or ind_mat_ou_doc=='M'">style="display:none;"</dtml-if>>
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-link me-2"></i> Matéria Vinculada
                </h5>
            </div>
            <div class="card-body" id="divMatBody">
                <div class="row g-3">
                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label class="form-label required-field" for="lst_tip_id_basica">Tipo de Matéria</label>
                            <select class="select2 form-select" id="lst_tip_id_basica" name="lst_tip_id_basica" <dtml-if "not _.has_key('tip_id_basica_sel') or prop_recebida or prop_devolvida">disabled</dtml-if>>
                                <option value="">Selecione</option>
                                <dtml-in expr="zsql.tipo_materia_legislativa_obter_zsql(tip_natureza='P')">
                                    <option
                                        <dtml-if tip_id_basica_sel>
                                            <dtml-if expr="_.int(tip_materia) == _.int(tip_id_basica_sel)">
                                                selected
                                            </dtml-if>
                                        </dtml-if>
                                        value="<dtml-var tip_materia>">
                                        <dtml-var des_tipo_materia>
                                    </option>
                                </dtml-in>
                            </select>
                        </div>
                    </div>
                    
                    <div class="col-12 col-md-2">
                        <div class="form-group">
                            <label class="form-label required-field" for="txt_num_ident_basica">Número</label>
                            <input class="form-control" type="number" id="txt_num_ident_basica" name="txt_num_ident_basica" value="<dtml-var num_ident_basica_sel missing null="1">"
                                <dtml-if "not _.has_key('num_ident_basica_sel') or prop_recebida">
                                    disabled
                                </dtml-if> />
                        </div>
                    </div>
                    
                    <div class="col-12 col-md-2">
                        <div class="form-group">
                            <label class="form-label required-field" for="txt_ano_ident_basica">Ano</label>
                            <input class="form-control year" type="number" id="txt_ano_ident_basica" name="txt_ano_ident_basica" value="<dtml-var ano_ident_basica_sel missing>"
                                <dtml-if "not _.has_key('ano_ident_basica_sel') or prop_recebida">
                                    disabled
                                </dtml-if> />
                        </div>
                    </div>
                    
                    <div class="col-12 col-md-2 d-flex align-items-end">
                        <dtml-if expr="not _.has_key('tem_pdf') or not _.has_key('tem_odt')">
                            <button id="postjq" type="button" class="btn btn-outline-primary w-100">Obter Ementa</button>
                        </dtml-if>
                    </div>
                </div>
            </div>
        </div>

		<dtml-if expr="_.has_key('des_tipo_proposicao') and (des_tipo_proposicao in ['Indicação', 'Requerimento'])">
		  <div class="accordion accordion-flush accordion-plus-icon mb-4" id="accordionMaps">
		    <div class="card card-proposicao mb-0 shadow-sm">
		      <div class="card-header accordion-header d-flex align-items-center px-0 py-1" id="headingMaps"
			   style="background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; border-radius: 10px 10px 0 0;">
			<button class="accordion-button collapsed bg-transparent shadow-none d-flex align-items-center w-100"
				type="button"
				data-bs-toggle="collapse"
				data-bs-target="#collapseMaps"
				aria-expanded="false"
				aria-controls="collapseMaps"
				style="font-size: 15px; font-weight: 600; color: #2c3e50; min-height: 0; box-shadow: none; line-height:1.1;">
			  <i class="fas fa-camera me-2"></i>
			  Fotografias
			</button>
		      </div>
 
                <div id="collapseMaps" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionMaps">
                    <div class="card-body">
                        <div class="row g-3" id="form-container">
                            <dtml-in expr="_.range(1, 5)" prefix="i">
                                <dtml-call expr="REQUEST.set('idx', i_index + 1)">
                                <dtml-if cod_proposicao>
                                   <dtml-call expr="REQUEST.set('id_foto', str(cod_proposicao)+'_image_'+_.str(idx)+'.jpg')">
                                </dtml-if>
                                <div class="col-12 col-md-6" id="foto-container-<dtml-var idx>">
                                    <div class="form-group">
                                        <label class="form-label">Fotografia <dtml-var idx></label>
                                        <div id="foto<dtml-var idx>-preview" class="mt-2 image-preview-container">
                                            <dtml-if "hasattr(sapl_documentos.proposicao, id_foto)">
                                                <div class="text-center">
                                                    <img class="img-fluid img-thumbnail mb-2"
                                                        src="<dtml-var portal_url>/sapl_documentos/proposicao/<dtml-var id_foto>?<dtml-var expr='DateTime().timeTime()'>"
                                                        alt="Fotografia <dtml-var idx>" style="max-height: 500px;">
                                                    <dtml-if expr="not _.has_key('tem_pdf') and not _.has_key('tem_odt')">
                                                    <div class="image-actions">
                                                        <button type="button"
                                                                class="btn btn-danger btn-sm text-white"
                                                                onclick="ProposicaoManager.excluirImagem(<dtml-var idx>, '<dtml-var cod_proposicao missing>')">
                                                                <i class="far fa-trash-alt me-1"></i> Excluir
                                                        </button>
                                                    </div>
                                                    </dtml-if>
                                                </div>
                                            <dtml-else>
                                                <dtml-if expr="not _.has_key('tem_pdf') and not _.has_key('tem_odt')">
                                                    <div id="uploadForm<dtml-var idx>" enctype="multipart/form-data">
                                                        <input type="hidden" name="indice" value="<dtml-var idx>">
                                                        <input type="file" name="file_nom_image<dtml-var idx>" class="form-control"
                                                                accept="image/*" onchange="ProposicaoManager.enviarImagem(this.form, <dtml-var idx>)">
                                                        <div class="help-text mt-2">Formatos suportados: JPG, PNG, GIF. Tamanho máximo: 5MB.</div>
                                                    </div>
                                                <dtml-else>
                                                    <div class="alert alert-light mb-2">Não enviada</div>
                                                </dtml-if>
                                            </dtml-if>
                                        </div>
                                    </div>
                                </div>
                            </dtml-in>
                        </div>
                    </div>
                </div>
            </div>
        </div>
       </dtml-if>

    <dtml-if cod_proposicao>
	<div class="accordion accordion-flush accordion-plus-icon mb-4" id="accordionAnexos">
	       <div class="card card-proposicao mb-0 shadow-sm">
		  <div class="card-header accordion-header d-flex align-items-center px-0 py-1" id="headingAnexos"
		     style="background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; border-radius: 10px 10px 0 0;">
			    <button class="accordion-button collapsed bg-transparent shadow-none d-flex align-items-center w-100"
				    type="button"
				    data-bs-toggle="collapse"
				    data-bs-target="#collapseAnexos"
				    role="button"
				    aria-expanded="false"
				    aria-controls="collapseAnexos"
				    style="font-size: 15px; font-weight: 600; color: #2c3e50; min-height: 0; box-shadow: none; line-height:1.1;">
				<i class="fas fa-file-alt me-2"></i>
				Anexos PDF
			    </button>
		  </div>

		    <div id="collapseAnexos" class="accordion-collapse collapse" aria-labelledby="headingAnexos" data-bs-parent="#accordionAnexos">
		      <div class="card-body">
			<div id="current_pdf_attachments" class="mb-3">
			  <dtml-in expr="pysc.anexo_proposicao_pysc(cod_proposicao, listar=True)" prefix="file">
			    <dtml-if expr="hasattr(sapl_documentos.proposicao, file_item)">
			      <dtml-let documento="getattr(sapl_documentos.proposicao,file_item).absolute_url">
				<div class="file-preview animate-fade-in" id="preview-<dtml-var file_item>">
				  <i class="file-preview-icon fas fa-file-pdf text-danger"></i>
				  <div class="file-preview-info">
				    <a target="_blank" href="<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" class="text-decoration-none text-dark">
				      Anexo <dtml-var expr="file_item.split('anexo_')[1]">
				    </a>
				  </div>
				  <dtml-if expr="not _.has_key('tem_pdf') and not prop_recebida">
				    <div class="file-preview-actions">
				      <button type="button" class="btn btn-sm btn-outline-danger"
        onclick="ProposicaoManager.excluirAnexo('<dtml-var file_item>', '<dtml-var cod_proposicao missing>')">
    <i class="far fa-trash-alt"></i> Excluir
</button>
				    </div>
				  </dtml-if>
				</div>
			      </dtml-let>
			    </dtml-if>
			  <dtml-else>
			    <p class="text-muted small">Nenhum documento anexado.</p>
			  </dtml-in>
			</div>

		        <dtml-if expr="not _.has_key('tem_pdf') and not prop_recebida">
		            <div class="drop-area mb-3" id="pdf-drop-area">
		                <p class="mb-0 text-muted">Arraste e solte arquivos PDF aqui ou <a href="#" id="pdf-browse-link">clique para selecionar</a>.</p>
		                <input type="file" name="file_nom_anexo:list" accept="application/pdf" multiple style="display: none;" id="file_nom_anexo_input">
		            </div>
		            <div id="pdf-upload-preview" class="mb-3"></div>
		        </dtml-if>
		    </div>
		</div>
	    </div>
	</div>
       
        <div class="card card-proposicao mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-file-word me-2"></i> Documentos e Edição
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
			<div id="divEdicaoOdt" class="col-12 col-lg-6">
			    <div class="form-group">
				<label class="form-label d-block">Texto Editável (ODT)</label>
				<div class="d-flex flex-wrap gap-2">
				    <dtml-let id_documento="str(cod_proposicao)+'.odt'">
					<dtml-if "hasattr(sapl_documentos.proposicao,id_documento)">
					    <dtml-let documento="getattr(sapl_documentos.proposicao,id_documento).absolute_url">
						<dtml-call expr="REQUEST.set('nome_arquivo',str(cod_proposicao)+'.odt')">
						<!-- === EM REVISÃO: Só Visualizar para Autor, Editar para Revisores === -->
					    <dtml-let id_original="str(cod_proposicao)+'_original.odt'">
						<dtml-if "hasattr(sapl_documentos.proposicao,id_original) and prop_enviada">
						    <dtml-let documento="getattr(sapl_documentos.proposicao,id_original).absolute_url">
							<a class="btn btn-outline-secondary" href="<dtml-var portal_url>/generico/viewerJS/#<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Visualizar o texto original">
							    <i class="fa fa-fw fa-file-alt me-1"></i>Texto Original
							</a>
						    </dtml-let>
						</dtml-if>
					    </dtml-let>
						<dtml-if expr="dat_envio and _.has_key('tem_odt') and not _.has_key('tem_pdf') and not dat_recebimento">
						    <dtml-if expr="('Revisor Proposicao' in AUTHENTICATED_USER.getRoles()) or ('Operador' in AUTHENTICATED_USER.getRoles()) or ('Operador Materia' in AUTHENTICATED_USER.getRoles()) or ('Chefia Revisão' in AUTHENTICATED_USER.getRoles())">
						        <a class="btn btn-outline-primary" href="<dtml-var portal_url>/webeditor/editorProposicao?<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Editar diretamente no navegador">
						            <i class="fa fa-fw fa-edit me-1"></i>Editar Online
						        </a>
						        <button type="button" class="btn btn-outline-info" onclick="javascript:location.href='<dtml-var portal_url>/sapl_documentos/proposicao/externalEdit_/<dtml-var nome_arquivo>.zem'" data-bs-toggle="tooltip" title="Editar usando LibreOffice (requer instalação)">
						            <i class="fas fa-fw fa-external-link-alt me-1"></i>LibreOffice
						        </button>

						    <dtml-else>
						        <!-- Somente visualizar para o autor ou quem não é revisor -->
						        <a class="btn btn-outline-primary" href="<dtml-var portal_url>/generico/viewerJS/#<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Visualizar ODT">
						            <i class="fa fa-fw fa-file-alt me-1"></i>Visualizar ODT
						        </a>
						    </dtml-if>
						<!-- === RASCUNHO: Editar liberado para todos exceto quando PDF gerado ou prop_enviada === -->
						<dtml-elif expr="not _.has_key('tem_pdf') and (not prop_enviada)">
						    <dtml-if expr="des_tipo_proposicao=='Indicação'">
						        <a class="btn btn-outline-primary" href="<dtml-var portal_url>/generico/viewerJS/#<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Visualizar ODT">
						            <i class="fa fa-fw fa-file-alt me-1"></i>Visualizar ODT
						        </a>
						    </dtml-if>
						    <a class="btn btn-outline-primary" href="<dtml-var portal_url>/webeditor/editorProposicao?<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Editar diretamente no navegador">
						        <i class="fa fa-fw fa-edit me-1"></i>Editar Online
						    </a>
						    <button type="button" class="btn btn-outline-info" onclick="javascript:location.href='<dtml-var portal_url>/sapl_documentos/proposicao/externalEdit_/<dtml-var nome_arquivo>.zem'" data-bs-toggle="tooltip" title="Editar usando LibreOffice (requer instalação)">
						        <i class="fas fa-fw fa-external-link-alt me-1"></i>LibreOffice
						    </button>
						    <button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('odt')">
						        <i class="far fa-trash-alt me-1"></i> Excluir ODT
						    </button>
						<!-- === Apenas Visualizar nos demais casos === -->
						<dtml-else>
						    <a class="btn btn-outline-primary" href="<dtml-var portal_url>/generico/viewerJS/#<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" target="_blank" data-bs-toggle="tooltip" title="Visualizar ODT">
						        <i class="fa fa-fw fa-file-alt me-1"></i>Visualizar ODT
						    </a>
						</dtml-if>
					    </dtml-let>
					<dtml-else>
					    <div class="input-group">
						<dtml-if expr="(not prop_devolvida and not prop_recebida)">
						    <select class="form-select" id="lst_modelo" name="lst_modelo">
						    </select>
						    <button type="button" class="btn btn-outline-success" onclick="javascript:texto_odt_gerar();">
						        <i class="fas fa-magic me-1"></i> Gerar do Modelo
						    </button>
						</dtml-if>
					    </div>
					</dtml-if>
				    </dtml-let>
				</div>
                        </div>
                    </div>
			<div class="col-12 col-lg-6">
			    <div class="form-group">
				<label class="form-label d-block">Texto Final (PDF)</label>
				<div class="d-flex flex-wrap gap-2">
				    <dtml-call expr="REQUEST.set('id_documento', str(cod_proposicao)+'.pdf')">
				    <dtml-call expr="REQUEST.set('id_documento_assinado', str(cod_proposicao)+'_signed.pdf')">
				    <dtml-if "hasattr(sapl_documentos.proposicao,id_documento_assinado)">
					<dtml-let documento_assinado="getattr(sapl_documentos.proposicao,id_documento_assinado).absolute_url">
					    <a class="btn btn-outline-primary" target="_blank" href="<dtml-var documento_assinado>?<dtml-var expr="ZopeTime().timeTime()">" data-bs-toggle="tooltip" title="Visualizar o PDF com assinaturas digitais">
						<i class="fas fa-certificate me-1"></i> Arquivo Assinado
					    </a>
					</dtml-let>
					<dtml-if expr="not prop_recebida and not prop_devolvida">
					    <dtml-if expr="sapl_documentos.props_sagl.restpki_access_token!=''">
						<button type="button" class="btn btn-outline-info"
						        data-bs-toggle="modal"
						        data-bs-target="#iFrameModal"
						        data-title="Assinaturas Digitais"
						        data-src="<dtml-var portal_url>/cadastros/assinatura/assinatura_solicitar_form?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						        data-bs-toggle="tooltip"
						        title="Verificar e gerenciar assinaturas digitais">
						    <i class="fas fa-file-signature me-1"></i> Assinaturas
						</button>
					    </dtml-if>
					</dtml-if>
					<dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])  and not prop_enviada and not prop_devolvida">
					    <button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('assinado')"
						    data-bs-toggle="tooltip" title="Remover o PDF assinado digitalmente">
						<i class="far fa-trash-alt me-1"></i> Excluir PDF
					    </button>
					<dtml-elif expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and (not prop_recebida and not prop_devolvida) and not prop_solicitada">
					    <button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('assinado')"
						    data-bs-toggle="tooltip" title="Remover o PDF assinado digitalmente">
						<i class="far fa-trash-alt me-1"></i> Excluir PDF
					    </button>
					</dtml-if>
				    <dtml-elif "hasattr(sapl_documentos.proposicao,id_documento)">
					<dtml-let documento="getattr(sapl_documentos.proposicao,id_documento).absolute_url">
					    <a class="btn btn-outline-primary" target="_blank" href="<dtml-var documento>?<dtml-var expr="ZopeTime().timeTime()">" data-bs-toggle="tooltip" title="Visualizar o PDF gerado">
						<i class="fa fa-fw fa-file-pdf me-1"></i>Visualizar PDF
					    </a>

					    <!-- Botão Solicitar Assinatura para perfis permitidos -->
					    <dtml-if expr="('Operador' in AUTHENTICATED_USER.getRoles()) or
						           ('Operador Materia' in AUTHENTICATED_USER.getRoles()) or
						           ('Revisor Proposicao' in AUTHENTICATED_USER.getRoles()) or
						           ('Chefia Revisão' in AUTHENTICATED_USER.getRoles())">
						<dtml-if expr="sapl_documentos.props_sagl.restpki_access_token!=''">
						    <button type="button" class="btn btn-outline-info"
						            data-bs-toggle="modal"
						            data-bs-target="#iFrameModal"
						            data-title="Assinaturas Digitais"
						            data-src="<dtml-var portal_url>/cadastros/assinatura/assinatura_solicitar_form?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						            data-bs-toggle="tooltip"
						            title="Verificar e gerenciar assinaturas digitais">
						        <i class="fas fa-file-signature me-1"></i> Assinaturas
						    </button>
						</dtml-if>
					    </dtml-if>

					    <dtml-if expr="not prop_recebida and not prop_devolvida">
						<dtml-if expr="sapl_documentos.props_sagl.restpki_access_token!=''">
						    <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor']) and des_tipo_autor != 'Mesa Diretora' and des_tipo_autor != 'Comissao' and des_tipo_autor != 'Externo' and des_tipo_autor != 'Poder Executivo'">
						        <dtml-if expr="(des_tipo_proposicao=='Requerimento' or des_tipo_proposicao=='Indicação' or des_tipo_proposicao=='Moção' or des_tipo_proposicao=='Pedido de Informação')">
						            <dtml-if expr="int(sapl_documentos.props_sagl.assinatura_simples)==1">
						                <button type="button" class="btn btn-outline-secondary"
						                        onclick="ProposicaoManager.showConfirmModal('Assinatura Simples', 'Confirma a assinatura simples da proposição?', function() { location.href='<dtml-var portal_url>/cadastros/proposicao/assinar_pdf?cod_proposicao=<dtml-var cod_proposicao missing>'; });"
						                        data-bs-toggle="tooltip" title="Adicionar uma assinatura simples">
						                    <i class="fas fa-file-signature me-1"></i> Assinatura Simples
						                </button>
						            </dtml-if>
						        </dtml-if>
						        <button type="button" class="btn btn-outline-info"
						                data-bs-toggle="modal"
						                data-bs-target="#iFrameModal"
						                data-title="Assinar Digitalmente com ICP-Brasil"
						                data-src="<dtml-var portal_url>/generico/assinador/pades-signature_html?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						                data-bs-toggle="tooltip" title="Assinar digitalmente com certificado ICP-Brasil">
						            <i class="fas fa-file-signature me-1"></i> Assinar ICP-Brasil
						        </button>
						    </dtml-if>
						    <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor']) and (des_tipo_autor == 'Externo' or des_tipo_autor == 'Poder Executivo')">
						        <dtml-if expr="int(sapl_documentos.props_sagl.assinatura_simples)==1">
						            <button type="button" class="btn btn-outline-secondary"
						                    onclick="ProposicaoManager.showConfirmModal('Assinatura Simples', 'Confirma a assinatura simples da proposição?', function() { location.href='<dtml-var portal_url>/cadastros/proposicao/assinar_pdf?cod_proposicao=<dtml-var cod_proposicao missing>'; });"
						                    data-bs-toggle="tooltip" title="Adicionar uma assinatura simples">
						                <i class="fas fa-file-signature me-1"></i> Assinatura Simples
						            </button>
						        </dtml-if>
						        <button type="button" class="btn btn-outline-info"
						                data-bs-toggle="modal"
						                data-bs-target="#iFrameModal"
						                data-title="Assinar Digitalmente com ICP-Brasil"
						                data-src="<dtml-var portal_url>/generico/assinador/pades-signature_html?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						                title="Assinar digitalmente com certificado ICP-Brasil">
						            <i class="fas fa-file-signature me-1"></i> Assinar ICP-Brasil
						        </button>
						    </dtml-if>
						    <dtml-if expr="AUTHENTICATED_USER.has_role(['Assessor Parlamentar']) or (des_tipo_autor == 'Mesa Diretora' or des_tipo_autor == 'Comissao')">
						        <button type="button" class="btn btn-outline-info"
						                data-bs-toggle="modal"
						                data-bs-target="#iFrameModal"
						                data-title="Assinaturas Digitais"
						                data-src="<dtml-var portal_url>/cadastros/assinatura/assinatura_solicitar_form?codigo=<dtml-var cod_proposicao missing>&tipo_doc=proposicao&modal=1"
						                title="Verificar e gerenciar assinaturas digitais">
						            <i class="fas fa-file-signature me-1"></i> Assinaturas
						        </button>
						    </dtml-if>
						</dtml-if>
					    </dtml-if>
					      <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and not prop_enviada and not prop_devolvida">
						<button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('pdf')" data-bs-toggle="tooltip" title="Remover o arquivo PDF">
						    <i class="far fa-trash-alt me-1"></i> Excluir PDF
						</button>
					      <dtml-elif expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and not prop_recebida and not prop_devolvida and not prop_solicitada">
					        <button type="button" class="btn btn-outline-danger" onclick="excluir_arquivo('pdf')"
						    data-bs-toggle="tooltip" title="Remover o PDF">
						<i class="far fa-trash-alt me-1"></i> Excluir PDF
					        </button>
					    </dtml-if>
					</dtml-let>
				    <dtml-else>
					<div class="input-group">
					    <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and (des_tipo_autor == 'Parlamentar')">
					    <dtml-else>
						<input type="file" class="form-control" id="file_nom_arquivo" name="file_nom_arquivo" accept="application/pdf">
					    </dtml-if>
					    <dtml-let id_documento_odt="str(cod_proposicao)+'.odt'">
						<dtml-if "hasattr(sapl_documentos.proposicao,id_documento_odt)">
						    <dtml-call expr="REQUEST.set('temODT', 1)">
						</dtml-if>
					    </dtml-let>
					    <dtml-if expr="_.has_key('temODT')">
						<button type="button" id="btn-gerar-pdf" class="btn btn-outline-success" onclick="javascript:texto_pdf_gerar();" data-bs-toggle="tooltip" title="Converter ODT para PDF">
						    <i class="fas fa-file-pdf me-1"></i> Converter ODT
						</button>
					    <dtml-else>
						<button type="button" id="btn-gerar-pdf" class="btn btn-outline-secondary" data-bs-toggle="tooltip" title="Não há ODT para converter">
						    <i class="fas fa-file-pdf me-1"></i> Converter ODT
						</button>
					    </dtml-if>
					</div>
				    </dtml-if>
				</div>
			    </div>
			  </div>
			</div>
            </div>
        </div>
       </dtml-if>
	<dtml-if cod_proposicao>
	  <div class="accordion accordion-flush accordion-plus-icon mb-4" id="accordionEquipe">
	    <div class="card card-proposicao mb-0 shadow-sm">
	      <div class="card-header accordion-header d-flex align-items-center px-0 py-1" id="headingEquipe"
		   style="background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; border-radius: 10px 10px 0 0;">
		<button class="accordion-button collapsed bg-transparent shadow-none d-flex align-items-center w-100"
		        type="button"
		        data-bs-toggle="collapse"
		        data-bs-target="#collapseEquipe"
		        aria-expanded="false"
		        aria-controls="collapseEquipe"
		        style="font-size: 15px; font-weight: 600; color: #2c3e50; min-height: 0; box-shadow: none; line-height:1.1;">
		  <i class="fas fa-users-cog me-2"></i>
		  Equipe de Apoio
		</button>
	      </div>

	      <div id="collapseEquipe" class="accordion-collapse collapse" aria-labelledby="headingEquipe" data-bs-parent="#accordionEquipe">
		<div class="card-body">
		  <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and (des_tipo_autor == 'Parlamentar')">
		    <div class="row g-3">
		      <div class="col-12 col-md-6">
		        <div class="form-group">
		          <label class="form-label" for="lst_assessor">Assessor Responsável</label>
		          <select class="form-select" id="lst_assessor" name="lst_assessor" 
		                  <dtml-if expr="prop_enviada">disabled</dtml-if>>
		            <option value=""></option>
		            <dtml-in expr="zsql.assessor_parlamentar_obter_zsql(cod_parlamentar=cod_parlamentar_sel)">
		              <dtml-if expr="not dat_exoneracao or dat_exoneracao == ''">
		                <option value="<dtml-var cod_assessor>" 
		                        <dtml-if "cod_assessor_sel and _.int(cod_assessor) == _.int(cod_assessor_sel)">
		                          selected
		                        </dtml-if>>
		                  <dtml-var nom_assessor>
		                </option>
		              </dtml-if>
		            </dtml-in>
		          </select>
		        </div>
		      </div>
		      <div class="col-12 col-md-6">
		        <div class="form-group">
		          <label class="form-label" for="nom_revisor">Revisor Designado</label>
		          <dtml-if expr="prop_enviada and cod_revisor">
		            <dtml-in expr="zsql.usuario_obter_zsql(cod_usuario=cod_revisor)">
		              <input class="form-control" type="text" 
		                     name="nom_revisor" value="<dtml-var nom_completo>" disabled>
		            </dtml-in>
		          <dtml-else>
		            <input class="form-control" type="text" 
		                   name="nom_revisor" value="" disabled>
		          </dtml-if>
		        </div>
		      </div>
		    </div>
		  
		  <dtml-elif expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão'])">
		    <div class="row g-3">
		      <div class="col-12 col-md-6">
		        <div class="form-group">
		          <label class="form-label" for="nom_assessor">Assessor Responsável</label>
		          <dtml-if expr="prop_enviada and cod_assessor_sel">
		            <dtml-in expr="zsql.assessor_parlamentar_obter_zsql(cod_assessor=cod_assessor_sel)">
		              <input class="form-control" type="text" 
		                     name="nom_assessor" value="<dtml-var nom_assessor>" disabled>
		            </dtml-in>
		          <dtml-else>
		            <input class="form-control" type="text" 
		                   name="nom_assessor" value="" disabled>
		          </dtml-if>
		        </div>
		      </div>
		      <div class="col-12 col-md-6">
		        <div class="form-group">
		          <label class="form-label" for="nom_revisor">Revisor Designado</label>
		          <dtml-if expr="prop_enviada and cod_revisor">
		            <dtml-in expr="zsql.usuario_obter_zsql(cod_usuario=cod_revisor)">
		              <input class="form-control" type="text" 
		                     name="nom_revisor" value="<dtml-var nom_completo>" disabled>
		            </dtml-in>
		          <dtml-else>
		            <input class="form-control" type="text" 
		                   name="nom_revisor" value="" disabled>
		          </dtml-if>
		        </div>
		      </div>
		    </div>
		  </dtml-if>
		</div>
	      </div>
	    </div>
	  </div>
	<dtml-else>
	  <input type="hidden" name="lst_assessor" value="<dtml-var cod_assessor missing>">
	</dtml-if>
      </form>

	<dtml-if expr="_.has_key('cod_proposicao') and (AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and des_tipo_autor == 'Parlamentar') or AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão'])">
	      <div class="accordion accordion-flush accordion-plus-icon mb-4" id="accordionDest">
		 <div class="card card-proposicao mb-0 shadow-sm">
		     <div class="card-header accordion-header d-flex align-items-center px-0 py-1" id="headingDest" style="background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; border-radius: 10px 10px 0 0;">
		       <h5 class="my-0">
		         <button class="accordion-button collapsed bg-transparent shadow-none d-flex align-items-center w-100" type="button" data-bs-toggle="collapse" data-bs-target="#collapseDest" aria-expanded="false" aria-controls="collapseDest" style="font-size: 15px; font-weight: 600; color: #2c3e50; min-height: 0; box-shadow: none; line-height:1.1;"><i class="fas fa-envelope me-2"></i> Destinatários para Remessa Eletrônica</button>
		       </h5>
		     </div>
		     <div id="collapseDest" class="collapse" aria-labelledby="headingDest" data-bs-parent="#accordionDest">
		         <div class="card-body">
			   <div class="table-resposive">
			    <table class="table table-sm table-borderless mb-0">
			       <thead>
				<tr>
				    <th><label for="txt_nom_destinatario">Nome do Destinatário</label></th>
				    <th width="50%"><label for="txt_end_email">Endereço de E-mail</label></th>
				</tr>
			       </thead>
				     <dtml-in expr="zsql.destinatario_oficio_obter_zsql(cod_proposicao = cod_proposicao, ind_excluido=0)">
				<tr>
				    <td>
				       <input class="form-control" type="text" id="txt_nom_destinatario" name="txt_nom_destinatario" value="<dtml-var nom_destinatario>" readonly>
				    </td>
				    <td>
		                       <div class="input-group">
		                          <input type="email" class="form-control" id="txt_end_email" name="txt_end_email" value="<dtml-var end_email>" readonly>
		                          <dtml-if expr="_.has_key('cod_proposicao') and (AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and des_tipo_autor == 'Parlamentar') and not prop_recebida">
		                             <a class="btn btn-danger text-white" href="destinatario_excluir?cod_proposicao=<dtml-var cod_proposicao>&cod_destinatario=<dtml-var cod_destinatario>"><i class="fa fa-fw fa-trash-alt"></i></a>
		                          </dtml-if>
		                       </div>
				    </td>
				</tr>
			     <dtml-else>
			       <div class="row">
			         <div class="col-12 ms-1 mb-3 text-muted">
				    Nenhum destinatário cadastrado.
			         </div>
			       </div>
		             </dtml-in>
			    </table>
			   </div>
		      <dtml-if expr="_.has_key('cod_proposicao') and (AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and des_tipo_autor == 'Parlamentar') and not prop_recebida">
			<form class="needs-validation" novalidate name="destinatario_form" id="destinatario_incluir_form" action="destinatario_incluir">
			   <div class="table-resposive">
			    <table class="table table-borderless" id="master_table">
			       <thead class="d-none">
				<tr>
				    <th><label for="txt_nom_destinatario" class="required">Nome</label></th>
				    <th><label for="txt_end_email" class="required">E-mail</label></th>
				</tr>
			       </thead>
				<tr>
				    <td width="50%">
				       <input class="form-control" type="text" id="txt_nom_destinatario" name="txt_nom_destinatario" required>
				    </td>
				    <td>
		                       <div class="input-group">
		                           <input type="email" class="form-control" id="txt_end_email" name="txt_end_email" required>
		                           <a class="btn btn-light add"><i class="fa fa-fw fa-plus"></i></a>
		                           <a class="btn btn-light removeRow"><i class="fa fa-fw fa-minus"></i></a>
		                       </div>
				    </td>
				</tr>
			    </table>
			   </div>
			   <input type="hidden" name="cod_proposicao" value="<dtml-var cod_proposicao>" />
			   <input type="hidden" name="hdn_url" value="<dtml-var ACTUAL_URL>?cod_proposicao=<dtml-var cod_proposicao>" />
			   <div class="row">
			     <div class="col-12 text-start">
			       <input class="btn btn-outline-primary ms-1" type="submit" name="button" value="Incluir Destinatários" />
			     </div>
			  </div>
			</form>
			</dtml-if>
		       </div>
		     </div>
		 </div>
	      </div>
	</dtml-if>

    <div class="sticky-footer-actions bg-light p-3 border-top">
      <div class="container-fluid d-flex justify-content-end gap-2">
        <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and not prop_enviada and not prop_devolvida">
            <button class="btn btn-primary btn-action" type="button" onClick="campos_criticar(document.proposicao_form)">
                <i class="fas fa-save me-1"></i> Salvar Proposição
            </button>
        <dtml-elif expr="(AUTHENTICATED_USER.has_role(['Operador','Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and not prop_recebida and not prop_solicitada and not prop_devolvida)">
            <button class="btn btn-primary btn-action" type="button" onClick="campos_criticar(document.proposicao_form)">
                <i class="fas fa-save me-1"></i> Salvar Proposição
            </button>
        </dtml-if>
       <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) and not prop_recebida and not prop_devolvida">
           <button type="button" class="btn btn-danger btn-action" data-bs-toggle="modal" data-bs-target="#devolucaoModal">
               <i class="fas fa-angle-double-left me-1"></i> Devolver ao Autor
           </button>
       </dtml-if>

        <dtml-if expr="usr_eh_autor and AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])">
            <dtml-if expr="_.has_key('cod_proposicao')">
                <dtml-if prop_enviada>
                    <dtml-unless dat_recebimento>
                        <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])">
                            <dtml-if prop_devolvida>
                                <button class="btn btn-success btn-action" type="button" onClick="proposicao_retomar()">
                                    <i class="fas fa-redo me-1"></i> Reaproveitar Proposição
                                </button>
                               <button type="button" class="btn btn-danger btn-action" onClick="proposicao_excluir()">
                                  <i class="far fa-trash-alt me-1"></i> Excluir Proposição
                               </button>
                            <dtml-else>
                                <dtml-if expr="not prop_solicitada">
                                    <button class="btn btn-danger btn-action" type="button" onClick="proposicao_solicitar_devolucao()">
                                        <i class="fas fa-paper-plane me-1"></i> Solicitar Devolução
                                    </button>
                                </dtml-if>
                            </dtml-if>
                        </dtml-if>
                    </dtml-unless>
                <dtml-else>
                    <dtml-call expr="REQUEST.set('id_documento', str(cod_proposicao)+'.odt')">
                    <dtml-call expr="REQUEST.set('id_pdf', str(cod_proposicao)+'.pdf')">
                    <dtml-call expr="REQUEST.set('id_documento_assinado', str(cod_proposicao)+'_signed.pdf')">
                    <dtml-if expr="hasattr(sapl_documentos.proposicao,id_documento_assinado) and AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar'])">
                        <button class="btn btn-success btn-action" type="button" onClick="proposicao_enviar()">
                            <i class="fas fa-share-square me-1"></i> Enviar para Protocolo
                        </button>
                    <dtml-elif expr="des_tipo_proposicao!='Indicação' and hasattr(sapl_documentos.proposicao,id_documento) and not hasattr(sapl_documentos.proposicao,id_pdf) and AUTHENTICATED_USER.has_role(['Autor', 'Assessor Parlamentar']) and (des_tipo_autor == 'Parlamentar' or des_tipo_autor == 'Mesa Diretora' or des_tipo_autor == 'Comissao')">
                        <button type="button" class="btn btn-success btn-action" data-bs-toggle="modal" data-bs-target="#revisaoModal">
                            <i class="fas fa-share-square me-1"></i> Enviar para Revisão
                        </button>
                        <div class="modal fade" id="revisaoModal" tabindex="-1" aria-labelledby="revisaoModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Envio de Proposição para Revisão</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                       <form id="revisaoform" role="form" method="post" action="proposicao_enviar_proc">
                                           <input type="hidden" name="hdn_cod_proposicao" value="<dtml-var cod_proposicao missing>" />
                                           <div class="row">
                                               <div class="col-12 mb-3">
                                               <label class="form-label" for="lst_revisor">Nome do Revisor</label>
                                               <select class="form-select" id="lst_revisor" name="lst_revisor">
                                                    <option value></option>
                                                    <dtml-in "acl_users.getUsers()">
                                                         <dtml-let user_roles="_.getitem('sequence-item').getRoles()">
                                                             <dtml-if expr="('Revisor Proposicao' in user_roles) or ('Chefia Revisão' in user_roles)">
                                                                 <dtml-in expr="zsql.usuario_obter_zsql(col_username=_['sequence-item'])">
                                                                     <option value="<dtml-var cod_usuario>"><dtml-var nom_completo></option>
                                                                 </dtml-in>
                                                             </dtml-if>
                                                         </dtml-let>
                                                    </dtml-in>
                                               </select>
                                               </div>
                                           </div>
                                           <div class="row">
                                               <div class="col-12 mb-2">
                                               <button class="btn btn-success" type="submit">Enviar para Revisão</button>
                                               </div>
                                           </div>
                                       </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </dtml-if>
                            <dtml-unless prop_enviada>
                               <button type="button" class="btn btn-danger btn-action" onClick="proposicao_excluir()">
                                  <i class="far fa-trash-alt me-1"></i> Excluir Proposição
                               </button>
                            </dtml-unless>
                </dtml-if>
            </dtml-if>
        <dtml-else>
            <dtml-unless cod_mat_ou_doc>
                <dtml-unless prop_devolvida>
                    <dtml-call expr="REQUEST.set('id_documento_assinado', str(cod_proposicao)+'_signed.pdf')">
                    <dtml-if expr="hasattr(sapl_documentos.proposicao,id_documento_assinado)">
                        <dtml-if expr="ind_mat_ou_doc=='D' and (des_tipo_proposicao=='Parecer' or des_tipo_proposicao=='Parecer de Comissão')">
                            <dtml-let cod_doc="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">
                            <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia'])">
                                <button type="button" class="btn btn-success btn-action" data-bs-toggle="modal" data-bs-target="#iFrameModal" data-title="Parecer de Comissão" data-src="<dtml-var portal_url>/cadastros/recebimento_proposicao/proposicao_buscar_proc?txtCodDoc=<dtml-var cod_doc missing>&modal=1">
                                    <i class="fas fa-exchange-alt me-1"></i> Incorporar Parecer
                                </button>
                            </dtml-if>
                            </dtml-let>
                        <dtml-else>
                            <dtml-if expr="AUTHENTICATED_USER.has_role(['Operador', 'Operador Materia'])">
                              <dtml-if expr="not prop_solicitada">
                                <button class="btn btn-success btn-action" type="button" onClick="proposicao_incorporar()">
                                    <i class="fas fa-check-circle me-1"></i> Incorporar
                                </button>
                              </dtml-if>
                            </dtml-if>
                        </dtml-if>
                    </dtml-if>
                </dtml-unless>
            </dtml-unless>
        </dtml-if>
      </div>
    </div>

	<dtml-if expr="_.has_key('cod_proposicao') and (AUTHENTICATED_USER.has_role(['Autor','Operador', 'Operador Materia', 'Revisor Proposicao', 'Chefia Revisão']) or True)">
	  <div class="accordion accordion-flush accordion-plus-icon mb-4" id="accordionObs">
	    <div class="card card-proposicao mb-0 shadow-sm">
	      <div class="card-header accordion-header d-flex align-items-center px-0 py-1" id="headingObs"
		   style="background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; border-radius: 10px 10px 0 0;">
		<button class="accordion-button collapsed bg-transparent shadow-none d-flex align-items-center w-100"
		        type="button"
		        data-bs-toggle="collapse"
		        data-bs-target="#collapseObs"
		        aria-expanded="false"
		        aria-controls="collapseObs"
		        style="font-size: 15px; font-weight: 600; color: #2c3e50; min-height: 0; box-shadow: none; line-height:1.1;">
		  <i class="fas fa-comment-dots me-2"></i>
		  Observações
		</button>
	      </div>

	      <div id="collapseObs" class="accordion-collapse collapse" aria-labelledby="headingObs" data-bs-parent="#accordionObs">
		<div class="card-body">
		  <form name="observacao_form" method="post" action="proposicao_salvar_observacao_proc">
		    <input type="hidden" name="hdn_cod_proposicao" value="<dtml-var cod_proposicao missing="">" />
		    
		    <div class="form-group mb-3">
		      <dtml-if cod_mat_ou_doc>
		        <p class="form-control-plaintext mb-0">
		          <dtml-if txt_observacao>
		            <dtml-var txt_observacao>
		          <dtml-else>
		            Nenhuma observação.
		          </dtml-if>
		        </p>
		      <dtml-else>
		        <textarea class="form-control auto-resize" name="txa_txt_observacao" id="txa_txt_observacao" rows="3" 
		                  <dtml-if expr="prop_devolvida">readonly</dtml-if>>
		          <dtml-if txt_observacao>
		            <dtml-var txt_observacao>
		          </dtml-if>
		        </textarea>
		      </dtml-if>
		    </div>

		    <dtml-if expr="not cod_mat_ou_doc and not prop_devolvida">
		      <button class="btn btn-outline-primary" type="button" onclick="observacao_salvar(document.observacao_form)">
		        <i class="fas fa-save me-1"></i> Gravar Observações
		      </button>
		    </dtml-if>
		  </form>
		</div>
	      </div>
	    </div>
	  </div>
	</dtml-if>

    <dtml-if expr="_.has_key('cod_proposicao') and dbcon_logs">
        <div class="row">
            <div class="col-12 text-end mt-3">
                <i class="fa fa-clock small me-1"></i>
                <a href="#" class="text-muted small" data-bs-toggle="modal" data-bs-target="#iFrameModal" data-title="Histórico da Proposição" data-src="<dtml-var portal_url>/historico?cod_registro=<dtml-var cod_proposicao missing>&modulo=proposicao&modal=1">
                    Histórico
                </a>
            </div>
        </div>
    </dtml-if>

<dtml-else>
    <dtml-let mensagem="'Você não tem permissão para ver esta proposição!'">
        <dtml-var mensagem_emitir>
    </dtml-let>
</dtml-if>

</div>

<dtml-var js_slot>

<script>
// ========== MODULE PATTERN IMPLEMENTATION ==========
var ProposicaoManager = (function() {
    // ========== PRIVATE VARIABLES ==========
    const _portalUrl = '<dtml-var portal_url>';
    const _codProposicao = '<dtml-var cod_proposicao missing>';
    const _emRevisao = <dtml-if expr="(('Operador' in AUTHENTICATED_USER.getRoles()) or ('Operador Materia' in AUTHENTICATED_USER.getRoles()) or ('Revisor Proposicao' in AUTHENTICATED_USER.getRoles()) or ('Chefia Revisão' in AUTHENTICATED_USER.getRoles())) and dat_envio and _.has_key('tem_odt') and not _.has_key('tem_pdf') and not dat_recebimento">true<dtml-else>false</dtml-if>;
    const _tem_pdf = <dtml-if expr="_.has_key('tem_pdf')">true<dtml-else>false</dtml-if>;
    const _ehAutor = <dtml-if expr="AUTHENTICATED_USER.has_role(['Autor'])">true<dtml-else>false</dtml-if>;
    const _campoAssuntoBloqueado = <dtml-if expr="_.has_key('tem_pdf') or _.has_key('tem_odt') or prop_recebida or prop_devolvida">true<dtml-else>false</dtml-if>;
    
    // Cached DOM elements
    const _domCache = {
        form: document.proposicao_form,
        txtDescricao: $('#txt_descricao'),
        txaJustificativa: $('#txa_txt_justificativa'),
        lstAssunto: $('#lst_assunto'),
        btnGerarPdf: $('#btn-gerar-pdf'),
        // Add other frequently used elements here
    };

    // ========== PRIVATE FUNCTIONS ==========
    function _aplicarReadonlySelect2(selector, enableReadonly) {
        const $select = $(selector);
        if (enableReadonly) {
            $select.addClass('readonly');
            setTimeout(() => {
                $select.next('.select2-container').find('.select2-selection').addClass('readonly');
            }, 10);
        } else {
            $select.removeClass('readonly');
            setTimeout(() => {
                $select.next('.select2-container').find('.select2-selection').removeClass('readonly');
            }, 10);
        }
    }

    function _getTotalTopOffset() {
        let total = 0;
        const header = document.getElementById('page-topbar');
        if (header && ['fixed', 'sticky'].includes(window.getComputedStyle(header).position)) {
            total += header.offsetHeight;
        }
        const topnav = document.querySelector('.topnav');
        if (topnav && ['fixed', 'sticky'].includes(window.getComputedStyle(topnav).position)) {
            total += topnav.offsetHeight;
        }
        return total;
    }

    function _artigoParaOrgao(nome) {
        if (!nome) return '';
        const minusculo = nome.trim().toLowerCase();
        if (minusculo.startsWith('secretaria')) return 'à ';
        if (minusculo.startsWith('coordenadoria')) return 'à ';
        if (minusculo.startsWith('diretoria')) return 'à ';
        if (minusculo.startsWith('departamento')) return 'ao ';
        if (minusculo.startsWith('setor')) return 'ao ';
        if (minusculo.startsWith('gabinete')) return 'ao ';
        if (minusculo.startsWith('divisão')) return 'à ';
        if (minusculo.startsWith('comissão')) return 'à ';
        return 'ao ';
    }

    // ========== PUBLIC API ==========
    return {
        // ========== INITIALIZATION ==========
        init: function() {
            this.initTinyMCE();
            this.initEventHandlers();
            this.initSelect2();
            this.initDragAndDrop();
            this.initTooltips();
            this.tipoProposicaoMudou();
            this.atualizarStatusProposicao();
            
            // Initialize CEP handling
            const cepAtual = $('#txt_num_cep').val()?.replace(/\D/g, '') || '';
            const tipoProposicaoAtual = $("#lst_tip_proposicao option:selected").text();
            
            if (tipoProposicaoAtual === "Indicação") {
                if (cepAtual === '00000000') {
                    this.liberarEmentaPorCepZerado();
                } else if (cepAtual && cepAtual.length === 8) {
                    this.bloquearEmentaAutomatica();
                } else {
                    // Se não há CEP válido, bloqueia os campos por padrão
                    this.bloquearEmentaAutomatica();
                }
            } else {
                // Garantir que o campo ementa esteja liberado para edição se não for Indicação
                _domCache.txtDescricao.prop('readonly', false).removeClass('bg-light');
            }

            // Load models if cod_proposicao exists
            <dtml-if "_.has_key('cod_proposicao')">
                const tipoProposicaoInicial = $("#lst_tip_proposicao").val();
                const tipoPropoIdInicial = tipoProposicaoInicial?.split("&")[0] || '';
                if (tipoPropoIdInicial) {
                    $.ajax({
                        url: 'modelos_carregar_pysc',
                        type: 'post',
                        data: { svalue: tipoPropoIdInicial },
                        dataType: 'json',
                        success: function(response) {
                            response.forEach(function(item) {
                                $("#lst_modelo").append(`<option data-path="${item.path_arquivo}" value="${item.id_arquivo}">${item.titulo_arquivo}</option>`);
                            });
                            <dtml-if "_.has_key('nom_modelo')">
                                $(`#lst_modelo option[data-path*="<dtml-var nom_modelo>"]`).prop('selected', true);
                            </dtml-if>
                        }
                    });
                }
            </dtml-if>
        },

        // ========== CORE FUNCTIONS ==========
        initTinyMCE: function() {
            tinymce.init({
                selector: '#txa_txt_observacao',
                language: 'pt_BR',
                browser_spellcheck: true,
                contextmenu: false,
                height: 250,
                paste_as_text: true,
                plugins: [
                    'advlist autolink link image lists charmap print preview hr anchor pagebreak',
                    'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking',
                    'table emoticons template paste help'
                ],
                toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | ' +
                    ' link image | print preview media fullpage | ',
                menubar: 'edit view insert format tools help',
                content_style: 'body {font-size:14px }',
                setup: function(editor) {
                    editor.on('change', function() {
                        editor.save();
                    });
                }
            });
        },

        initEventHandlers: function() {
            // CEP handling
            $('#txt_num_cep').inputmask('99999-999');
            $("#txt_num_cep").on('blur', () => this.buscarCEP());

            // Ementa generation
            $("#lst_assunto, #txt_complemento_endereco").on('change', () => {
                if ($("#lst_tip_proposicao option:selected").text() === "Indicação") {
                    this.gerarEmentaAutomatica(true);
                }
            });

            $("#txt_nom_logradouro, #txt_complemento_endereco, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf").on('input change', () => {
                if ($("#lst_tip_proposicao option:selected").text() === "Indicação") {
                    this.gerarEmentaAutomatica(true);
                }
            });

            // Form submissions
            $('#revisaoform').on('submit', (e) => {
                e.preventDefault();
                this.showConfirmModal(
                    "Confirmação de Envio",
                    "Confirma o envio da proposição para revisão?",
                    () => e.target.submit(),
                    null
                );
            });

            $('#myform').on('submit', (e) => {
                if (!e.target.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                    $(e.target).addClass('was-validated');
                    return;
                }
                e.preventDefault();
                this.showConfirmModal(
                    "Confirmação de Devolução",
                    "<p>Confirma a devolução da proposição ao Autor?</p>",
                    () => e.target.submit(),
                    null,
                    'btn-danger',
                    'Sim, devolver'
                );
            });

            // Other event handlers...
        },

        initSelect2: function() {
            $('.select2').select2({
                width: '100%',
                dropdownParent: $(this).closest('.modal').length ? $(this).closest('.modal') : $('body')
            });

            $(window).on('resize', () => {
                $('#lst_assunto').select2('close');
                $('#lst_assunto').select2({ width: '100%' });
            });

            // Block select2 interaction when readonly
            $(document)
                .on('mousedown mousewheel focus', '#lst_assunto', (e) => {
                    if ($(e.target).hasClass('readonly')) {
                        e.preventDefault();
                        e.target.blur();
                        return false;
                    }
                })
                .on('select2:opening select2:selecting', '#lst_assunto', (e) => {
                    if ($(e.target).hasClass('readonly')) {
                        e.preventDefault();
                        return false;
                    }
                });
        },

        initDragAndDrop: function() {
            const dropArea = $('#pdf-drop-area');
            const fileInput = $('#file_nom_anexo_input');
            const browseLink = $('#pdf-browse-link');
            const previewDiv = $('#pdf-upload-preview');
            let uploadedFiles = [];

            const preventDefaults = (e) => {
                e.preventDefault();
                e.stopPropagation();
            };

            const highlight = () => dropArea.addClass('highlight');
            const unhighlight = () => dropArea.removeClass('highlight');

            const handleDrop = (e) => {
                const dt = e.originalEvent.dataTransfer;
                const files = dt.files;
                handleFiles({ target: { files } });
            };

            const handleFiles = (event) => {
                const files = event.target.files;
                previewDiv.empty();
                if (files.length > 0) {
                    uploadedFiles = [...uploadedFiles, ...Array.from(files)];
                    renderFileList();
                }
            };

            const renderFileList = () => {
                previewDiv.empty();
                if (uploadedFiles.length > 0) {
                    const fileList = $('<ul class="list-group mb-3"></ul>');
                    uploadedFiles.forEach((file, index) => {
                        if (file.type !== 'application/pdf') {
                            previewDiv.append(`
                                <div class="alert alert-warning alert-dismissible fade show small mb-2" role="alert">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    O arquivo "${file.name}" não é um PDF válido e será ignorado.
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            `);
                            return;
                        }
                        const listItem = $(`
                            <li class="list-group-item d-flex justify-content-between align-items-center" data-index="${index}">
                                <div>
                                    <i class="fas fa-file-pdf text-danger me-2"></i>
                                    ${file.name} (${(file.size / 1024).toFixed(2)} KB)
                                </div>
                                <button type="button" class="btn btn-sm btn-outline-danger remove-file">
                                    <i class="far fa-trash-alt"></i>
                                </button>
                            </li>
                        `);
                        fileList.append(listItem);
                    });
                    previewDiv.append(fileList);
                    updateFileInput();
                    $('.remove-file').on('click', function() {
                        const index = $(this).closest('li').data('index');
                        removeFile(index);
                    });
                }
            };

            const removeFile = (index) => {
                uploadedFiles.splice(index, 1);
                renderFileList();
            };

            const updateFileInput = () => {
                const dataTransfer = new DataTransfer();
                uploadedFiles.forEach(file => {
                    if (file.type === 'application/pdf') {
                        dataTransfer.items.add(file);
                    }
                });
                fileInput[0].files = dataTransfer.files;
            };

            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.on(eventName, preventDefaults);
            });
            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.on(eventName, highlight);
            });
            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.on(eventName, unhighlight);
            });
            dropArea.on('drop', handleDrop);
            browseLink.on('click', (e) => {
                e.preventDefault();
                fileInput.click();
            });
            fileInput.on('change', handleFiles);
        },

	excluirAnexo: function(anexo, cod_proposicao) {
	    this.showConfirmModal(
		"Excluir Anexo",
		"Deseja realmente excluir este anexo? Esta ação não pode ser desfeita.",
		() => {
		    // Show loading indicator
		    const el = document.getElementById('preview-' + anexo);
		    if (el) {
		        el.innerHTML = `
		            <div class="d-flex justify-content-center align-items-center" style="height: 100px;">
		                <div class="spinner-border text-primary" role="status">
		                    <span class="visually-hidden">Carregando...</span>
		                </div>
		            </div>
		        `;
		    }

		    fetch(
		        `anexo_excluir?anexo=${encodeURIComponent(anexo)}&cod_proposicao=${encodeURIComponent(cod_proposicao)}`,
		        { 
		            method: 'POST',
		            headers: {
		                'Accept': 'application/json',
		                'X-Requested-With': 'XMLHttpRequest'
		            }
		        }
		    )
		    .then(r => {
		        if (!r.ok) {
		            throw new Error(`HTTP error! status: ${r.status}`);
		        }
		        return r.json();
		    })
		    .then(data => {
		        if (data.success) {
		            this.mostrarToast('sucesso', data.message || 'Anexo excluído com sucesso!');
		            // Remove from DOM with animation
		            if (el) {
		                $(el).fadeOut(300, () => el.remove());
		            }
		        } else {
		            throw new Error(data.message || 'Erro ao excluir anexo.');
		        }
		    })
		    .catch((error) => {
		        // Restore element if it exists
		        if (el) {
		            el.innerHTML = `
		                <div class="alert alert-danger">
		                    <i class="fas fa-exclamation-triangle me-2"></i>
		                    ${error.message || 'Erro ao excluir anexo.'}
		                    <button class="btn btn-sm btn-secondary mt-2" onclick="ProposicaoManager.excluirAnexo('${anexo}', '${cod_proposicao}')">
		                        <i class="fas fa-sync-alt me-1"></i> Tentar novamente
		                    </button>
		                </div>
		            `;
		        }
		        this.mostrarToast('erro', error.message || 'Erro ao excluir anexo.');
		    });
		},
		null, // No cancel action
		'btn-danger', // Red confirm button
		'Sim, excluir' // Confirm button text
	    );
	},

        initTooltips: function() {
            $('[data-bs-toggle="tooltip"]').tooltip();
        },

        // ========== BUSINESS LOGIC ==========
        tipoProposicaoMudou: function() {
            if (!_domCache.form || !_domCache.form.lst_tip_proposicao) return;
            
            _domCache.form.hdn_alterou.value = 1;
            const tipoProposicaoValue = _domCache.form.lst_tip_proposicao.value;
            const desTipoProposicao = _domCache.form.lst_tip_proposicao.options[_domCache.form.lst_tip_proposicao.selectedIndex].text;
            const indMatOuDoc = tipoProposicaoValue.split("&");
            
            this.controlarBotaoGerarPdf();

            // Hide all variable fields first
            $("#divIndicaEndereco, #divJustificativa, #cardAssunto, #accordionMaps").slideUp(300);
            $('a[href*="/webeditor/editorProposicao"], button[onclick*="externalEdit_"]').show();
            $("#btn-gerar-pdf").val("Converter ODT").prop('onclick', null).off('click').on('click', () => this.textoPdfGerar());

            // Unlock fields by default (will be re-locked if needed)
            _domCache.txtDescricao.prop('readonly', false).removeClass('bg-light');
            _domCache.txaJustificativa.prop('readonly', true).addClass('bg-light');
            
            // Para Indicação, os campos de endereço são bloqueados por padrão
            if (desTipoProposicao === 'Indicação') {
                $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf")
                    .prop('readonly', true)
                    .addClass('bg-light')
                    .removeClass('border-warning');
                $("#txt_complemento_endereco").prop('readonly', false).removeClass('bg-light');
            } else {
                $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf, #txt_complemento_endereco, #txt_num_cep")
                    .prop('readonly', false)
                    .removeClass('bg-light')
                    .removeClass('border-warning');
            }

            // Matéria vinculada
            if (indMatOuDoc[1] === 'D') {
                $("#divMat").slideDown(300);
                _domCache.form.lst_tip_id_basica.disabled = false;
                _domCache.form.txt_num_ident_basica.disabled = false;
                _domCache.form.txt_ano_ident_basica.disabled = false;
            } else {
                $("#divMat").slideUp(300);
                _domCache.form.lst_tip_id_basica.disabled = true;
                _domCache.form.txt_num_ident_basica.disabled = true;
                _domCache.form.txt_ano_ident_basica.disabled = true;
            }

            // ---- BLOQUEIO DE EMENTA/ASSUNTO ----
            if (desTipoProposicao === 'Indicação') {
                $("#divIndicaEndereco, #divJustificativa, #cardAssunto, #accordionMaps").slideDown(300);
                $('a[href*="/webeditor/editorProposicao"], button[onclick*="externalEdit_"]').hide();
                $("#btn-gerar-pdf").val("Gerar PDF Final").prop('onclick', null).off('click').on('click', () => this.textoPdfGerar());

                // Ementa sempre readonly
                _domCache.txtDescricao.prop('readonly', true).addClass('bg-light');
                
                // Justificativa: só desbloqueia se não houver bloqueio geral
                if (_campoAssuntoBloqueado) {
                    _domCache.txaJustificativa.prop('readonly', true).addClass('bg-light');
                } else {
                    _domCache.txaJustificativa.prop('readonly', false).removeClass('bg-light');
                }
                
                // Endereço: só libera se não houver bloqueio geral E se CEP for 00000-000
                if (_campoAssuntoBloqueado) {
                    $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf, #txt_complemento_endereco, #txt_num_cep")
                        .prop('readonly', true)
                        .addClass('bg-light')
                        .removeClass('border-warning');
                } else {
                    // Verifica se CEP é 00000-000 para liberar campos de endereço
                    const cepAtual = $('#txt_num_cep').val()?.replace(/\D/g, '') || '';
                    if (cepAtual === '00000000') {
                        $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf")
                            .prop('readonly', false)
                            .removeClass('bg-light')
                            .addClass('border-warning');
                    } else {
                        $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf")
                            .prop('readonly', true)
                            .addClass('bg-light')
                            .removeClass('border-warning');
                    }
                }
            } else if (desTipoProposicao === 'Requerimento') {
              $("#accordionMaps").slideDown(300);
              // regras específicas de Requerimento (se houver)

            }

            // BLOQUEIO select de assunto (readonly visual)
            if (['Indicação', 'Requerimento', 'Moção'].includes(desTipoProposicao)) {
                $("#cardAssunto").slideDown(300);
            } else {
                _aplicarReadonlySelect2('#lst_assunto', true);
                _domCache.lstAssunto.val('').trigger('change');
            }

            // Load subjects
            _domCache.lstAssunto.select2({minimumResultsForSearch: Infinity});
            _domCache.lstAssunto.html('<option value="">Carregando...</option>');
            this.carregarAssuntos(indMatOuDoc[0]);
        },

        carregarAssuntos: function(tipoProposicaoId) {
            $.ajax({
                url: 'assuntos_carregar_pysc',
                type: 'post',
                data: { svalue: tipoProposicaoId },
                dataType: 'json',
                beforeSend: () => {
                    _domCache.lstAssunto.addClass('readonly').html('<option value="">Carregando...</option>');
                },
                success: (response) => {
                    let options = '<option value="">Selecione</option>';
                    response.forEach((item) => {
                        options += `<option value="${item.cod_assunto}">${item.des_assunto} (${item.nom_orgao})</option>`;
                    });
                    _domCache.lstAssunto.html(options);

                    // Apply readonly based on state
                    if (_emRevisao && !_tem_pdf) {
                        _aplicarReadonlySelect2('#lst_assunto', false);
                    } else if (_tem_pdf || _campoAssuntoBloqueado) {
                        _aplicarReadonlySelect2('#lst_assunto', true);
                    } else {
                        _aplicarReadonlySelect2('#lst_assunto', false);
                    }

                    <dtml-if "_.has_key('cod_assunto_sel')">
                    if ($("#lst_assunto option[value='<dtml-var cod_assunto_sel>']").length) {
                        _domCache.lstAssunto.val('<dtml-var cod_assunto_sel>').trigger('change');
                    }
                    </dtml-if>
                    if (_domCache.lstAssunto.hasClass('select2-hidden-accessible')) {
                      _domCache.lstAssunto.select2('destroy');
                    }
                    _domCache.lstAssunto.select2({
                      minimumResultsForSearch: 0,
                      width: '100%'
                    });
                },
                error: () => {
                    _domCache.lstAssunto.html('<option value="">Erro ao carregar assuntos</option>');
                }
            });
        },

        controlarBotaoGerarPdf: function() {
            if (_emRevisao && _ehAutor) {
                _domCache.btnGerarPdf.prop('disabled', true)
                    .addClass('disabled')
                    .attr('title', 'A conversão para PDF é permitida apenas pela revisão ou operador.');
            } else {
                _domCache.btnGerarPdf.prop('disabled', false)
                    .removeClass('disabled')
                    .attr('title', 'Converter ODT em PDF');
            }
        },

        // ========== CEP AND ADDRESS FUNCTIONS ==========
        bloquearCamposEnderecoReadonly: function() {
            $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf")
                .prop('readonly', true)
                .addClass('bg-light')
                .removeClass('border-warning');
        },

        liberarCamposEnderecoEdicao: function() {
            $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf")
                .prop('readonly', false)
                .removeClass('bg-light')
                .addClass('border-warning');
        },

        liberarEmentaPorCepZerado: function() {
            // Só libera os campos se for Indicação
            if ($("#lst_tip_proposicao option:selected").text() === "Indicação") {
                $("#txt_nom_logradouro").prop('readonly', false).removeClass('bg-light');
                $("#txt_nom_cidade").prop('readonly', false).removeClass('bg-light');
                $("#txt_sgl_uf").prop('readonly', false).removeClass('bg-light');
                $("#txt_nom_bairro").prop('readonly', false).removeClass('bg-light');
                _domCache.txtDescricao.prop('readonly', true).addClass('bg-light');
                $("#badgeEmentaAuto").show();
                $("#helpEmentaAuto").show();
                $("#avisoEmentaManual").show();
                $("#txt_nom_logradouro, #txt_nom_bairro, #txt_nom_cidade, #txt_sgl_uf").addClass('border-warning');
            }
        },

        bloquearEmentaAutomatica: function() {
            // Só bloqueia os campos se for Indicação
            if ($("#lst_tip_proposicao option:selected").text() === "Indicação") {
                $("#txt_nom_logradouro").prop('readonly', true).addClass('bg-light').removeClass('border-warning');
                $("#txt_nom_cidade").prop('readonly', true).addClass('bg-light').removeClass('border-warning');
                $("#txt_sgl_uf").prop('readonly', true).removeClass('border-warning');
                $("#txt_nom_bairro").prop('readonly', true).addClass('bg-light').removeClass('border-warning');
                _domCache.txtDescricao.prop('readonly', true).addClass('bg-light');
                $("#badgeEmentaAuto").show();
                $("#helpEmentaAuto").show();
                $("#avisoEmentaManual").hide();
            }
        },

        // ========== EMENTA GENERATION ==========
	gerarEmentaAutomatica: function(forcar = false) {
	    const desTipoProposicao = $("#lst_tip_proposicao option:selected").text();
	    if (desTipoProposicao !== 'Indicação') return;
	    
	    const campo = _domCache.txtDescricao;
	    const ementaExistente = campo.val().trim();
	    if (!forcar && ementaExistente !== "") return;

	    const textoAssuntoCompleto = _domCache.lstAssunto.find("option:selected").text().trim();
	    const assuntoTexto = textoAssuntoCompleto.split(' (')[0];
	    const orgaoTexto = textoAssuntoCompleto.match(/\(([^)]+)\)/)?.[1] || "";

	    const logradouroTexto  = $("#txt_nom_logradouro").val();
	    const complementoTexto = $("#txt_complemento_endereco").val();
	    const bairroTexto      = $("#txt_nom_bairro").val();
	    const cepTexto         = $("#txt_num_cep").val() || "";
	    const cepDigits        = (cepTexto || "").replace(/\D/g, "");

	    let ementaFinal = "Solicitando ";
	    if (orgaoTexto) {
		ementaFinal += _artigoParaOrgao(orgaoTexto) + orgaoTexto + " ";
	    }
	    if (assuntoTexto && assuntoTexto !== 'Selecione') {
		ementaFinal += `a realização de ${assuntoTexto.toLowerCase().trim()}`;
	    }

	    if (logradouroTexto) {
		// Com logradouro: incluir complemento, " no bairro", CEP; sem cidade/UF
		ementaFinal += ` na ${logradouroTexto}`;
		if (complementoTexto) ementaFinal += `, ${complementoTexto}`;
		if (bairroTexto)      ementaFinal += `, no bairro ${bairroTexto}`;
		if (cepDigits && cepDigits !== '00000000') ementaFinal += `, CEP ${cepTexto}`;
		ementaFinal += ".";
	    } else {
		// Sem logradouro → "no bairro <bairro>", complemento e CEP (se existirem)
		const partes = [];
		if (bairroTexto) partes.push(`no bairro ${bairroTexto}`);
		if (complementoTexto) partes.push(complementoTexto);
		if (cepDigits && cepDigits !== '00000000') partes.push(`CEP ${cepTexto}`);
		ementaFinal += partes.length ? (' ' + partes.join(', ') + '.') : '.';
	    }

	    campo.val(ementaFinal);
	},

        // ========== CEP LOOKUP ==========
        async buscarCEP() {
            const cepRaw = $("#txt_num_cep").val();
            const cep = cepRaw.replace(/\D/g, '');
            const desTipoProposicao = $("#lst_tip_proposicao option:selected").text();
            const cepInput = $("#txt_num_cep");
            const cepDisplay = $("#loadingCEP");
            
            const limparCampos = () => {
                $("#txt_nom_logradouro").val('');
                $("#txt_nom_bairro").val('');
                $("#txt_nom_cidade").val('');
                $("#txt_sgl_uf").val('');
            };

            if (desTipoProposicao !== 'Indicação') return;

            if (cep === '00000000') {
                this.liberarEmentaPorCepZerado();
                cepDisplay.html('');
                limparCampos();
                return;
            }
            
            if (cep.length !== 8) {
                this.bloquearEmentaAutomatica();
                cepDisplay.html('');
                limparCampos();
                return;
            }

            this.bloquearEmentaAutomatica();
            cepInput.prop('disabled', true);
            cepDisplay.html(`
                <div class="d-flex align-items-center text-muted">
                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                    Buscando endereço...
                </div>
            `);
            limparCampos();

            try {
                // Try ViaCEP first
                const viaCEPResponse = await this._buscarCEPViaCEP(cep);
                if (viaCEPResponse && !viaCEPResponse.erro) {
                    this._preencherEndereco(
                        viaCEPResponse.logradouro || '',
                        viaCEPResponse.bairro || '',
                        viaCEPResponse.localidade || '',
                        viaCEPResponse.uf || ''
                    );
                    this.gerarEmentaAutomatica(true);
                    cepDisplay.html('');
                    return;
                }

                // Fallback to BrasilAPI
                const brasilAPIResponse = await this._buscarCEPBrasilAPI(cep);
                if (brasilAPIResponse && !brasilAPIResponse.errors && !brasilAPIResponse.message) {
                    this._preencherEndereco(
                        brasilAPIResponse.street || '',
                        brasilAPIResponse.neighborhood || '',
                        brasilAPIResponse.city || '',
                        brasilAPIResponse.state || ''
                    );
                    this.gerarEmentaAutomatica(true);
                    cepDisplay.html('');
                    return;
                }

                throw new Error("CEP não encontrado.");
            } catch (error) {
                limparCampos();
                cepDisplay.html(`
                    <div class="text-danger">
                        <i class="fas fa-exclamation-circle me-1"></i>
                        ${error.message.includes("não encontrado") ? "CEP não encontrado" : "Erro ao consultar CEP"}
                    </div>
                `);
                this.showConfirmModal(
                    "CEP não encontrado",
                    "Não foi possível encontrar o endereço para o CEP informado. Verifique o número digitado."
                );
            } finally {
                cepInput.prop('disabled', false);
            }
        },

        async _buscarCEPViaCEP(cep, retries = 2) {
            try {
                const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);
                if (!response.ok) throw new Error("ViaCEP não respondeu");
                return await response.json();
            } catch (error) {
                if (retries > 0) {
                    await new Promise(resolve => setTimeout(resolve, 1000));
                    return this._buscarCEPViaCEP(cep, retries - 1);
                }
                throw error;
            }
        },

        async _buscarCEPBrasilAPI(cep, retries = 2) {
            try {
                const response = await fetch(`https://brasilapi.com.br/api/cep/v2/${cep}`);
                if (!response.ok) throw new Error("BrasilAPI não respondeu");
                return await response.json();
            } catch (error) {
                if (retries > 0) {
                    await new Promise(resolve => setTimeout(resolve, 1000));
                    return this._buscarCEPBrasilAPI(cep, retries - 1);
                }
                throw error;
            }
        },

        _preencherEndereco: function(logradouro, bairro, cidade, uf) {
            $("#txt_nom_logradouro").val(logradouro);
            $("#txt_nom_bairro").val(bairro);
            $("#txt_nom_cidade").val(cidade);
            $("#txt_sgl_uf").val(uf);
        },

        // ========== FILE OPERATIONS ==========
        async textoOdtGerar() {
            const lstModelo = document.getElementById("lst_modelo");
            if (!lstModelo || lstModelo.selectedIndex === 0) {
                this.showConfirmModal(
                    "Modelo não selecionado",
                    "Para gerar o documento é necessário selecionar um modelo.",
                    null,
                    null
                );
                return false;
            }
            
            const value = lstModelo.value;
            const selected = lstModelo.options[lstModelo.selectedIndex];
            const path = selected.getAttribute('data-path');

            this.showConfirmModal(
                "Confirmação",
                "Confirma a geração do arquivo ODT? Esta ação substituirá qualquer documento existente.",
                async () => {
                    this.mostrarToast('info', `<span class="spinner-border spinner-border-sm me-2"></span>Gerando arquivo ODT...`);
                    try {
                        const response = await fetch(`${_portalUrl}/modelo_proposicao/proposicao?cod_proposicao=${_codProposicao}&modelo_proposicao=${value}&modelo_path=${path}`, {
                            method: 'POST',
                            headers: { 'Accept': 'application/json' }
                        });
                        const data = await response.json();
                        $('.toast').remove();
                        
                        if (data.success) {
                            this.mostrarToast('sucesso', `<i class="fas fa-check-circle me-2"></i> ${data.message}`);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            this.mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> ${data.message}`);
                        }
                    } catch (err) {
                        $('.toast').remove();
                        this.mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> Erro ao gerar ODT: ${err.message}`);
                    }
                }
            );
        },

        async textoPdfGerar() {
            this.showConfirmModal(
                "Confirmação",
                "Confirma a geração do arquivo PDF? Esta ação substituirá qualquer PDF existente.",
                async () => {
                    this.mostrarToast('info', `<span class="spinner-border spinner-border-sm me-2"></span>Gerando arquivo PDF...`);
                    try {
                        const response = await fetch(`${_portalUrl}/modelo_proposicao/proposicao_gerar_pdf?cod_proposicao=${_codProposicao}`, {
                            method: 'POST',
                            headers: { 'Accept': 'application/json' }
                        });
                        const data = await response.json();
                        $('.toast').remove();
                        
                        if (data.success) {
                            this.mostrarToast('sucesso', `<i class="fas fa-check-circle me-2"></i> ${data.message}`);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            this.mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> ${data.message}`);
                        }
                    } catch (err) {
                        $('.toast').remove();
                        this.mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> Erro ao gerar PDF: ${err.message}`);
                    }
                }
            );
        },

        excluirArquivo: function(tipo) {
            let url = '';
            let msg = '';
            
            if (tipo === 'odt') {
                url = `${_portalUrl}/cadastros/proposicao/texto_proposicao_excluir_proc?cod_proposicao=${_codProposicao}`;
                msg = "Deseja realmente excluir o arquivo ODT da Proposição?";
            } else if (tipo === 'pdf') {
                url = `${_portalUrl}/cadastros/proposicao/texto_pdf_excluir_proc?cod_proposicao=${_codProposicao}`;
                msg = "Deseja realmente excluir o texto PDF da proposição?";
            } else if (tipo === 'assinado') {
                url = `${_portalUrl}/cadastros/proposicao/texto_pdf_assinado_excluir_proc?cod_proposicao=${_codProposicao}`;
                msg = "Deseja realmente excluir o texto PDF assinado da proposição?";
            }

            this.showConfirmModal('Excluir Arquivo', msg, () => {
                this.mostrarToast('info', `<span class="spinner-border spinner-border-sm me-2"></span>Excluindo arquivo...`);
                fetch(url, { method: 'POST' })
                    .then(resp => resp.json())
                    .then(data => {
                        $('.toast').remove();
                        if (data.success) {
                            this.mostrarToast('sucesso', `<i class="fas fa-check-circle me-2"></i> ${data.message}`);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            this.mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> ${data.message}`);
                        }
                    })
                    .catch(err => {
                        $('.toast').remove();
                        this.mostrarToast('erro', `<i class="fas fa-exclamation-triangle me-2"></i> Erro ao excluir arquivo: ${err.message}`);
                    });
            });
        },

        // ========== PROPOSITION OPERATIONS ==========
        proposicaoExcluir: function() {
            if (!_codProposicao || _codProposicao === "missing") {
                this.showConfirmModal(
                    "Erro",
                    "Não foi possível identificar a proposição para exclusão.",
                    null,
                    null
                );
                return;
            }
            
            this.showConfirmModal(
                "Excluir Proposição",
                "Deseja realmente excluir esta proposição? Esta ação não poderá ser desfeita.",
                () => {
                    location.href = `proposicao_excluir_proc?cod_proposicao=${_codProposicao}`;
                },
                null,
                'btn-danger',
                'Sim, excluir'
            );
        },

        proposicaoEnviar: function() {
            if (!_codProposicao || _codProposicao === "missing") {
                this.showConfirmModal(
                    "Erro",
                    "Não foi possível identificar a proposição para envio.",
                    null,
                    null
                );
                return;
            }
        
            this.showConfirmModal(
                "Confirmação de Envio",
                "Ao enviar esta proposição, ela será encaminhada para análise e não poderá ser editada. " +
                "Além disso, qualquer solicitação de assinatura pendente será removida. Confirma o envio?",
                () => {
                     location.href = `proposicao_enviar_proc?hdn_cod_proposicao=${_codProposicao}`;
                 },
                 null,
                'btn-success',
                'Sim, enviar'
            );
        },

        proposicaoSolicitarDevolucao: function() {
            if (!_codProposicao || _codProposicao === "missing") {
                this.showConfirmModal(
                    "Erro",
                    "Não foi possível identificar a proposição para solicitar devolução.",
                    null,
                    null
                );
                return;
            }
            
            this.showConfirmModal(
                "Solicitar Devolução",
                "Deseja solicitar a devolução da proposição ao Autor? Esta solicitação precisará ser aprovada.",
                () => {
                    location.href = `proposicao_solicitar_devolucao_proc?cod_proposicao=${_codProposicao}`;
                },
                null,
                'btn-danger',
                'Solicitar Devolução'
            );
        },

        proposicaoRetomar: function() {
            if (!_codProposicao || _codProposicao === "missing") {
                this.showConfirmModal(
                    "Erro",
                    "Não foi possível identificar a proposição para reaproveitamento.",
                    null,
                    null
                );
                return;
            }
            
            this.showConfirmModal(
                "Reaproveitar Proposição",
                "Deseja reaproveitar esta proposição devolvida? Todas as informações serão mantidas.",
                () => {
                    location.href = `proposicao_retomar_proc?cod_proposicao=${_codProposicao}`;
                },
                null,
                'btn-success',
                'Reaproveitar Proposição'
            );
        },

        // ========== UI COMPONENTS ==========
        showConfirmModal: function(title, body, confirmAction, cancelAction, confirmBtnClass = 'btn-primary', confirmText = 'Confirmar') {
            const modalId = 'confirmationModal-' + Math.random().toString(36).substring(2, 9);
            const modalHtml = `
                <div class="modal fade" id="${modalId}" tabindex="-1" aria-labelledby="${modalId}Label" aria-hidden="true" role="dialog">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h2 class="modal-title" id="${modalId}Label">${title}</h2>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                            </div>
                            <div class="modal-body">
                                ${body}
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                                <button type="button" class="btn ${confirmBtnClass}" id="${modalId}-confirm-btn" autofocus>${confirmText}</button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            $(`#${modalId}`).remove();
            $('body').append(modalHtml);
            const $modal = $(`#${modalId}`);
            const modal = new bootstrap.Modal($modal[0]);
            modal.show();

            $modal.on('shown.bs.modal', () => {
                $(`#${modalId}-confirm-btn`).trigger('focus');
            });

            $(`#${modalId}-confirm-btn`).one('click', () => {
                if (typeof confirmAction === 'function') confirmAction();
                modal.hide();
            });

            $modal.on('hidden.bs.modal', () => {
                if (typeof cancelAction === 'function') cancelAction();
                $modal.remove();
            });
        },

        mostrarToast: function(tipo, mensagem) {
            let bg = 'bg-info';
            if (tipo === 'sucesso') bg = 'bg-success';
            else if (tipo === 'erro') bg = 'bg-danger';

            const toastHtml = `
               <div class="container-fluid">
                <div class="toast show align-items-center text-white ${bg} border-0" 
                     role="alert" aria-live="assertive" aria-atomic="true" 
                     style="position: fixed; bottom: 80px; right: 20px; z-index: 1100;">
                    <div class="d-flex">
                        <div class="toast-body">
                            ${mensagem}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" 
                                data-bs-dismiss="toast" aria-label="Fechar"></button>
                    </div>
                </div>
              </div>
            `;
            $('.toast').remove();
            $('body').append(toastHtml);
            setTimeout(() => $('.toast').fadeOut(500, () => $(this).remove()), 3500);
        },

        atualizarStatusProposicao: function() {
            const steps = {
                draft: { icon: 'fa-edit', label: 'Em elaboração', class: 'draft' },
                submitted: { icon: 'fa-paper-plane', label: 'Enviada', class: 'submitted' },
                received: { icon: 'fa-check-circle', label: 'Incorporada', class: 'received' },
                returned: { icon: 'fa-times-circle', label: 'Devolvida', class: 'returned' }
            };
            
            $('.step').removeClass('active completed');
            
            <dtml-if dat_recebimento>
                $('.step-draft, .step-submitted').addClass('completed');
                $('.step-received').addClass('active');
            <dtml-elif expr="dat_envio and not dat_devolucao">
                $('.step-draft').addClass('completed');
                $('.step-submitted').addClass('active');
            <dtml-elif expr="dat_devolucao">
                $('.step-draft, .step-submitted').addClass('completed');
                $('.step-returned').addClass('active');
            <dtml-else>
                $('.step-draft').addClass('active');
            </dtml-if>
        },

        // ========== FORM VALIDATION ==========
        camposCriticar: function(form) {
            if ($(form).data('submitting')) return false;
            $(form).data('submitting', true);
            $(form).find('.is-invalid').removeClass('is-invalid');
            $(form).find('.invalid-feedback').remove();
            $(form).find('button[type=submit], .btn-action').prop('disabled', true);

            let isValid = true;
            let firstInvalidField = null;

            const tipoProposicaoSelect = form.lst_tip_proposicao;
            if (tipoProposicaoSelect.selectedIndex === -1 || tipoProposicaoSelect.value === "") {
                $(tipoProposicaoSelect).addClass('is-invalid');
                $(tipoProposicaoSelect).closest('.form-group').append('<div class="invalid-feedback">Selecione um tipo de proposição</div>');
                if (!firstInvalidField) firstInvalidField = tipoProposicaoSelect;
                isValid = false;
            }
            
            const tipoProposicaoValue = tipoProposicaoSelect[tipoProposicaoSelect.selectedIndex].value;
            const desTipoProposicao = tipoProposicaoSelect.options[tipoProposicaoSelect.selectedIndex].text;

            if (['Requerimento', 'Indicação', 'Moção'].includes(desTipoProposicao)) {
                if (form.lst_assunto.selectedIndex === -1 || form.lst_assunto.value === '') {
                    $(form.lst_assunto).addClass('is-invalid');
                    $(form.lst_assunto).closest('.form-group').append('<div class="invalid-feedback">O assunto é obrigatório para este tipo de proposição</div>');
                    if (!firstInvalidField) firstInvalidField = form.lst_assunto;
                    isValid = false;
                }
            }
            
            if (desTipoProposicao === 'Indicação') {
                if (form.txt_num_cep.value === "") {
                    $(form.txt_num_cep).addClass('is-invalid');
                    $(form.txt_num_cep).closest('.form-group').append('<div class="invalid-feedback">O CEP é obrigatório para indicações</div>');
                    if (!firstInvalidField) firstInvalidField = form.txt_num_cep;
                    isValid = false;
                }
                
                const justificativa = form.txa_txt_justificativa.value;
                if (justificativa === "" || justificativa.trim() === "<p></p>") {
                    $(form.txa_txt_justificativa).addClass('is-invalid');
                    $(form.txa_txt_justificativa).closest('.form-group').append('<div class="invalid-feedback">A justificativa da indicação deve ser preenchida</div>');
                    if (!firstInvalidField) firstInvalidField = form.txa_txt_justificativa;
                    isValid = false;
                }
            } else {
                const ementa = form.txt_descricao.value;
                if (ementa === "" || ementa.trim() === "<p></p>") {
                    $(form.txt_descricao).addClass('is-invalid');
                    $(form.txt_descricao).closest('.form-group').append('<div class="invalid-feedback">A ementa da proposição deve ser preenchida</div>');
                    if (!firstInvalidField) firstInvalidField = form.txt_descricao;
                    isValid = false;
                }
                
                const indMatOuDoc = tipoProposicaoValue.split("&");
                if (indMatOuDoc[1] === 'D') {
                    if (form.lst_tip_id_basica.selectedIndex === -1 || form.lst_tip_id_basica.value === "" ||
                        form.txt_num_ident_basica.value === "" || form.txt_ano_ident_basica.value === "") {
                        $(form.lst_tip_id_basica).addClass('is-invalid');
                        $(form.txt_num_ident_basica).addClass('is-invalid');
                        $(form.txt_ano_ident_basica).addClass('is-invalid');
                        $('#divMatBody').append('<div class="invalid-feedback d-block">Informe tipo, número e ano da matéria vinculada</div>');
                        if (!firstInvalidField) firstInvalidField = form.lst_tip_id_basica;
                        isValid = false;
                    }
                }
            }

            if (!isValid) {
                $(form).find('button[type=submit], .btn-action').prop('disabled', false);
                $(form).data('submitting', false);
                
                if (firstInvalidField) {
                    const offset = _getTotalTopOffset();
                    $('html, body').animate({ scrollTop: $(firstInvalidField).offset().top - offset - 10 }, 500);
                    $(firstInvalidField).focus().addClass('animate-fade-in');
                    setTimeout(() => { $(firstInvalidField).removeClass('animate-fade-in'); }, 1000);
                }
                
                this.mostrarToast('erro', 'Corrija os campos destacados em vermelho.');
                return false;
            }

            form.hdn_tip_proposicao.value = tipoProposicaoValue.split("&")[0];
            $(form).find('button[type=submit], .btn-action').prop('disabled', true);
            form.submit();
        },

        // ========== IMAGE HANDLING ==========
        async enviarImagem(containerDiv, idx) {
            const fileInput = containerDiv.querySelector(`[name="file_nom_image${idx}"]`);
            const previewDiv = document.getElementById(`foto${idx}-preview`);
            const file = fileInput.files[0];
            if (!file) return;

            // Preview
            const reader = new FileReader();
            reader.onload = function(e) {
                previewDiv.innerHTML = `
                    <div class="text-center position-relative">
                        <img class="img-fluid img-thumbnail mb-2" src="${e.target.result}" style="max-height: 300px;">
                        <div class="position-absolute top-0 start-50 translate-middle-x mt-2">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Carregando...</span>
                            </div>
                        </div>
                    </div>
                `;
            };
            reader.readAsDataURL(file);

            const formData = new FormData();
            formData.append('cod_proposicao', _codProposicao);
            formData.append('indice', idx);
            formData.append(fileInput.name, file);

            try {
                const response = await fetch('salvar-imagem-proposicao', { method: 'POST', body: formData });
                if (!response.ok) throw new Error('Erro no servidor');
                const html = await response.text();
                previewDiv.innerHTML = html;

                this.mostrarToast('sucesso', '<i class="fas fa-check-circle me-2"></i> Fotografia salva com sucesso!');
            } catch (err) {
                previewDiv.innerHTML = `
                    <div class="alert alert-danger mb-2">
                        <i class="fas fa-exclamation-triangle me-2"></i> Erro ao enviar imagem: ${err.message}
                    </div>
                    <button class="btn btn-sm btn-secondary" onclick="location.reload()">
                        <i class="fas fa-sync-alt me-1"></i> Tentar novamente
                    </button>
                `;
            }
        },

        excluirImagem: function(idx) {
            this.showConfirmModal(
                "Excluir Imagem",
                "Deseja realmente excluir esta imagem? Esta ação não pode ser desfeita.",
                async () => {
                    const previewDiv = document.getElementById(`foto${idx}-preview`);
                    previewDiv.innerHTML = `
                        <div class="text-center p-3">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Carregando...</span>
                            </div>
                        </div>
                    `;
                    
                    try {
                        const response = await fetch('excluir-imagem-proposicao', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                            body: `cod_proposicao=${encodeURIComponent(_codProposicao)}&indice=${encodeURIComponent(idx)}`
                        });
                        
                        if (!response.ok) throw new Error('Erro no servidor');
                        
                        previewDiv.innerHTML = `
                            <div id="uploadForm${idx}" enctype="multipart/form-data">
                                <input type="hidden" name="indice" value="${idx}">
                                <input type="file" name="file_nom_image${idx}" class="form-control" accept="image/*" onchange="ProposicaoManager.enviarImagem(this.parentElement, ${idx})">
                                <div class="help-text mt-2">Formatos suportados: JPG, PNG, GIF. Tamanho máximo: 5MB.</div>
                            </div>
                        `;
                        
                        this.mostrarToast('sucesso', '<i class="fas fa-check-circle me-2"></i> Fotografia excluída com sucesso!');
                    } catch (err) {
                        previewDiv.innerHTML = `
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-triangle me-2"></i> Erro ao excluir imagem: ${err.message}
                            </div>
                            <button class="btn btn-sm btn-secondary" onclick="location.reload()">
                                <i class="fas fa-sync-alt me-1"></i> Tentar novamente
                            </button>
                        `;
                    }
                }
            );
        },

        // ========== OBSERVATION HANDLING ==========
        observacaoSalvar: function(formObservacao) {
            const editor = tinymce.get('txa_txt_observacao');
            let content = '';
            
            if (!editor) {
                content = formObservacao.txa_txt_observacao.value.trim();
            } else {
                content = editor.getContent()
                    .replace(/<p>&nbsp;<\/p>/g, '')
                    .replace(/<p><br><\/p>/g, '')
                    .replace(/<p><\/p>/g, '')
                    .replace(/<div><br><\/div>/g, '')
                    .trim();
            }
            
            if (content === "") {
                const target = editor ? $(editor.editorContainer) : $(formObservacao.txa_txt_observacao);
                target.addClass('is-invalid');
                target.closest('.form-group').append('<div class="invalid-feedback">A observação não pode estar vazia</div>');
                
                if (editor) {
                    editor.focus();
                } else {
                    formObservacao.txa_txt_observacao.focus();
                }
                
                return false;
            }
            
            if (editor) {
                editor.save();
            }
            
            formObservacao.submit();
        }
    };
})();

// Initialize on document ready
$(document).ready(function() {
    ProposicaoManager.init();
});

// Make some functions globally available
function tipo_proposicao_mudou() { ProposicaoManager.tipoProposicaoMudou(); }
function texto_pdf_gerar() { ProposicaoManager.textoPdfGerar(); }
function texto_odt_gerar() { ProposicaoManager.textoOdtGerar(); }
function excluir_arquivo(tipo) { ProposicaoManager.excluirArquivo(tipo); }
function proposicao_excluir() { ProposicaoManager.proposicaoExcluir(); }
function proposicao_enviar() { ProposicaoManager.proposicaoEnviar(); }
function proposicao_solicitar_devolucao() { ProposicaoManager.proposicaoSolicitarDevolucao(); }
function proposicao_retomar() { ProposicaoManager.proposicaoRetomar(); }
function campos_criticar(form) { return ProposicaoManager.camposCriticar(form); }
function observacao_salvar(formObservacao) { return ProposicaoManager.observacaoSalvar(formObservacao); }

// Incorporar (caso cod_proposicao)
<dtml-if cod_proposicao>
  <dtml-let cod_doc="pysc.proposicao_calcular_checksum_pysc(cod_proposicao)">
    function proposicao_incorporar() {
        const codDoc = '<dtml-var cod_doc missing>';
        if (!codDoc || codDoc === "missing") {
            ProposicaoManager.showConfirmModal(
                "Erro",
                "Não foi possível identificar a proposição para incorporação.",
                null,
                null
            );
            return;
        }
        ProposicaoManager.showConfirmModal(
            "Incorporar Proposição",
            "Confirma a incorporação desta proposição ao sistema? Esta ação não poderá ser desfeita.",
            function() {
                location.href = `<dtml-var portal_url>/cadastros/recebimento_proposicao/proposicao_buscar_proc?txtCodDoc=${codDoc}`;
            }
        );
    }
  </dtml-let>

$(document).ready(function () {
    $(document).on('click', '#master_table .add', function () {
        var row = $(this).closest('tr');
        var clone = row.clone();
        var tr = clone.closest('tr');
        $(this).closest('tr').after(clone);
        tr.find('input[type=text]').val('');
        tr.find('input[type=email]').val('');
        var $span = $("#master_table tr");
    });

    $(document).on('click', '#master_table .removeRow', function () {
        if ($('#master_table .add').length > 1) {
            $(this).closest('tr').remove();
        }

    });

});

function myFunction() {
    var form=$("#master_table").closest('form')
    $(form.prop('elements')).each(function(){
        var missing= $(this).val()===""
        $(this).parent().toggleClass('error',missing)
    })
    return form.find(".error").length==0
}

</dtml-if>
    $(function () {
        $("#postjq").click(function (event)
        {
            event.preventDefault();
            var $post = {};
            $post.lst_tip_proposicao = $("#lst_tip_proposicao option:selected").text();
            $post.lst_tip_id_basica = $('#lst_tip_id_basica').val();
            $post.txt_num_ident_basica = $('#txt_num_ident_basica').val();
            $post.txt_ano_ident_basica = $('#txt_ano_ident_basica').val();
            $.ajax({
                url: 'ementa_buscar_pysc',
                type: 'POST',
                data: $post,
                dataType: 'json',
                success:function(response){
                    var len = response.length;
                    $("#txt_descricao").empty();
                    for( var i = 0; i<len; i++){
                        var ementa = response[i]['ementa'];
                        $("#txt_descricao").val(ementa);
                    }
                }
            });
        });
    });
</script>
<dtml-var footer_html>
